<!DOCTYPE html>
<html itemscope="" itemtype="http://schema.org/QAPage"><head>
<meta http-equiv="content-type" content="text/html; charset=UTF-8">

<title>c# - Encrypt and decrypt a string - Stack Overflow</title>
    <link rel="shortcut icon" href="http://cdn.sstatic.net/stackoverflow/img/favicon.ico?v=6cd6089ee7f6">
    <link rel="apple-touch-icon image_src" href="http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon.png?v=41f6e13ade69">
    <link rel="search" type="application/opensearchdescription+xml" title="Stack Overflow" href="http://stackoverflow.com/opensearch.xml">
    <meta name="twitter:card" content="summary">
    <meta name="twitter:domain" content="stackoverflow.com">
    <meta property="og:type" content="website">
    <meta property="og:image" itemprop="image primaryImageOfPage" content="http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon@2.png?v=ea71a5211a91&amp;a">
    <meta name="twitter:title" property="og:title" itemprop="title name" content="Encrypt and decrypt a string">
    <meta name="twitter:description" property="og:description" itemprop="description" content="Can someone give me the code to encrypt and decrypt a string in C#?
">
    <meta property="og:url" content="http://stackoverflow.com/questions/202011/encrypt-and-decrypt-a-string">
    <link rel="canonical" href="http://stackoverflow.com/questions/202011/encrypt-and-decrypt-a-string">

    
    
    <script src="c%23%20-%20Encrypt%20and%20decrypt%20a%20string%20-%20Stack%20Overflow_files/quant.js" async=""></script><script src="c%23%20-%20Encrypt%20and%20decrypt%20a%20string%20-%20Stack%20Overflow_files/beacon.js" async=""></script><script src="c%23%20-%20Encrypt%20and%20decrypt%20a%20string%20-%20Stack%20Overflow_files/analytics.js" async=""></script><script src="c%23%20-%20Encrypt%20and%20decrypt%20a%20string%20-%20Stack%20Overflow_files/ados.js" async="" type="text/javascript"></script><script src="c%23%20-%20Encrypt%20and%20decrypt%20a%20string%20-%20Stack%20Overflow_files/jquery.js"></script>
    <script src="c%23%20-%20Encrypt%20and%20decrypt%20a%20string%20-%20Stack%20Overflow_files/stub.js"></script>
    <link rel="stylesheet" type="text/css" href="c%23%20-%20Encrypt%20and%20decrypt%20a%20string%20-%20Stack%20Overflow_files/all.css">

            <link rel="alternate" type="application/atom+xml" title="Feed for question 'Encrypt and decrypt a string'" href="http://stackoverflow.com/feeds/question/202011">
            <meta name="twitter:app:country" content="US">
            <meta name="twitter:app:name:iphone" content="Stack Exchange iOS">
            <meta name="twitter:app:id:iphone" content="871299723">
            <meta name="twitter:app:url:iphone" content="se-zaphod://stackoverflow.com/questions/202011/encrypt-and-decrypt-a-string">
            <meta name="twitter:app:name:ipad" content="Stack Exchange iOS">
            <meta name="twitter:app:id:ipad" content="871299723">
            <meta name="twitter:app:url:ipad" content="se-zaphod://stackoverflow.com/questions/202011/encrypt-and-decrypt-a-string">
            <meta name="twitter:app:name:googleplay" content="Stack Exchange Android">
            <meta name="twitter:app:url:googleplay" content="http://stackoverflow.com/questions/202011/encrypt-and-decrypt-a-string">
            <meta name="twitter:app:id:googleplay" content="com.stackexchange.marvin">
        <script>
        
            StackExchange.ready(function () {
                    
                    StackExchange.using("snippets", function () {
                        StackExchange.snippets.initSnippetRenderer();
                    });
                    

                StackExchange.using("postValidation", function () {
                    StackExchange.postValidation.initOnBlurAndSubmit($('#post-form'), 2, 'answer');
                });

                
                StackExchange.question.init({showAnswerHelp:true,totalCommentCount:9,shownCommentCount:5,highlightColor:'#F4A83D',backgroundColor:'#FFF',questionId:202011});

                styleCode();

                    StackExchange.realtime.subscribeToQuestion('1', '202011');
                                                                    StackExchange.using("gps", function () { StackExchange.gps.trackOutboundClicks('#content', '.post-text'); });

            });
        </script>


    <script>
        StackExchange.init({"locale":"en","stackAuthUrl":"https://stackauth.com","serverTime":1442321316,"networkMetaHostname":"meta.stackexchange.com","routeName":"Questions/Show","styleCode":true,"enableUserHovercards":true,"snippets":{"enabled":true,"domain":"stacksnippets.net"},"site":{"name":"Stack Overflow","description":"Q&A for professional and enthusiast programmers","isNoticesTabEnabled":true,"recaptchaPublicKey":"6LdchgIAAAAAAJwGpIzRQSOFaO0pU6s44Xt8aTwc","recaptchaAudioLang":"en","enableNewTagCreationWarning":true,"insertSpaceAfterNameTabCompletion":false,"globalAuthDisabled":true,"nonAsciiTags":true,"enableSocialMediaInSharePopup":true},"user":{"fkey":"b7e7976fbb54c69d1d266cdf69df6ce6","rep":0,"isAnonymous":true,"ab":{"tour_signup_openId":{"v":"a","g":2},"topbar_next_achievement":{"v":"a","g":2},"anon_popups":{"v":"a","g":1}}}});
        StackExchange.using.setCacheBreakers({"js/prettify-full.en.js":"508949dbff8c","js/moderator.en.js":"fd05b5e5215c","js/full-anon.en.js":"6378e1828c83","js/full.en.js":"d559570b712b","js/wmd.en.js":"d925ef03b6ff","js/third-party/jquery.autocomplete.min.js":"e5f01e97f7c3","js/third-party/jquery.autocomplete.min.en.js":"","js/mobile.en.js":"6a192298a99f","js/help.en.js":"79fd6664be3b","js/tageditor.en.js":"c84618a71b61","js/tageditornew.en.js":"603288fee21a","js/inline-tag-editing.en.js":"21223186b436","js/revisions.en.js":"9e897f24d78d","js/review.en.js":"175f1a2290a8","js/tagsuggestions.en.js":"d1ff9b84abe5","js/post-validation.en.js":"0033eb218768","js/explore-qlist.en.js":"09aaffd40eb0","js/events.en.js":"62be9096261f","js/keyboard-shortcuts.en.js":"5723034f33fc","js/external-editor.en.js":"85af40642312","js/external-editor.en.js":"85af40642312","js/snippet-javascript.en.js":"a31b1ccd5acc","js/snippet-javascript-codemirror.en.js":"007d30638796"});
        StackExchange.using("gps", function() {
             StackExchange.gps.init(true);
        });
    </script>
    
        <script>
            StackExchange.ready(function () {
                $('#nav-tour').click(function () {
                    StackExchange.using("gps", function() {
                        StackExchange.gps.track("aboutpage.click", { aboutclick_location: "headermain" }, true);
                    });
                });
            });
        </script>
    
    
</head>
<body class="question-page new-topbar">
    <noscript><div id="noscript-padding"></div></noscript>
    <div id="notify-container"></div>
    <div id="overlay-header"></div>
    <div id="custom-header"></div>




<div class="topbar">
    <div class="topbar-wrapper">

        <div class="js-topbar-dialog-corral">

<div class="topbar-dialog siteSwitcher-dialog dno">
    <div class="header">
        <h3><a href="http://stackoverflow.com/">current community</a></h3>
    </div>
    <div class="modal-content current-site-container">
        <ul class="current-site">
                <li>
                        <div class="related-links">
            <a href="http://chat.stackoverflow.com/" class="js-gps-track" data-gps-track="site_switcher.click({ item_type:6 })">chat</a>
                    <a href="http://blog.stackoverflow.com/" class="js-gps-track" data-gps-track="site_switcher.click({ item_type:7 })">blog</a>
            </div>




    <a href="http://stackoverflow.com/" class="current-site-link site-link js-gps-track" data-id="1" data-gps-track="
        site_switcher.click({ item_type:3 })">
        <div class="site-icon favicon favicon-stackoverflow" title="Stack Overflow"></div>
        Stack Overflow
    </a>

                </li>
                <li class="related-site">
                        <div class="L-shaped-icon-container">
        <span class="L-shaped-icon"></span>
    </div>

                    



    <a href="http://meta.stackoverflow.com/" class="site-link js-gps-track" data-id="552" data-gps-track="
            site.switch({ target_site:552, item_type:3 }),
        site_switcher.click({ item_type:4 })">
        <div class="site-icon favicon favicon-stackoverflowmeta" title="Meta Stack Overflow"></div>
        Meta Stack Overflow
    </a>

                </li>
                            <li class="related-site">
                        <div class="L-shaped-icon-container">
        <span class="L-shaped-icon"></span>
    </div>

                    <a class="site-link js-gps-track" href="http://careers.stackoverflow.com/?utm_source=stackoverflow.com&amp;utm_medium=site-ui&amp;utm_campaign=multicollider" data-gps-track="site_switcher.click({ item_type:9 })">
                        <div class="site-icon favicon favicon-careers" title="Stack Overflow Careers"></div>
                        Stack Overflow Careers
                    </a>
                </li>
        </ul>
    </div>
    
    <div class="header" id="your-communities-header">
        <h3>
your communities        </h3>
            
    </div>
    <div class="modal-content" id="your-communities-section">
            
            <div class="call-to-login">
<a href="https://stackoverflow.com/users/signup?ssrc=site_switcher&amp;returnurl=http%3a%2f%2fstackoverflow.com%2fquestions%2f202011%2fencrypt-and-decrypt-a-string" class="login-link js-gps-track" data-gps-track="site_switcher.click({ item_type:10 })">Sign up</a> or <a href="https://stackoverflow.com/users/login?ssrc=site_switcher&amp;returnurl=http%3a%2f%2fstackoverflow.com%2fquestions%2f202011%2fencrypt-and-decrypt-a-string" class="login-link js-gps-track" data-gps-track="site_switcher.click({ item_type:11 })">log in</a> to customize your list.
            </div>
    </div>
    
    <div class="header">
        <h3><a href="http://stackexchange.com/sites">more stack exchange communities</a></h3>
    </div>
    <div class="modal-content">
            <div class="child-content"></div>
    </div>
</div>
        </div>

        <div class="network-items">

            <a href="http://stackexchange.com/" class="topbar-icon icon-site-switcher yes-hover js-site-switcher-button js-gps-track" data-gps-track="site_switcher.show" title="A list of all 149 Stack Exchange sites">
                <span class="hidden-text">Stack Exchange</span>
            </a>

        </div>

        <div class="topbar-links">

                <div class="links-container">
                <span class="topbar-menu-links">
                                    <a href="https://stackoverflow.com/users/signup?ssrc=head&amp;returnurl=http%3a%2f%2fstackoverflow.com%2fquestions%2f202011%2fencrypt-and-decrypt-a-string" class="login-link">sign up</a>
                                <a href="https://stackoverflow.com/users/login?ssrc=head&amp;returnurl=http%3a%2f%2fstackoverflow.com%2fquestions%2f202011%2fencrypt-and-decrypt-a-string" class="login-link">log in</a>

                        <a href="http://stackoverflow.com/tour">tour</a>
                            <a href="#" class="icon-help js-help-button" title="Help Center and other resources">
        help
        <span class="triangle"></span>
    </a>
    <div class="topbar-dialog help-dialog js-help-dialog dno">
        <div class="modal-content">
            <ul>
                                    <li>
                        <a href="http://stackoverflow.com/tour" class="js-gps-track" data-gps-track="help_popup.click({ item_type:1 })">
                            Tour
                            <span class="item-summary">
                                Start here for a quick overview of the site
                            </span>
                        </a>
                    </li>
                <li>
                    <a href="http://stackoverflow.com/help" class="js-gps-track" data-gps-track="help_popup.click({ item_type:4 })">
                        Help Center
                        <span class="item-summary">
                            Detailed answers to any questions you might have
                        </span>
                    </a>
                </li>
                    <li>
                        <a href="http://meta.stackoverflow.com/" class="js-gps-track" data-gps-track="help_popup.click({ item_type:2 })">
                            Meta
                            <span class="item-summary">
                                Discuss the workings and policies of this site
                            </span>
                        </a>
                    </li>
            </ul>
        </div>
    </div>

                            <a href="http://careers.stackoverflow.com/?utm_source=stackoverflow.com&amp;utm_medium=site-ui&amp;utm_campaign=anon-topbar">stack overflow careers</a>
                    </span>
                </div>

            <div class="search-container">
                <form id="search" action="/search" method="get" autocomplete="off">
                    <input name="q" placeholder="search" tabindex="1" autocomplete="off" maxlength="240" type="text">
                </form>
            </div>

        </div>
    </div>
</div>
    <script>
        StackExchange.ready(function() { StackExchange.topbar.init(); });
    </script>

    <div class="container">
        <div id="header">
            <br class="cbt">
            <div id="hlogo">
                <a href="http://stackoverflow.com/">
                    Stack Overflow
                </a>
            </div>
            <div id="hmenus">
                <div class="nav mainnavs">
                    <ul>
                        <li class="youarehere"><a id="nav-questions" href="http://stackoverflow.com/questions">Questions</a></li>
                        <li><a id="nav-tags" href="http://stackoverflow.com/tags">Tags</a></li>
                        <li><a id="nav-users" href="http://stackoverflow.com/users">Users</a></li>
                        <li><a id="nav-badges" href="http://stackoverflow.com/help/badges">Badges</a></li>
                        <li><a id="nav-unanswered" href="http://stackoverflow.com/unanswered">Unanswered</a></li>
                    </ul>
                </div>
                <div class="nav askquestion">
                    <ul>
                        <li>
                            <a id="nav-askquestion" href="http://stackoverflow.com/questions/ask">Ask Question</a>
                        </li>
                    </ul>
                </div>
            </div>
        </div>
        

                <div id="system-message-temp">
                    <script>
                        var curSystemMessage = 'Ten. Million. Questions. Let\'s celebrate <a href="\/10m">all we\'ve done together<\/a>.';
                        $('#system-message-temp').html(curSystemMessage).attr('id', 'system-message');
                    </script>
                </div>


        <div id="content" class="snippet-hidden">
            

<div itemscope="" itemtype="http://schema.org/Question">
    <link itemprop="image" href="http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon.png?v=41f6e13ade69">
			<!--googleoff: all-->

<div id="herobox-mini">
    <div id="hero-content">
        <span id="controls">
            <a href="http://stackoverflow.com/tour" id="tell-me-more" class="button">Take the 2-minute tour</a>
            <span id="close"><a title="click to dismiss">×</a></span>
        </span>
        <div id="blurb">
            Stack Overflow is a question and answer site for professional and enthusiast programmers. It's 100% free.
        </div>        
    </div>
    <script>
        $('#tell-me-more').click(function () {
            var clickSource = $("body").attr("class") + '-mini';
            if ($("body").hasClass("questions-page")) {
                clickSource = 'questionpagemini';
            } else if ($("body").hasClass("question-page")) {
                clickSource = 'questionpagemini';
            } else if ($("body").hasClass("home-page")) {
                clickSource = 'homepagemini';
            }

            StackExchange.using("gps", function () {
                StackExchange.gps.track("aboutpage.click", { aboutclick_location: clickSource } , true);
            });
        });
        $('#herobox-mini #close').click(function () {
            StackExchange.using("gps", function () {
                StackExchange.gps.track("hero.action", { hero_action_type: "close" }, true);
            });
            $.cookie("hero", "none", { path: "/", expires: 365 });
            var $hero = $("#herobox-mini");
            $hero.slideUp('fast', function () { $hero.remove(); });
            return false;
        });
    </script>
</div>
			<!--googleon: all-->
			<div id="question-header">
                <h1 itemprop="name"><a href="http://stackoverflow.com/questions/202011/encrypt-and-decrypt-a-string" class="question-hyperlink">Encrypt and decrypt a string</a></h1>
		</div>
			<div id="mainbar">

			

<div class="question" data-questionid="202011" id="question">

    <script>
                var ados = ados || {}; ados.run = ados.run || [];
                ados.run.push(function () { ados_add_placement(22,8277,"adzerk1509823068",4).setZone(43); });
            </script>
            <div class="everyonelovesstackoverflow" id="adzerk1509823068">
            </div>    <table>
        <tbody><tr>
            <td class="votecell">
                

<div class="vote">
        <input name="_id_" value="202011" type="hidden">
        <a class="vote-up-off" title="This question shows research effort; it is useful and clear">up vote</a>
        <span itemprop="upvoteCount" class="vote-count-post ">337</span>
        <a class="vote-down-off" title="This question does not show any research effort; it is unclear or not useful">down vote</a>

        <a class="star-off" href="#" title="This is a favorite question (click again to undo)">favorite</a>
        <div class="favoritecount"><b>226</b></div>


</div>

            </td>
            
<td class="postcell">
<div>
    <div class="post-text" itemprop="text">

<p>Can someone give me the code to encrypt and decrypt a string in C#?</p>
    </div>
    <div class="post-taglist">
        <a href="http://stackoverflow.com/questions/tagged/c%23" class="post-tag" title="show questions tagged 'c#'" rel="tag">c#</a> <a href="http://stackoverflow.com/questions/tagged/.net" class="post-tag" title="show questions tagged '.net'" rel="tag">.net</a> <a href="http://stackoverflow.com/questions/tagged/encryption" class="post-tag" title="show questions tagged 'encryption'" rel="tag">encryption</a> <a href="http://stackoverflow.com/questions/tagged/mono" class="post-tag" title="show questions tagged 'mono'" rel="tag">mono</a> <a href="http://stackoverflow.com/questions/tagged/cryptography" class="post-tag" title="show questions tagged 'cryptography'" rel="tag">cryptography</a> 
    </div>
    <table class="fw">
    <tbody><tr>
    <td class="vt">
<div class="post-menu"><a href="http://stackoverflow.com/q/202011" title="short permalink to this question" class="short-link" id="link-post-202011">share</a><span class="lsep">|</span><a href="http://stackoverflow.com/posts/202011/edit" class="suggest-edit-post" title="">improve this question</a></div>        
    </td>
    <td class="post-signature" align="right">
<div class="user-info user-hover">
    <div class="user-action-time">
        <a href="http://stackoverflow.com/posts/202011/revisions" title="show all edits to this post">edited <span title="2014-03-16 01:58:48Z" class="relativetime">Mar 16 '14 at 1:58</span></a>
    </div>
    <div class="user-gravatar32">
        <a href="http://stackoverflow.com/users/2581872/hichris123"><div class="gravatar-wrapper-32"><img src="c%23%20-%20Encrypt%20and%20decrypt%20a%20string%20-%20Stack%20Overflow_files/6e9bd97f056b69257605104ac979918a.png" alt="" height="32" width="32"></div></a>
    </div>
    <div class="user-details">
        <a href="http://stackoverflow.com/users/2581872/hichris123">hichris123</a><br>
        <span class="reputation-score" title="reputation score " dir="ltr">5,600</span><span title="8 gold badges"><span class="badge1"></span><span class="badgecount">8</span></span><span title="26 silver badges"><span class="badge2"></span><span class="badgecount">26</span></span><span title="47 bronze badges"><span class="badge3"></span><span class="badgecount">47</span></span>
    </div>
</div>    </td>
    <td class="post-signature owner">
        <div class="user-info user-hover">
    <div class="user-action-time">
        asked <span title="2008-10-14 17:07:32Z" class="relativetime">Oct 14 '08 at 17:07</span>
    </div>
    <div class="user-gravatar32">
        <a href="http://stackoverflow.com/users/3291/notdan"><div class="gravatar-wrapper-32"><img src="c%23%20-%20Encrypt%20and%20decrypt%20a%20string%20-%20Stack%20Overflow_files/69d41e681eb0945a056ae1f28c10b1da.jpg" alt="" height="32" width="32"></div></a>
    </div>
    <div class="user-details">
        <a href="http://stackoverflow.com/users/3291/notdan">NotDan</a><br>
        <span class="reputation-score" title="reputation score 11222" dir="ltr">11.2k</span><span title="26 gold badges"><span class="badge1"></span><span class="badgecount">26</span></span><span title="87 silver badges"><span class="badge2"></span><span class="badgecount">87</span></span><span title="139 bronze badges"><span class="badge3"></span><span class="badgecount">139</span></span>
    </div>
</div>
    </td>
    </tr>
    </tbody></table>
</div>
</td>
        </tr>
                
<tr>
    <td class="votecell"></td>
    <td>
	    <div id="comments-202011" class="comments ">
		    <table>
                <tbody data-remaining-comments-count="4" data-canpost="false" data-cansee="true" data-comments-unavailable="false" data-addlink-disabled="true">



    <tr id="comment-15579884" class="comment ">
        <td class="comment-actions">
            <table>
                <tbody>
                    <tr>
                        <td class=" comment-score">
                                <span title="number of 'useful comment' votes received" class="warm">5</span>
                        </td>
                        <td>
                                &nbsp;
                        </td>
                    </tr>
                </tbody>
            </table>
        </td>
        <td class="comment-text">
            <div style="display: block;" class="comment-body">
                <span class="comment-copy">I have used this method in the past <a href="http://www.joshrharrison.com/archive/2009/01/28/c-encryption.aspx" rel="nofollow">C# encryption</a></span>
                –&nbsp;
                    <a href="http://stackoverflow.com/users/345391/josh-r-harrison" title="641 reputation" class="comment-user">Josh.R.Harrison</a>
                <span class="comment-date" dir="ltr"><span title="2010-05-19 20:22:48Z" class="relativetime-clean">May 19 '10 at 20:22</span></span>
                                                                            </div>
                    </td>
    </tr>
    <tr id="comment-15579881" class="comment ">
        <td class="comment-actions">
            <table>
                <tbody>
                    <tr>
                        <td class=" comment-score">
                                <span title="number of 'useful comment' votes received" class="cool">1</span>
                        </td>
                        <td>
                                &nbsp;
                        </td>
                    </tr>
                </tbody>
            </table>
        </td>
        <td class="comment-text">
            <div style="display: block;" class="comment-body">
                <span class="comment-copy">Check this link <a href="http://www.codeproject.com/KB/recipes/Encrypt_an_string.aspx" rel="nofollow">codeproject.com/KB/recipes/Encrypt_an_string.aspx</a></span>
                –&nbsp;
                    <a href="http://stackoverflow.com/users/196919/dimi" title="8684 reputation" class="comment-user">Dimi</a>
                <span class="comment-date" dir="ltr"><span title="2010-12-17 19:28:40Z" class="relativetime-clean">Dec 17 '10 at 19:28</span></span>
                                                                            </div>
                    </td>
    </tr>
    <tr id="comment-15579731" class="comment ">
        <td class="comment-actions">
            <table>
                <tbody>
                    <tr>
                        <td class=" comment-score">
                                <span title="number of 'useful comment' votes received" class="cool">1</span>
                        </td>
                        <td>
                                &nbsp;
                        </td>
                    </tr>
                </tbody>
            </table>
        </td>
        <td class="comment-text">
            <div style="display: block;" class="comment-body">
                <span class="comment-copy">Needed something simple... this link worked for me <a href="http://www.saipanyam.net/2010/03/encrypt-query-strings.html" rel="nofollow">saipanyam.net/2010/03/encrypt-query-strings.html</a></span>
                –&nbsp;
                    <a href="http://stackoverflow.com/users/54197/mrm" title="5444 reputation" class="comment-user">MrM</a>
                <span class="comment-date" dir="ltr"><span title="2011-04-18 20:31:25Z" class="relativetime-clean">Apr 18 '11 at 20:31</span></span>
                                                                            </div>
                    </td>
    </tr>
    <tr id="comment-20242686" class="comment ">
        <td class="comment-actions">
            <table>
                <tbody>
                    <tr>
                        <td class=" comment-score">
                                <span title="number of 'useful comment' votes received" class="cool">3</span>
                        </td>
                        <td>
                                &nbsp;
                        </td>
                    </tr>
                </tbody>
            </table>
        </td>
        <td class="comment-text">
            <div style="display: block;" class="comment-body">
                <span class="comment-copy">I would HIGHLY recommend 
dropping 3DES and using AES-GCM. AES-GCM is NOT found in .NET 4.5 crypto
 libs and IS different from 'usual AES' (=AES-CBC mode usually). AES-GCM
 is far better than 'usual' AES for cryptographic reason I won't go 
into. So <code>jbtule</code> has the best answer below under this <code>Bouncy Castle AES-GCM</code> subsection. If you don't believe us, at least trust the experts at the NSA (NSA Suite B @ <a href="http://www.nsa.gov/ia/programs/suiteb_cryptography/index.shtml" rel="nofollow">nsa.gov/ia/programs/suiteb_cryptography/index.shtml</a> : <code>The Galois/Counter Mode (GCM) is the preferred AES mode.</code>)</span>
                –&nbsp;
                    <a href="http://stackoverflow.com/users/862563/deepspace101" title="3136 reputation" class="comment-user">DeepSpace101</a>
                <span class="comment-date" dir="ltr"><span title="2013-01-25 09:45:16Z" class="relativetime-clean">Jan 25 '13 at 9:45</span></span>
                    <span class="edited-yes" title="this comment was edited 3 times"></span>
                                                                            </div>
                    </td>
    </tr>
    <tr id="comment-21284262" class="comment ">
        <td class="comment-actions">
            <table>
                <tbody>
                    <tr>
                        <td class=" comment-score">
                                <span title="number of 'useful comment' votes received" class="cool">1</span>
                        </td>
                        <td>
                                &nbsp;
                        </td>
                    </tr>
                </tbody>
            </table>
        </td>
        <td class="comment-text">
            <div style="display: block;" class="comment-body">
                <span class="comment-copy">@Sid Nonce reuse is a bad 
idea, yes. But I've seen it happen, even with competent 
programmers/cryptographers. If that happens, GCM breaks down totally, 
whereas CBC+HMAC only develops some minor weaknesses. With an SSL like 
protocol GCM is fine, but I'm not comfortable with it as the standard 
"encrypt&amp;authenticate" API.</span>
                –&nbsp;
                    <a href="http://stackoverflow.com/users/445517/codesinchaos" title="67601 reputation" class="comment-user">CodesInChaos</a>
                <span class="comment-date" dir="ltr"><span title="2013-02-27 21:54:24Z" class="relativetime-clean">Feb 27 '13 at 21:54</span></span>
                    <span class="edited-yes" title="this comment was edited 1 time"></span>
                                                                            </div>
                    </td>
    </tr>
                </tbody>
		    </table>
	    </div>

        <div id="comments-link-202011" data-rep="50" data-anon="true">

                <a class="js-add-link comments-link  dno" title="Use comments to ask for more information or suggest improvements. Avoid answering questions in comments."></a><span class="js-link-separator dno">&nbsp;|&nbsp;</span>
            <a class="js-show-link comments-link " title="expand to show all comments on this post" href="#" onclick="">show <b>4</b> more comments</a>
        </div>         
    </td>
</tr>        </tbody></table>
</div>

			<div id="answers">

				<a name="tab-top"></a>
				<div id="answers-header">
					<div class="subheader answers-subheader">
						<h2>
								18 Answers
                                <span style="display:none;" itemprop="answerCount">18</span>
						</h2>
						<div>
							<div id="tabs">
        <a href="http://stackoverflow.com/questions/202011/encrypt-and-decrypt-a-string?answertab=active#tab-top" data-nav-xhref="" title="Answers with the latest activity first" data-value="active">active</a>
        <a href="http://stackoverflow.com/questions/202011/encrypt-and-decrypt-a-string?answertab=oldest#tab-top" data-nav-xhref="" title="Answers in the order they were provided" data-value="oldest">oldest</a>
        <a class="youarehere" href="http://stackoverflow.com/questions/202011/encrypt-and-decrypt-a-string?answertab=votes#tab-top" data-nav-xhref="" title="Answers with the highest score first" data-value="votes">votes</a>
</div>
						</div>
					</div>    
				</div>    




  
<a name="2791259"></a>
<div id="answer-2791259" class="answer" data-answerid="2791259" itemscope="" itemtype="http://schema.org/Answer">

    <table>
        <tbody><tr>
            <td class="votecell">
                

<div class="vote">
        <input name="_id_" value="2791259" type="hidden">
        <a class="vote-up-off" title="This answer is useful">up vote</a>
        <span itemprop="upvoteCount" class="vote-count-post ">260</span>
        <a class="vote-down-off" title="This answer is not useful">down vote</a>




</div>

            </td>
            


<td class="answercell">
    <div class="post-text" itemprop="text">
<p><strong>EDIT 2013-Oct</strong>: Although I've edited this answer over time to address shortcomings, please see <a href="http://stackoverflow.com/a/10366194/157247">jbtule's answer</a> for a more robust, informed solution.</p>

<p><a href="http://stackoverflow.com/a/10366194/188474">http://stackoverflow.com/a/10366194/188474</a></p>

<p><strong>Original Answer:</strong></p>

<p>Here's a working example derived from the <a href="http://msdn.microsoft.com/en-us/library/system.security.cryptography.rijndaelmanaged%28v=VS.90%29.aspx">"RijndaelManaged Class" documentation</a> and the <a href="http://rads.stackoverflow.com/amzn/click/0735626197">MCTS Training Kit</a>.  </p>

<p><strong>EDIT 2012-April</strong>: This answer was edited to pre-pend the IV per jbtule's suggestion and as illustrated here:</p>

<p><a href="http://msdn.microsoft.com/en-us/library/system.security.cryptography.aesmanaged%28v=vs.95%29.aspx">http://msdn.microsoft.com/en-us/library/system.security.cryptography.aesmanaged%28v=vs.95%29.aspx</a></p>

<p>Good luck!</p>

<pre><code>public class Crypto
{
    private static byte[] _salt = Encoding.ASCII.GetBytes("o6806642kbM7c5");

    /// &lt;summary&gt;
    /// Encrypt the given string using AES.  The string can be decrypted using 
    /// DecryptStringAES().  The sharedSecret parameters must match.
    /// &lt;/summary&gt;
    /// &lt;param name="plainText"&gt;The text to encrypt.&lt;/param&gt;
    /// &lt;param name="sharedSecret"&gt;A password used to generate a key for encryption.&lt;/param&gt;
    public static string EncryptStringAES(string plainText, string sharedSecret)
    {
        if (string.IsNullOrEmpty(plainText))
            throw new ArgumentNullException("plainText");
        if (string.IsNullOrEmpty(sharedSecret))
            throw new ArgumentNullException("sharedSecret");

        string outStr = null;                       // Encrypted string to return
        RijndaelManaged aesAlg = null;              // RijndaelManaged object used to encrypt the data.

        try
        {
            // generate the key from the shared secret and the salt
            Rfc2898DeriveBytes key = new Rfc2898DeriveBytes(sharedSecret, _salt);

            // Create a RijndaelManaged object
            aesAlg = new RijndaelManaged();
            aesAlg.Key = key.GetBytes(aesAlg.KeySize / 8);

            // Create a decryptor to perform the stream transform.
            ICryptoTransform encryptor = aesAlg.CreateEncryptor(aesAlg.Key, aesAlg.IV);

            // Create the streams used for encryption.
            using (MemoryStream msEncrypt = new MemoryStream())
            {
                // prepend the IV
                msEncrypt.Write(BitConverter.GetBytes(aesAlg.IV.Length), 0, sizeof(int));
                msEncrypt.Write(aesAlg.IV, 0, aesAlg.IV.Length);
                using (CryptoStream csEncrypt = new CryptoStream(msEncrypt, encryptor, CryptoStreamMode.Write))
                {
                    using (StreamWriter swEncrypt = new StreamWriter(csEncrypt))
                    {
                        //Write all data to the stream.
                        swEncrypt.Write(plainText);
                    }
                }
                outStr = Convert.ToBase64String(msEncrypt.ToArray());
            }
        }
        finally
        {
            // Clear the RijndaelManaged object.
            if (aesAlg != null)
                aesAlg.Clear();
        }

        // Return the encrypted bytes from the memory stream.
        return outStr;
    }

    /// &lt;summary&gt;
    /// Decrypt the given string.  Assumes the string was encrypted using 
    /// EncryptStringAES(), using an identical sharedSecret.
    /// &lt;/summary&gt;
    /// &lt;param name="cipherText"&gt;The text to decrypt.&lt;/param&gt;
    /// &lt;param name="sharedSecret"&gt;A password used to generate a key for decryption.&lt;/param&gt;
    public static string DecryptStringAES(string cipherText, string sharedSecret)
    {
        if (string.IsNullOrEmpty(cipherText))
            throw new ArgumentNullException("cipherText");
        if (string.IsNullOrEmpty(sharedSecret))
            throw new ArgumentNullException("sharedSecret");

        // Declare the RijndaelManaged object
        // used to decrypt the data.
        RijndaelManaged aesAlg = null;

        // Declare the string used to hold
        // the decrypted text.
        string plaintext = null;

        try
        {
            // generate the key from the shared secret and the salt
            Rfc2898DeriveBytes key = new Rfc2898DeriveBytes(sharedSecret, _salt);

            // Create the streams used for decryption.                
            byte[] bytes = Convert.FromBase64String(cipherText);
            using (MemoryStream msDecrypt = new MemoryStream(bytes))
            {
                // Create a RijndaelManaged object
                // with the specified key and IV.
                aesAlg = new RijndaelManaged();
                aesAlg.Key = key.GetBytes(aesAlg.KeySize / 8);
                // Get the initialization vector from the encrypted stream
                aesAlg.IV = ReadByteArray(msDecrypt);
                // Create a decrytor to perform the stream transform.
                ICryptoTransform decryptor = aesAlg.CreateDecryptor(aesAlg.Key, aesAlg.IV);
                using (CryptoStream csDecrypt = new CryptoStream(msDecrypt, decryptor, CryptoStreamMode.Read))
                {
                    using (StreamReader srDecrypt = new StreamReader(csDecrypt))

                        // Read the decrypted bytes from the decrypting stream
                        // and place them in a string.
                        plaintext = srDecrypt.ReadToEnd();
                }
            }
        }
        finally
        {
            // Clear the RijndaelManaged object.
            if (aesAlg != null)
                aesAlg.Clear();
        }

        return plaintext;
    }

    private static byte[] ReadByteArray(Stream s)
    {
        byte[] rawLength = new byte[sizeof(int)];
        if (s.Read(rawLength, 0, rawLength.Length) != rawLength.Length)
        {
            throw new SystemException("Stream did not contain properly formatted byte array");
        }

        byte[] buffer = new byte[BitConverter.ToInt32(rawLength, 0)];
        if (s.Read(buffer, 0, buffer.Length) != buffer.Length)
        {
            throw new SystemException("Did not read byte array properly");
        }

        return buffer;
    }
}
</code></pre>
    </div>
    <table class="fw">
    <tbody><tr>
    <td class="vt">
<div class="post-menu"><a href="http://stackoverflow.com/a/2791259" title="short permalink to this answer" class="short-link" id="link-post-2791259">share</a><span class="lsep">|</span><a href="http://stackoverflow.com/posts/2791259/edit" class="suggest-edit-post" title="">improve this answer</a></div>                    </td>
    <td class="post-signature" align="right">
<div class="user-info user-hover">
    <div class="user-action-time">
        <a href="http://stackoverflow.com/posts/2791259/revisions" title="show all edits to this post">edited <span title="2014-12-13 10:00:28Z" class="relativetime">Dec 13 '14 at 10:00</span></a>
    </div>
    <div class="user-gravatar32">
        <a href="http://stackoverflow.com/users/157247/t-j-crowder"><div class="gravatar-wrapper-32"><img src="c%23%20-%20Encrypt%20and%20decrypt%20a%20string%20-%20Stack%20Overflow_files/ca3e484c121268e4c8302616b2395eb9.jpg" alt="" height="32" width="32"></div></a>
    </div>
    <div class="user-details">
        <a href="http://stackoverflow.com/users/157247/t-j-crowder">T.J. Crowder</a><br>
        <span class="reputation-score" title="reputation score 384218" dir="ltr">384k</span><span title="53 gold badges"><span class="badge1"></span><span class="badgecount">53</span></span><span title="577 silver badges"><span class="badge2"></span><span class="badgecount">577</span></span><span title="713 bronze badges"><span class="badge3"></span><span class="badgecount">713</span></span>
    </div>
</div>    </td>
            


    <td class="post-signature" align="right">   
       

    <div class="user-info user-hover">
    <div class="user-action-time">
        answered <span title="2010-05-07 19:41:33Z" class="relativetime">May 7 '10 at 19:41</span>
    </div>
    <div class="user-gravatar32">
        <a href="http://stackoverflow.com/users/188474/brett"><div class="gravatar-wrapper-32"><img src="c%23%20-%20Encrypt%20and%20decrypt%20a%20string%20-%20Stack%20Overflow_files/8fb4690adf138fe373a080c1c496724c.png" alt="" height="32" width="32"></div></a>
    </div>
    <div class="user-details">
        <a href="http://stackoverflow.com/users/188474/brett">Brett</a><br>
        <span class="reputation-score" title="reputation score " dir="ltr">4,059</span><span title="2 gold badges"><span class="badge1"></span><span class="badgecount">2</span></span><span title="12 silver badges"><span class="badge2"></span><span class="badgecount">12</span></span><span title="27 bronze badges"><span class="badge3"></span><span class="badgecount">27</span></span>
    </div>
</div>
    </td>
    </tr>
    </tbody></table>
</td>
        </tr>
        
<tr>
    <td class="votecell"></td>
    <td>
	    <div id="comments-2791259" class="comments ">
		    <table>
                <tbody data-remaining-comments-count="18" data-canpost="false" data-cansee="true" data-comments-unavailable="false" data-addlink-disabled="true">



    <tr id="comment-5370121" class="comment ">
        <td class="comment-actions">
            <table>
                <tbody>
                    <tr>
                        <td class=" comment-score">
                                <span title="number of 'useful comment' votes received" class="cool">1</span>
                        </td>
                        <td>
                                &nbsp;
                        </td>
                    </tr>
                </tbody>
            </table>
        </td>
        <td class="comment-text">
            <div style="display: block;" class="comment-body">
                <span class="comment-copy">To Bret - hi thx for your 
example. Maybye one think - I had issue with key leng - I did 
modification with MD5, so if somebody will use your example in the 
feature pls use this for key normalization(or you can use other hash 
algoritm:        HashAlgorithm hash = new MD5CryptoServiceProvider();   
             UnicodeEncoding UE = new UnicodeEncoding();                
byte[] key = hash.ComputeHash(UE.GetBytes(encrypt_password));        
ps:sorry for my english :)  slinti</span>
                –&nbsp;
		            <span class="comment-user">user593912</span>
                <span class="comment-date" dir="ltr"><span title="2011-01-29 16:19:05Z" class="relativetime-clean">Jan 29 '11 at 16:19</span></span>
                                                                            </div>
                    </td>
    </tr>
    <tr id="comment-13266026" class="comment ">
        <td class="comment-actions">
            <table>
                <tbody>
                    <tr>
                        <td class=" comment-score">
                                <span title="number of 'useful comment' votes received" class="cool">3</span>
                        </td>
                        <td>
                                &nbsp;
                        </td>
                    </tr>
                </tbody>
            </table>
        </td>
        <td class="comment-text">
            <div style="display: block;" class="comment-body">
                <span class="comment-copy">The above code is not secure,
 it breaks the most basic rule of semantic security with aes, you should
 NEVER use the same IV more than once with the same key. This always 
gives an identical IV every time you use the same key.</span>
                –&nbsp;
                    <a href="http://stackoverflow.com/users/637783/jbtule" title="14759 reputation" class="comment-user">jbtule</a>
                <span class="comment-date" dir="ltr"><span title="2012-04-24 22:54:55Z" class="relativetime-clean">Apr 24 '12 at 22:54</span></span>
                                                                            </div>
                    </td>
    </tr>
    <tr id="comment-13336090" class="comment ">
        <td class="comment-actions">
            <table>
                <tbody>
                    <tr>
                        <td class=" comment-score">
                                <span title="number of 'useful comment' votes received" class="cool">1</span>
                        </td>
                        <td>
                                &nbsp;
                        </td>
                    </tr>
                </tbody>
            </table>
        </td>
        <td class="comment-text">
            <div style="display: block;" class="comment-body">
                <span class="comment-copy">This is a good answer of <a href="http://crypto.stackexchange.com/a/2175/1934">how to use an IV</a>, that MCTS text is irresponsible and nonstandard.</span>
                –&nbsp;
                    <a href="http://stackoverflow.com/users/637783/jbtule" title="14759 reputation" class="comment-user">jbtule</a>
                <span class="comment-date" dir="ltr"><span title="2012-04-27 13:48:41Z" class="relativetime-clean">Apr 27 '12 at 13:48</span></span>
                                                                            </div>
                    </td>
    </tr>
    <tr id="comment-26736542" class="comment ">
        <td class="comment-actions">
            <table>
                <tbody>
                    <tr>
                        <td class=" comment-score">
                                <span title="number of 'useful comment' votes received" class="cool">3</span>
                        </td>
                        <td>
                                &nbsp;
                        </td>
                    </tr>
                </tbody>
            </table>
        </td>
        <td class="comment-text">
            <div style="display: block;" class="comment-body">
                <span class="comment-copy">Using a salt in the key-derivation process wouldn't hurt. A constant isn't a good salt, just like a constant isn't a good IV.</span>
                –&nbsp;
                    <a href="http://stackoverflow.com/users/445517/codesinchaos" title="67601 reputation" class="comment-user">CodesInChaos</a>
                <span class="comment-date" dir="ltr"><span title="2013-08-14 15:48:18Z" class="relativetime-clean">Aug 14 '13 at 15:48</span></span>
                                                                            </div>
                    </td>
    </tr>
    <tr id="comment-26736606" class="comment ">
        <td class="comment-actions">
            <table>
                <tbody>
                    <tr>
                        <td class=" comment-score">
                                <span title="number of 'useful comment' votes received" class="cool">2</span>
                        </td>
                        <td>
                                &nbsp;
                        </td>
                    </tr>
                </tbody>
            </table>
        </td>
        <td class="comment-text">
            <div style="display: block;" class="comment-body">
                <span class="comment-copy">Concerning the AES vs. 
Rijndael confusion: AES is a subset of Rijndael. If you use Rijndael 
with 128 bit blocks and either 128, 192 or 256 bit keys you're using 
AES.</span>
                –&nbsp;
                    <a href="http://stackoverflow.com/users/445517/codesinchaos" title="67601 reputation" class="comment-user">CodesInChaos</a>
                <span class="comment-date" dir="ltr"><span title="2013-08-14 15:50:08Z" class="relativetime-clean">Aug 14 '13 at 15:50</span></span>
                                                                            </div>
                    </td>
    </tr>
                </tbody>
		    </table>
	    </div>

        <div id="comments-link-2791259" data-rep="50" data-anon="true">

                <a class="js-add-link comments-link  dno" title="Use comments to ask for more information or suggest improvements. Avoid comments like “+1” or “thanks”."></a><span class="js-link-separator dno">&nbsp;|&nbsp;</span>
            <a class="js-show-link comments-link " title="expand to show all comments on this post" href="#" onclick="">show <b>18</b> more comments</a>
        </div>         
    </td>
</tr>    </tbody></table>
</div>
<div class="newsletter-anon">
    <img src="c%23%20-%20Encrypt%20and%20decrypt%20a%20string%20-%20Stack%20Overflow_files/apple-touch-icon.png" class="newsletter-logo">
    <div class="newsletter-container">
        <h2>Did you find this question interesting? Try our newsletter</h2>
        <p class="newsletter-description">
            Sign up for our newsletter and get our top new questions delivered to your inbox (<a href="http://stackexchange.com/newsletters/newsletter?site=stackoverflow.com" id="newsletter-preview">see an example</a>).
        </p>
        <form id="anon-newsletter-form" data-error="There was a problem signing up for the newsletter. Please try again later.">
            <input id="newsletter-email-input" placeholder="email address" title="your email address" type="email">
            <input value="Subscribe" id="newsletter-email-submit" type="submit">
        </form>
        <div style="margin-top: 10px; float:right;" class="dno cbt newsletter-status-confirmed">
            <b>Subscribed!</b>
        </div>
        <div style="margin-top: 10px; float:right;" class="dno cbt newsletter-status-unconfirmed">
            <b>Success!</b> Please click the link in the confirmation email to activate your subscription.
        </div>
    </div>
</div>

<script>
    StackExchange.ready(function () {
        StackExchange.newsletterAd.init();
    });

    $('#anon-newsletter-form').submit(function () {
        var $form = $(this);
        var $input = $form.find('#newsletter-email-input');
        var $submit = $form.find('#newsletter-email-submit');
        var $container = $form.closest('.newsletter-container');

        var email = $.trim($input.val());
        if (email.length == 0) {
            return false;
        }
        StackExchange.helpers.addSpinner($form);

        $.ajax({
            url: '/newsletter/signup/anon',
            type: 'POST',
            dataType: 'json',
            data: { email: email, viaAnonNewsletterAd: true },
            success: function (data) {
                if (!data.error && (data.status == 'confirmed' || data.status == 'unconfirmed')) {
                    $input.attr('disabled', true);
                    $submit.remove();
                    $container.find('.newsletter-status-' + data.status).show();
                }
                else {
                    $container.showErrorMessage(data.error || $form.data('error'));
                }
            },
            error: function () {
                $container.showErrorMessage($form.data('error'));
            },
            complete: function () {
                StackExchange.helpers.removeSpinner($form);
            }
        });

        return false;
    });
</script>
  
<a name="10366194"></a>
<div id="answer-10366194" class="answer" data-answerid="10366194" itemscope="" itemtype="http://schema.org/Answer">

    <table>
        <tbody><tr>
            <td class="votecell">
                

<div class="vote">
        <input name="_id_" value="10366194" type="hidden">
        <a class="vote-up-off" title="This answer is useful">up vote</a>
        <span itemprop="upvoteCount" class="vote-count-post ">141</span>
        <a class="vote-down-off" title="This answer is not useful">down vote</a>




</div>

            </td>
            


<td class="answercell">
    <div class="post-text" itemprop="text">
<p><strong>Modern Examples of Symmetric Authenticated Encryption of a string.</strong> </p>

<p>The general best practice for symmetric encryption is to use 
Authenticated Encryption with Associated Data (AEAD), however this isn't
 a part of the standard .net crypto libraries. So the first example uses
 <a href="http://en.wikipedia.org/wiki/Advanced_Encryption_Standard">AES256</a> and then <a href="http://en.wikipedia.org/wiki/HMAC">HMAC256</a>, a two step <a href="http://crypto.stackexchange.com/a/205/1934">Encrypt then MAC</a>, which requires more overhead and more keys.</p>

<p>The second example uses the simpler practice of AES256-<a href="http://en.wikipedia.org/wiki/Galois/Counter_Mode">GCM</a> using the open source Bouncy Castle (via nuget).</p>

<p>Both examples have a main function that takes secret message string, 
key(s) and an optional non-secret payload and return and authenticated 
encrypted string optionally prepended with the non-secret data. Ideally 
you would use these with 256bit key(s) randomly generated see <code>NewKey()</code>.</p>

<p>Both examples also have a helper methods that use a string password 
to generate the keys. These helper methods are provided as a convenience
 to match up with other examples, however they are <em>far less secure</em> because the strength of the password is going to be <em>far weaker than a 256 bit key</em>.</p>

<p><strong>Update:</strong>
Added <code>byte[]</code> overloads, and only the <a href="https://gist.github.com/4336842">Gist</a> has the full formatting with 4 spaces indent and api docs due to StackOverflow answer limits.</p>

<hr>

<p><strong>.NET Built-in Encrypt(AES)-Then-MAC(HMAC) <a href="https://gist.github.com/jbtule/4336842#file-aesthenhmac-cs">[Gist]</a></strong></p>

<pre><code>/*
 * This work (Modern Encryption of a String C#, by James Tuley), 
 * identified by James Tuley, is free of known copyright restrictions.
 * https://gist.github.com/4336842
 * http://creativecommons.org/publicdomain/mark/1.0/ 
 */

using System;
using System.IO;
using System.Security.Cryptography;
using System.Text;

namespace Encryption
{
  public static class AESThenHMAC
  {
    private static readonly RandomNumberGenerator Random = RandomNumberGenerator.Create();

    //Preconfigured Encryption Parameters
    public static readonly int BlockBitSize = 128;
    public static readonly int KeyBitSize = 256;

    //Preconfigured Password Key Derivation Parameters
    public static readonly int SaltBitSize = 64;
    public static readonly int Iterations = 10000;
    public static readonly int MinPasswordLength = 12;

    /// &lt;summary&gt;
    /// Helper that generates a random key on each call.
    /// &lt;/summary&gt;
    /// &lt;returns&gt;&lt;/returns&gt;
    public static byte[] NewKey()
    {
      var key = new byte[KeyBitSize / 8];
      Random.GetBytes(key);
      return key;
    }

    /// &lt;summary&gt;
    /// Simple Encryption (AES) then Authentication (HMAC) for a UTF8 Message.
    /// &lt;/summary&gt;
    /// &lt;param name="secretMessage"&gt;The secret message.&lt;/param&gt;
    /// &lt;param name="cryptKey"&gt;The crypt key.&lt;/param&gt;
    /// &lt;param name="authKey"&gt;The auth key.&lt;/param&gt;
    /// &lt;param name="nonSecretPayload"&gt;(Optional) Non-Secret Payload.&lt;/param&gt;
    /// &lt;returns&gt;
    /// Encrypted Message
    /// &lt;/returns&gt;
    /// &lt;exception cref="System.ArgumentException"&gt;Secret Message Required!;secretMessage&lt;/exception&gt;
    /// &lt;remarks&gt;
    /// Adds overhead of (Optional-Payload + BlockSize(16) + Message-Padded-To-Blocksize +  HMac-Tag(32)) * 1.33 Base64
    /// &lt;/remarks&gt;
    public static string SimpleEncrypt(string secretMessage, byte[] cryptKey, byte[] authKey,
                       byte[] nonSecretPayload = null)
    {
      if (string.IsNullOrEmpty(secretMessage))
        throw new ArgumentException("Secret Message Required!", "secretMessage");

      var plainText = Encoding.UTF8.GetBytes(secretMessage);
      var cipherText = SimpleEncrypt(plainText, cryptKey, authKey, nonSecretPayload);
      return Convert.ToBase64String(cipherText);
    }

    /// &lt;summary&gt;
    /// Simple Authentication (HMAC) then Decryption (AES) for a secrets UTF8 Message.
    /// &lt;/summary&gt;
    /// &lt;param name="encryptedMessage"&gt;The encrypted message.&lt;/param&gt;
    /// &lt;param name="cryptKey"&gt;The crypt key.&lt;/param&gt;
    /// &lt;param name="authKey"&gt;The auth key.&lt;/param&gt;
    /// &lt;param name="nonSecretPayloadLength"&gt;Length of the non secret payload.&lt;/param&gt;
    /// &lt;returns&gt;
    /// Decrypted Message
    /// &lt;/returns&gt;
    /// &lt;exception cref="System.ArgumentException"&gt;Encrypted Message Required!;encryptedMessage&lt;/exception&gt;
    public static string SimpleDecrypt(string encryptedMessage, byte[] cryptKey, byte[] authKey,
                       int nonSecretPayloadLength = 0)
    {
      if (string.IsNullOrWhiteSpace(encryptedMessage))
        throw new ArgumentException("Encrypted Message Required!", "encryptedMessage");

      var cipherText = Convert.FromBase64String(encryptedMessage);
      var plainText = SimpleDecrypt(cipherText, cryptKey, authKey, nonSecretPayloadLength);
      return plainText == null ? null : Encoding.UTF8.GetString(plainText);
    }

    /// &lt;summary&gt;
    /// Simple Encryption (AES) then Authentication (HMAC) of a UTF8 message
    /// using Keys derived from a Password (PBKDF2).
    /// &lt;/summary&gt;
    /// &lt;param name="secretMessage"&gt;The secret message.&lt;/param&gt;
    /// &lt;param name="password"&gt;The password.&lt;/param&gt;
    /// &lt;param name="nonSecretPayload"&gt;The non secret payload.&lt;/param&gt;
    /// &lt;returns&gt;
    /// Encrypted Message
    /// &lt;/returns&gt;
    /// &lt;exception cref="System.ArgumentException"&gt;password&lt;/exception&gt;
    /// &lt;remarks&gt;
    /// Significantly less secure than using random binary keys.
    /// Adds additional non secret payload for key generation parameters.
    /// &lt;/remarks&gt;
    public static string SimpleEncryptWithPassword(string secretMessage, string password,
                             byte[] nonSecretPayload = null)
    {
      if (string.IsNullOrEmpty(secretMessage))
        throw new ArgumentException("Secret Message Required!", "secretMessage");

      var plainText = Encoding.UTF8.GetBytes(secretMessage);
      var cipherText = SimpleEncryptWithPassword(plainText, password, nonSecretPayload);
      return Convert.ToBase64String(cipherText);
    }

    /// &lt;summary&gt;
    /// Simple Authentication (HMAC) and then Descryption (AES) of a UTF8 Message
    /// using keys derived from a password (PBKDF2). 
    /// &lt;/summary&gt;
    /// &lt;param name="encryptedMessage"&gt;The encrypted message.&lt;/param&gt;
    /// &lt;param name="password"&gt;The password.&lt;/param&gt;
    /// &lt;param name="nonSecretPayloadLength"&gt;Length of the non secret payload.&lt;/param&gt;
    /// &lt;returns&gt;
    /// Decrypted Message
    /// &lt;/returns&gt;
    /// &lt;exception cref="System.ArgumentException"&gt;Encrypted Message Required!;encryptedMessage&lt;/exception&gt;
    /// &lt;remarks&gt;
    /// Significantly less secure than using random binary keys.
    /// &lt;/remarks&gt;
    public static string SimpleDecryptWithPassword(string encryptedMessage, string password,
                             int nonSecretPayloadLength = 0)
    {
      if (string.IsNullOrWhiteSpace(encryptedMessage))
        throw new ArgumentException("Encrypted Message Required!", "encryptedMessage");

      var cipherText = Convert.FromBase64String(encryptedMessage);
      var plainText = SimpleDecryptWithPassword(cipherText, password, nonSecretPayloadLength);
      return plainText == null ? null : Encoding.UTF8.GetString(plainText);
    }

    public static byte[] SimpleEncrypt(byte[] secretMessage, byte[] cryptKey, byte[] authKey, byte[] nonSecretPayload = null)
    {
      //User Error Checks
      if (cryptKey == null || cryptKey.Length != KeyBitSize / 8)
        throw new ArgumentException(String.Format("Key needs to be {0} bit!", KeyBitSize), "cryptKey");

      if (authKey == null || authKey.Length != KeyBitSize / 8)
        throw new ArgumentException(String.Format("Key needs to be {0} bit!", KeyBitSize), "authKey");

      if (secretMessage == null || secretMessage.Length &lt; 1)
        throw new ArgumentException("Secret Message Required!", "secretMessage");

      //non-secret payload optional
      nonSecretPayload = nonSecretPayload ?? new byte[] { };

      byte[] cipherText;
      byte[] iv;

      using (var aes = new AesManaged
      {
        KeySize = KeyBitSize,
        BlockSize = BlockBitSize,
        Mode = CipherMode.CBC,
        Padding = PaddingMode.PKCS7
      })
      {

        //Use random IV
        aes.GenerateIV();
        iv = aes.IV;

        using (var encrypter = aes.CreateEncryptor(cryptKey, iv))
        using (var cipherStream = new MemoryStream())
        {
          using (var cryptoStream = new CryptoStream(cipherStream, encrypter, CryptoStreamMode.Write))
          using (var binaryWriter = new BinaryWriter(cryptoStream))
          {
            //Encrypt Data
            binaryWriter.Write(secretMessage);
          }

          cipherText = cipherStream.ToArray();
        }

      }

      //Assemble encrypted message and add authentication
      using (var hmac = new HMACSHA256(authKey))
      using (var encryptedStream = new MemoryStream())
      {
        using (var binaryWriter = new BinaryWriter(encryptedStream))
        {
          //Prepend non-secret payload if any
          binaryWriter.Write(nonSecretPayload);
          //Prepend IV
          binaryWriter.Write(iv);
          //Write Ciphertext
          binaryWriter.Write(cipherText);
          binaryWriter.Flush();

          //Authenticate all data
          var tag = hmac.ComputeHash(encryptedStream.ToArray());
          //Postpend tag
          binaryWriter.Write(tag);
        }
        return encryptedStream.ToArray();
      }

    }

    public static byte[] SimpleDecrypt(byte[] encryptedMessage, byte[] cryptKey, byte[] authKey, int nonSecretPayloadLength = 0)
    {

      //Basic Usage Error Checks
      if (cryptKey == null || cryptKey.Length != KeyBitSize / 8)
        throw new ArgumentException(String.Format("CryptKey needs to be {0} bit!", KeyBitSize), "cryptKey");

      if (authKey == null || authKey.Length != KeyBitSize / 8)
        throw new ArgumentException(String.Format("AuthKey needs to be {0} bit!", KeyBitSize), "authKey");

      if (encryptedMessage == null || encryptedMessage.Length == 0)
        throw new ArgumentException("Encrypted Message Required!", "encryptedMessage");

      using (var hmac = new HMACSHA256(authKey))
      {
        var sentTag = new byte[hmac.HashSize / 8];
        //Calculate Tag
        var calcTag = hmac.ComputeHash(encryptedMessage, 0, encryptedMessage.Length - sentTag.Length);
        var ivLength = (BlockBitSize / 8);

        //if message length is to small just return null
        if (encryptedMessage.Length &lt; sentTag.Length + nonSecretPayloadLength + ivLength)
          return null;

        //Grab Sent Tag
        Array.Copy(encryptedMessage, encryptedMessage.Length - sentTag.Length, sentTag, 0, sentTag.Length);

        //Compare Tag with constant time comparison
        var compare = 0;
        for (var i = 0; i &lt; sentTag.Length; i++)
          compare |= sentTag[i] ^ calcTag[i]; 

        //if message doesn't authenticate return null
        if (compare != 0)
          return null;

        using (var aes = new AesManaged
        {
          KeySize = KeyBitSize,
          BlockSize = BlockBitSize,
          Mode = CipherMode.CBC,
          Padding = PaddingMode.PKCS7
        })
        {

          //Grab IV from message
          var iv = new byte[ivLength];
          Array.Copy(encryptedMessage, nonSecretPayloadLength, iv, 0, iv.Length);

          using (var decrypter = aes.CreateDecryptor(cryptKey, iv))
          using (var plainTextStream = new MemoryStream())
          {
            using (var decrypterStream = new CryptoStream(plainTextStream, decrypter, CryptoStreamMode.Write))
            using (var binaryWriter = new BinaryWriter(decrypterStream))
            {
              //Decrypt Cipher Text from Message
              binaryWriter.Write(
                encryptedMessage,
                nonSecretPayloadLength + iv.Length,
                encryptedMessage.Length - nonSecretPayloadLength - iv.Length - sentTag.Length
              );
            }
            //Return Plain Text
            return plainTextStream.ToArray();
          }
        }
      }
    }

    public static byte[] SimpleEncryptWithPassword(byte[] secretMessage, string password, byte[] nonSecretPayload = null)
    {
      nonSecretPayload = nonSecretPayload ?? new byte[] {};

      //User Error Checks
      if (string.IsNullOrWhiteSpace(password) || password.Length &lt; MinPasswordLength)
        throw new ArgumentException(String.Format("Must have a password of at least {0} characters!", MinPasswordLength), "password");

      if (secretMessage == null || secretMessage.Length ==0)
        throw new ArgumentException("Secret Message Required!", "secretMessage");

      var payload = new byte[((SaltBitSize / 8) * 2) + nonSecretPayload.Length];

      Array.Copy(nonSecretPayload, payload, nonSecretPayload.Length);
      int payloadIndex = nonSecretPayload.Length;

      byte[] cryptKey;
      byte[] authKey;
      //Use Random Salt to prevent pre-generated weak password attacks.
      using (var generator = new Rfc2898DeriveBytes(password, SaltBitSize / 8, Iterations))
      {
        var salt = generator.Salt;

        //Generate Keys
        cryptKey = generator.GetBytes(KeyBitSize / 8);

        //Create Non Secret Payload
        Array.Copy(salt, 0, payload, payloadIndex, salt.Length);
        payloadIndex += salt.Length;
      }

      //Deriving separate key, might be less efficient than using HKDF, 
      //but now compatible with RNEncryptor which had a very similar wireformat and requires less code than HKDF.
      using (var generator = new Rfc2898DeriveBytes(password, SaltBitSize / 8, Iterations))
      {
        var salt = generator.Salt;

        //Generate Keys
        authKey = generator.GetBytes(KeyBitSize / 8);

        //Create Rest of Non Secret Payload
        Array.Copy(salt, 0, payload, payloadIndex, salt.Length);
      }

      return SimpleEncrypt(secretMessage, cryptKey, authKey, payload);
    }

    public static byte[] SimpleDecryptWithPassword(byte[] encryptedMessage, string password, int nonSecretPayloadLength = 0)
    {
      //User Error Checks
      if (string.IsNullOrWhiteSpace(password) || password.Length &lt; MinPasswordLength)
        throw new ArgumentException(String.Format("Must have a password of at least {0} characters!", MinPasswordLength), "password");

      if (encryptedMessage == null || encryptedMessage.Length == 0)
        throw new ArgumentException("Encrypted Message Required!", "encryptedMessage");

      var cryptSalt = new byte[SaltBitSize / 8];
      var authSalt = new byte[SaltBitSize / 8];

      //Grab Salt from Non-Secret Payload
      Array.Copy(encryptedMessage, nonSecretPayloadLength, cryptSalt, 0, cryptSalt.Length);
      Array.Copy(encryptedMessage, nonSecretPayloadLength + cryptSalt.Length, authSalt, 0, authSalt.Length);

      byte[] cryptKey;
      byte[] authKey;

      //Generate crypt key
      using (var generator = new Rfc2898DeriveBytes(password, cryptSalt, Iterations))
      {
        cryptKey = generator.GetBytes(KeyBitSize / 8);
      }
      //Generate auth key
      using (var generator = new Rfc2898DeriveBytes(password, authSalt, Iterations))
      {
        authKey = generator.GetBytes(KeyBitSize / 8);
      }

      return SimpleDecrypt(encryptedMessage, cryptKey, authKey, cryptSalt.Length + authSalt.Length + nonSecretPayloadLength);
    }
  }
}
</code></pre>

<hr>

<p><strong>Bouncy Castle AES-GCM <a href="https://gist.github.com/jbtule/4336842#file-aesgcm-cs">[Gist]</a></strong></p>

<pre><code>/*
 * This work (Modern Encryption of a String C#, by James Tuley), 
 * identified by James Tuley, is free of known copyright restrictions.
 * https://gist.github.com/4336842
 * http://creativecommons.org/publicdomain/mark/1.0/ 
 */

using System;
using System.IO;
using System.Text;
using Org.BouncyCastle.Crypto;
using Org.BouncyCastle.Crypto.Engines;
using Org.BouncyCastle.Crypto.Generators;
using Org.BouncyCastle.Crypto.Modes;
using Org.BouncyCastle.Crypto.Parameters;
using Org.BouncyCastle.Security;
namespace Encryption
{

  public static class AESGCM
  {
    private static readonly SecureRandom Random = new SecureRandom();

    //Preconfigured Encryption Parameters
    public static readonly int NonceBitSize = 128;
    public static readonly int MacBitSize = 128;
    public static readonly int KeyBitSize = 256;

    //Preconfigured Password Key Derivation Parameters
    public static readonly int SaltBitSize = 128;
    public static readonly int Iterations = 10000;
    public static readonly int MinPasswordLength = 12;


    /// &lt;summary&gt;
    /// Helper that generates a random new key on each call.
    /// &lt;/summary&gt;
    /// &lt;returns&gt;&lt;/returns&gt;
    public static byte[] NewKey()
    {
      var key = new byte[KeyBitSize / 8];
      Random.NextBytes(key);
      return key;
    }

    /// &lt;summary&gt;
    /// Simple Encryption And Authentication (AES-GCM) of a UTF8 string.
    /// &lt;/summary&gt;
    /// &lt;param name="secretMessage"&gt;The secret message.&lt;/param&gt;
    /// &lt;param name="key"&gt;The key.&lt;/param&gt;
    /// &lt;param name="nonSecretPayload"&gt;Optional non-secret payload.&lt;/param&gt;
    /// &lt;returns&gt;
    /// Encrypted Message
    /// &lt;/returns&gt;
    /// &lt;exception cref="System.ArgumentException"&gt;Secret Message Required!;secretMessage&lt;/exception&gt;
    /// &lt;remarks&gt;
    /// Adds overhead of (Optional-Payload + BlockSize(16) + Message +  HMac-Tag(16)) * 1.33 Base64
    /// &lt;/remarks&gt;
    public static string SimpleEncrypt(string secretMessage, byte[] key, byte[] nonSecretPayload = null)
    {
      if (string.IsNullOrEmpty(secretMessage))
        throw new ArgumentException("Secret Message Required!", "secretMessage");

      var plainText = Encoding.UTF8.GetBytes(secretMessage);
      var cipherText = SimpleEncrypt(plainText, key, nonSecretPayload);
      return Convert.ToBase64String(cipherText);
    }


    /// &lt;summary&gt;
    /// Simple Decryption &amp; Authentication (AES-GCM) of a UTF8 Message
    /// &lt;/summary&gt;
    /// &lt;param name="encryptedMessage"&gt;The encrypted message.&lt;/param&gt;
    /// &lt;param name="key"&gt;The key.&lt;/param&gt;
    /// &lt;param name="nonSecretPayloadLength"&gt;Length of the optional non-secret payload.&lt;/param&gt;
    /// &lt;returns&gt;Decrypted Message&lt;/returns&gt;
    public static string SimpleDecrypt(string encryptedMessage, byte[] key, int nonSecretPayloadLength = 0)
    {
      if (string.IsNullOrEmpty(encryptedMessage))
        throw new ArgumentException("Encrypted Message Required!", "encryptedMessage");

      var cipherText = Convert.FromBase64String(encryptedMessage);
      var plainText = SimpleDecrypt(cipherText, key, nonSecretPayloadLength);
      return plainText == null ? null : Encoding.UTF8.GetString(plainText);
    }

    /// &lt;summary&gt;
    /// Simple Encryption And Authentication (AES-GCM) of a UTF8 String
    /// using key derived from a password (PBKDF2).
    /// &lt;/summary&gt;
    /// &lt;param name="secretMessage"&gt;The secret message.&lt;/param&gt;
    /// &lt;param name="password"&gt;The password.&lt;/param&gt;
    /// &lt;param name="nonSecretPayload"&gt;The non secret payload.&lt;/param&gt;
    /// &lt;returns&gt;
    /// Encrypted Message
    /// &lt;/returns&gt;
    /// &lt;remarks&gt;
    /// Significantly less secure than using random binary keys.
    /// Adds additional non secret payload for key generation parameters.
    /// &lt;/remarks&gt;
    public static string SimpleEncryptWithPassword(string secretMessage, string password,
                             byte[] nonSecretPayload = null)
    {
      if (string.IsNullOrEmpty(secretMessage))
        throw new ArgumentException("Secret Message Required!", "secretMessage");

      var plainText = Encoding.UTF8.GetBytes(secretMessage);
      var cipherText = SimpleEncryptWithPassword(plainText, password, nonSecretPayload);
      return Convert.ToBase64String(cipherText);
    }


    /// &lt;summary&gt;
    /// Simple Decryption and Authentication (AES-GCM) of a UTF8 message
    /// using a key derived from a password (PBKDF2)
    /// &lt;/summary&gt;
    /// &lt;param name="encryptedMessage"&gt;The encrypted message.&lt;/param&gt;
    /// &lt;param name="password"&gt;The password.&lt;/param&gt;
    /// &lt;param name="nonSecretPayloadLength"&gt;Length of the non secret payload.&lt;/param&gt;
    /// &lt;returns&gt;
    /// Decrypted Message
    /// &lt;/returns&gt;
    /// &lt;exception cref="System.ArgumentException"&gt;Encrypted Message Required!;encryptedMessage&lt;/exception&gt;
    /// &lt;remarks&gt;
    /// Significantly less secure than using random binary keys.
    /// &lt;/remarks&gt;
    public static string SimpleDecryptWithPassword(string encryptedMessage, string password,
                             int nonSecretPayloadLength = 0)
    {
      if (string.IsNullOrWhiteSpace(encryptedMessage))
        throw new ArgumentException("Encrypted Message Required!", "encryptedMessage");

      var cipherText = Convert.FromBase64String(encryptedMessage);
      var plainText = SimpleDecryptWithPassword(cipherText, password, nonSecretPayloadLength);
      return plainText == null ? null : Encoding.UTF8.GetString(plainText);
    }

    public static byte[] SimpleEncrypt(byte[] secretMessage, byte[] key, byte[] nonSecretPayload = null)
    {
      //User Error Checks
      if (key == null || key.Length != KeyBitSize / 8)
        throw new ArgumentException(String.Format("Key needs to be {0} bit!", KeyBitSize), "key");

      if (secretMessage == null || secretMessage.Length == 0)
        throw new ArgumentException("Secret Message Required!", "secretMessage");

      //Non-secret Payload Optional
      nonSecretPayload = nonSecretPayload ?? new byte[] { };

      //Using random nonce large enough not to repeat
      var nonce = new byte[NonceBitSize / 8];
      Random.NextBytes(nonce, 0, nonce.Length);

      var cipher = new GcmBlockCipher(new AesFastEngine());
      var parameters = new AeadParameters(new KeyParameter(key), MacBitSize, nonce, nonSecretPayload);
      cipher.Init(true, parameters);

      //Generate Cipher Text With Auth Tag
      var cipherText = new byte[cipher.GetOutputSize(secretMessage.Length)];
      var len = cipher.ProcessBytes(secretMessage, 0, secretMessage.Length, cipherText, 0);
      cipher.DoFinal(cipherText, len);

      //Assemble Message
      using (var combinedStream = new MemoryStream())
      {
        using (var binaryWriter = new BinaryWriter(combinedStream))
        {
          //Prepend Authenticated Payload
          binaryWriter.Write(nonSecretPayload);
          //Prepend Nonce
          binaryWriter.Write(nonce);
          //Write Cipher Text
          binaryWriter.Write(cipherText);
        }
        return combinedStream.ToArray();
      }
    }

    public static byte[] SimpleDecrypt(byte[] encryptedMessage, byte[] key, int nonSecretPayloadLength = 0)
    {
      //User Error Checks
      if (key == null || key.Length != KeyBitSize / 8)
        throw new ArgumentException(String.Format("Key needs to be {0} bit!", KeyBitSize), "key");

      if (encryptedMessage == null || encryptedMessage.Length == 0)
        throw new ArgumentException("Encrypted Message Required!", "encryptedMessage");

      using (var cipherStream = new MemoryStream(encryptedMessage))
      using (var cipherReader = new BinaryReader(cipherStream))
      {
        //Grab Payload
        var nonSecretPayload = cipherReader.ReadBytes(nonSecretPayloadLength);

        //Grab Nonce
        var nonce = cipherReader.ReadBytes(NonceBitSize / 8);

        var cipher = new GcmBlockCipher(new AesFastEngine());
        var parameters = new AeadParameters(new KeyParameter(key), MacBitSize, nonce, nonSecretPayload);
        cipher.Init(false, parameters);

        //Decrypt Cipher Text
        var cipherText = cipherReader.ReadBytes(encryptedMessage.Length - nonSecretPayloadLength - nonce.Length);
        var plainText = new byte[cipher.GetOutputSize(cipherText.Length)];  

        try
        {
          var len = cipher.ProcessBytes(cipherText, 0, cipherText.Length, plainText, 0);
          cipher.DoFinal(plainText, len);

        }
        catch (InvalidCipherTextException)
        {
          //Return null if it doesn't authenticate
          return null;
        }

        return plainText;
      }

    }

    public static byte[] SimpleEncryptWithPassword(byte[] secretMessage, string password, byte[] nonSecretPayload = null)
    {
      nonSecretPayload = nonSecretPayload ?? new byte[] {};

      //User Error Checks
      if (string.IsNullOrWhiteSpace(password) || password.Length &lt; MinPasswordLength)
        throw new ArgumentException(String.Format("Must have a password of at least {0} characters!", MinPasswordLength), "password");

      if (secretMessage == null || secretMessage.Length == 0)
        throw new ArgumentException("Secret Message Required!", "secretMessage");

      var generator = new Pkcs5S2ParametersGenerator();

      //Use Random Salt to minimize pre-generated weak password attacks.
      var salt = new byte[SaltBitSize / 8];
      Random.NextBytes(salt);

      generator.Init(
        PbeParametersGenerator.Pkcs5PasswordToBytes(password.ToCharArray()),
        salt,
        Iterations);

      //Generate Key
      var key = (KeyParameter)generator.GenerateDerivedMacParameters(KeyBitSize);

      //Create Full Non Secret Payload
      var payload = new byte[salt.Length + nonSecretPayload.Length];
      Array.Copy(nonSecretPayload, payload, nonSecretPayload.Length);
      Array.Copy(salt,0, payload,nonSecretPayload.Length, salt.Length);

      return SimpleEncrypt(secretMessage, key.GetKey(), payload);
    }

    public static byte[] SimpleDecryptWithPassword(byte[] encryptedMessage, string password, int nonSecretPayloadLength = 0)
    {
      //User Error Checks
      if (string.IsNullOrWhiteSpace(password) || password.Length &lt; MinPasswordLength)
        throw new ArgumentException(String.Format("Must have a password of at least {0} characters!", MinPasswordLength), "password");

      if (encryptedMessage == null || encryptedMessage.Length == 0)
        throw new ArgumentException("Encrypted Message Required!", "encryptedMessage");

      var generator = new Pkcs5S2ParametersGenerator();

      //Grab Salt from Payload
      var salt = new byte[SaltBitSize / 8];
      Array.Copy(encryptedMessage, nonSecretPayloadLength, salt, 0, salt.Length);

      generator.Init(
        PbeParametersGenerator.Pkcs5PasswordToBytes(password.ToCharArray()),
        salt,
        Iterations);

      //Generate Key
      var key = (KeyParameter)generator.GenerateDerivedMacParameters(KeyBitSize);

      return SimpleDecrypt(encryptedMessage, key.GetKey(), salt.Length + nonSecretPayloadLength);
    }
  }
}
</code></pre>
    </div>
    <table class="fw">
    <tbody><tr>
    <td class="vt">
<div class="post-menu"><a href="http://stackoverflow.com/a/10366194" title="short permalink to this answer" class="short-link" id="link-post-10366194">share</a><span class="lsep">|</span><a href="http://stackoverflow.com/posts/10366194/edit" class="suggest-edit-post" title="">improve this answer</a></div>                    </td>
    <td class="post-signature" align="right">
<div class="user-info ">
    <div class="user-action-time">
        <a href="http://stackoverflow.com/posts/10366194/revisions" title="show all edits to this post">edited <span title="2015-08-12 13:56:48Z" class="relativetime">Aug 12 at 13:56</span></a>
    </div>
    <div class="user-gravatar32">
        
    </div>
    <div class="user-details">
        <br>
        
    </div>
</div>    </td>
            


    <td class="post-signature" align="right">   
       

    <div class="user-info ">
    <div class="user-action-time">
        answered <span title="2012-04-28 18:07:48Z" class="relativetime">Apr 28 '12 at 18:07</span>
    </div>
    <div class="user-gravatar32">
        <a href="http://stackoverflow.com/users/637783/jbtule"><div class="gravatar-wrapper-32"><img src="c%23%20-%20Encrypt%20and%20decrypt%20a%20string%20-%20Stack%20Overflow_files/ec2aae51f1bd526a20c04158ba5c7b62.jpg" alt="" height="32" width="32"></div></a>
    </div>
    <div class="user-details">
        <a href="http://stackoverflow.com/users/637783/jbtule">jbtule</a><br>
        <span class="reputation-score" title="reputation score 14759" dir="ltr">14.8k</span><span title="5 gold badges"><span class="badge1"></span><span class="badgecount">5</span></span><span title="42 silver badges"><span class="badge2"></span><span class="badgecount">42</span></span><span title="77 bronze badges"><span class="badge3"></span><span class="badgecount">77</span></span>
    </div>
</div>
    </td>
    </tr>
    </tbody></table>
</td>
        </tr>
        
<tr>
    <td class="votecell"></td>
    <td>
	    <div id="comments-10366194" class="comments ">
		    <table>
                <tbody data-remaining-comments-count="13" data-canpost="false" data-cansee="true" data-comments-unavailable="false" data-addlink-disabled="true">



    <tr id="comment-19244867" class="comment ">
        <td class="comment-actions">
            <table>
                <tbody>
                    <tr>
                        <td class=" comment-score">
                                <span title="number of 'useful comment' votes received" class="cool">3</span>
                        </td>
                        <td>
                                &nbsp;
                        </td>
                    </tr>
                </tbody>
            </table>
        </td>
        <td class="comment-text">
            <div style="display: block;" class="comment-body">
                <span class="comment-copy">That's a good question, these are using <a href="http://en.wikipedia.org/wiki/Authenticated_encryption" rel="nofollow">Authenticated Encryption</a> examples, in addition to encrypting they have a <a href="http://en.wikipedia.org/wiki/Message_Authentication_Code" rel="nofollow">MAC</a>  to validate that the ciphertext hasn't been modifed by someone else, this is primarily to thwart <a href="http://en.wikipedia.org/wiki/Chosen-ciphertext_attack" rel="nofollow">chosen-ciphertext attacks</a>.
 So when decrypting it calculates the MAC to check against the appended 
one to authenticate it, if it authenticates it decrypts and if it 
doesn't it returns null.</span>
                –&nbsp;
                    <a href="http://stackoverflow.com/users/637783/jbtule" title="14759 reputation" class="comment-user">jbtule</a>
                <span class="comment-date" dir="ltr"><span title="2012-12-19 13:41:38Z" class="relativetime-clean">Dec 19 '12 at 13:41</span></span>
                                                                            </div>
                    </td>
    </tr>
    <tr id="comment-19244893" class="comment ">
        <td class="comment-actions">
            <table>
                <tbody>
                    <tr>
                        <td class=" comment-score">
                                <span title="number of 'useful comment' votes received" class="cool">3</span>
                        </td>
                        <td>
                                &nbsp;
                        </td>
                    </tr>
                </tbody>
            </table>
        </td>
        <td class="comment-text">
            <div style="display: block;" class="comment-body">
                <span class="comment-copy">The array check on the MAC 
does every index, because a timing attack can be used to calculate a new
 MAC on a fake ciphertext if it returns the first byte that doesn't 
match.</span>
                –&nbsp;
                    <a href="http://stackoverflow.com/users/637783/jbtule" title="14759 reputation" class="comment-user">jbtule</a>
                <span class="comment-date" dir="ltr"><span title="2012-12-19 13:42:24Z" class="relativetime-clean">Dec 19 '12 at 13:42</span></span>
                    <span class="edited-yes" title="this comment was edited 1 time"></span>
                                                                            </div>
                    </td>
    </tr>
    <tr id="comment-19256394" class="comment ">
        <td class="comment-actions">
            <table>
                <tbody>
                    <tr>
                        <td class=" comment-score">
                                <span title="number of 'useful comment' votes received" class="cool">3</span>
                        </td>
                        <td>
                                &nbsp;
                        </td>
                    </tr>
                </tbody>
            </table>
        </td>
        <td class="comment-text">
            <div style="display: block;" class="comment-body">
                <span class="comment-copy">Superb, thanks! Would you 
recommend Practical Cryptography by Niels Ferguson? Everybody seems to 
recommend it for a primer on cryptography. It's all very well 
understanding how to implement the bare bones encryption but it's extra 
security measures like you describe that interest me the most. One last 
question if you don't mind; You use AesManaged which I understand to be 
not certified. Should I / is it okay for me to use 
AesCryptoServiceProvider? I feel more comfortable using that class at 
the moment.</span>
                –&nbsp;
                    <a href="http://stackoverflow.com/users/1500199/caster-troy" title="1095 reputation" class="comment-user">Caster Troy</a>
                <span class="comment-date" dir="ltr"><span title="2012-12-19 19:59:06Z" class="relativetime-clean">Dec 19 '12 at 19:59</span></span>
                    <span class="edited-yes" title="this comment was edited 1 time"></span>
                                                                            </div>
                    </td>
    </tr>
    <tr id="comment-19256702" class="comment ">
        <td class="comment-actions">
            <table>
                <tbody>
                    <tr>
                        <td class=" comment-score">
                                <span title="number of 'useful comment' votes received" class="cool">4</span>
                        </td>
                        <td>
                                &nbsp;
                        </td>
                    </tr>
                </tbody>
            </table>
        </td>
        <td class="comment-text">
            <div style="display: block;" class="comment-body">
                <span class="comment-copy">That is a good book and relatively recent. What I would recommend even more is the free online course <a href="https://www.coursera.org/course/crypto" rel="nofollow">Cryptography I</a>
 by Dan Boneh. Really good videos, really good quizes, and really good 
machine problems too that provide a good practical base for the usage of
 cryptography. You should use what you are most comfortable with in 
regards to the AesCryptoServiceProvider.</span>
                –&nbsp;
                    <a href="http://stackoverflow.com/users/637783/jbtule" title="14759 reputation" class="comment-user">jbtule</a>
                <span class="comment-date" dir="ltr"><span title="2012-12-19 20:08:59Z" class="relativetime-clean">Dec 19 '12 at 20:08</span></span>
                    <span class="edited-yes" title="this comment was edited 1 time"></span>
                                                                            </div>
                    </td>
    </tr>
    <tr id="comment-43811792" class="comment ">
        <td class="comment-actions">
            <table>
                <tbody>
                    <tr>
                        <td class=" comment-score">
                                <span title="number of 'useful comment' votes received" class="cool">2</span>
                        </td>
                        <td>
                                &nbsp;
                        </td>
                    </tr>
                </tbody>
            </table>
        </td>
        <td class="comment-text">
            <div style="display: block;" class="comment-body">
                <span class="comment-copy">I apologize for the stupidity
 of the following questions. 1) How or what is the recommended best 
practice for storing the crypt and auth keys for AESThenHMAC solution? 
2) Is it a bad idea to use the same crypt and auth keys over the 
lifetime of the application? I am considering using this code for 
encrypting sensitive data prior to storing it in my database.</span>
                –&nbsp;
                    <a href="http://stackoverflow.com/users/2310818/parth-shah" title="889 reputation" class="comment-user">Parth Shah</a>
                <span class="comment-date" dir="ltr"><span title="2014-12-30 04:03:00Z" class="relativetime-clean">Dec 30 '14 at 4:03</span></span>
                                                                            </div>
                    </td>
    </tr>
                </tbody>
		    </table>
	    </div>

        <div id="comments-link-10366194" data-rep="50" data-anon="true">

                <a class="js-add-link comments-link  dno" title="Use comments to ask for more information or suggest improvements. Avoid comments like “+1” or “thanks”."></a><span class="js-link-separator dno">&nbsp;|&nbsp;</span>
            <a class="js-show-link comments-link " title="expand to show all comments on this post" href="#" onclick="">show <b>13</b> more comments</a>
        </div>         
    </td>
</tr>    </tbody></table>
</div>

  
<a name="202075"></a>
<div id="answer-202075" class="answer" data-answerid="202075" itemscope="" itemtype="http://schema.org/Answer">

    <table>
        <tbody><tr>
            <td class="votecell">
                

<div class="vote">
        <input name="_id_" value="202075" type="hidden">
        <a class="vote-up-off" title="This answer is useful">up vote</a>
        <span itemprop="upvoteCount" class="vote-count-post ">87</span>
        <a class="vote-down-off" title="This answer is not useful">down vote</a>




</div>

            </td>
            


<td class="answercell">
    <div class="post-text" itemprop="text">
<p>Here is an example using RSA. Replace your_rsa_key with your RSA key.</p>

<pre><code>var provider = new System.Security.Cryptography.RSACryptoServiceProvider();
provider.ImportParameters(your_rsa_key);

var encryptedBytes = provider.Encrypt(
    System.Text.Encoding.UTF8.GetBytes("Hello World!"), true);

string decryptedTest = System.Text.Encoding.UTF8.GetString(
    provider.Decrypt(encryptedBytes, true));
</code></pre>

<p>For more info, visit <a href="http://msdn.microsoft.com/en-us/library/system.security.cryptography.rsacryptoserviceprovider.aspx">MSDN - RSACryptoServiceProvider </a></p>
    </div>
    <table class="fw">
    <tbody><tr>
    <td class="vt">
<div class="post-menu"><a href="http://stackoverflow.com/a/202075" title="short permalink to this answer" class="short-link" id="link-post-202075">share</a><span class="lsep">|</span><a href="http://stackoverflow.com/posts/202075/edit" class="suggest-edit-post" title="">improve this answer</a></div>                    </td>
    <td class="post-signature" align="right">
<div class="user-info ">
    <div class="user-action-time">
        <a href="http://stackoverflow.com/posts/202075/revisions" title="show all edits to this post">edited <span title="2010-05-04 09:08:49Z" class="relativetime">May 4 '10 at 9:08</span></a>
    </div>
    <div class="user-gravatar32">
        
    </div>
    <div class="user-details">
        <br>
        
    </div>
</div>    </td>
            


    <td class="post-signature" align="right">   
       

    <div class="user-info ">
    <div class="user-action-time">
        answered <span title="2008-10-14 17:27:30Z" class="relativetime">Oct 14 '08 at 17:27</span>
    </div>
    <div class="user-gravatar32">
        <a href="http://stackoverflow.com/users/8954/tamas-czinege"><div class="gravatar-wrapper-32"><img src="c%23%20-%20Encrypt%20and%20decrypt%20a%20string%20-%20Stack%20Overflow_files/973c6e2cf1ae9f6615dd883eb14597b1.jpg" alt="" height="32" width="32"></div></a>
    </div>
    <div class="user-details">
        <a href="http://stackoverflow.com/users/8954/tamas-czinege">Tamas Czinege</a><br>
        <span class="reputation-score" title="reputation score 59065" dir="ltr">59.1k</span><span title="28 gold badges"><span class="badge1"></span><span class="badgecount">28</span></span><span title="115 silver badges"><span class="badge2"></span><span class="badgecount">115</span></span><span title="154 bronze badges"><span class="badge3"></span><span class="badgecount">154</span></span>
    </div>
</div>
    </td>
    </tr>
    </tbody></table>
</td>
        </tr>
        
<tr>
    <td class="votecell"></td>
    <td>
	    <div id="comments-202075" class="comments ">
		    <table>
                <tbody data-remaining-comments-count="1" data-canpost="false" data-cansee="true" data-comments-unavailable="false" data-addlink-disabled="true">



    <tr id="comment-1556390" class="comment ">
        <td class="comment-actions">
            <table>
                <tbody>
                    <tr>
                        <td class=" comment-score">
                                <span title="number of 'useful comment' votes received" class="cool">3</span>
                        </td>
                        <td>
                                &nbsp;
                        </td>
                    </tr>
                </tbody>
            </table>
        </td>
        <td class="comment-text">
            <div style="display: block;" class="comment-body">
                <span class="comment-copy">Sorry to ask such a simple question but can anyone tell me where do I get RSA Key or how do i generate one?</span>
                –&nbsp;
                    <a href="http://stackoverflow.com/users/85597/akash-kava" title="21606 reputation" class="comment-user">Akash Kava</a>
                <span class="comment-date" dir="ltr"><span title="2009-11-05 17:36:51Z" class="relativetime-clean">Nov 5 '09 at 17:36</span></span>
                                                                            </div>
                    </td>
    </tr>
    <tr id="comment-7964015" class="comment ">
        <td class="comment-actions">
            <table>
                <tbody>
                    <tr>
                        <td class=" comment-score">
                                <span title="number of 'useful comment' votes received" class="warm">8</span>
                        </td>
                        <td>
                                &nbsp;
                        </td>
                    </tr>
                </tbody>
            </table>
        </td>
        <td class="comment-text">
            <div style="display: block;" class="comment-body">
                <span class="comment-copy">Why RSA? RSA has its uses, but nothing indicated that this is one of them.</span>
                –&nbsp;
                    <a href="http://stackoverflow.com/users/445517/codesinchaos" title="67601 reputation" class="comment-user">CodesInChaos</a>
                <span class="comment-date" dir="ltr"><span title="2011-07-17 13:35:56Z" class="relativetime-clean">Jul 17 '11 at 13:35</span></span>
                                                                            </div>
                    </td>
    </tr>
    <tr id="comment-8127191" class="comment ">
        <td>
            <table>
                <tbody>
                    <tr>
                        <td class=" comment-score">
                                &nbsp;&nbsp;
                        </td>
                        <td>
                                &nbsp;
                        </td>
                    </tr>
                </tbody>
            </table>
        </td>
        <td class="comment-text">
            <div style="display: block;" class="comment-body">
                <span class="comment-copy">@CodeInChaos: Because when I 
have provided this answer, almost 3 years ago, the question originally 
didn't indicate anything. That was added later. I have answered the 
original question. Look at the question history and see it for yourself.</span>
                –&nbsp;
                    <a href="http://stackoverflow.com/users/8954/tamas-czinege" title="59065 reputation" class="comment-user">Tamas Czinege</a>
                <span class="comment-date" dir="ltr"><span title="2011-07-26 23:35:04Z" class="relativetime-clean">Jul 26 '11 at 23:35</span></span>
                                                                            </div>
                    </td>
    </tr>
    <tr id="comment-8132845" class="comment ">
        <td class="comment-actions">
            <table>
                <tbody>
                    <tr>
                        <td class=" comment-score">
                                <span title="number of 'useful comment' votes received" class="hot">20</span>
                        </td>
                        <td>
                                &nbsp;
                        </td>
                    </tr>
                </tbody>
            </table>
        </td>
        <td class="comment-text">
            <div style="display: block;" class="comment-body">
                <span class="comment-copy">Even in the original question there is no indication that <code>RSA</code>
 might be a good fit. Asymmetric encryption has its uses, but it's not 
the right choice as a default encryption. Your example code will fail 
for longer strings because the RSA class isn't designed for general 
purpose encryption. If you need the asymmetric features you should 
encrypt a symmetric key with RSA and encrypt the actual data with that 
symmetric key. So I still believe your answer is bad advice.</span>
                –&nbsp;
                    <a href="http://stackoverflow.com/users/445517/codesinchaos" title="67601 reputation" class="comment-user">CodesInChaos</a>
                <span class="comment-date" dir="ltr"><span title="2011-07-27 09:08:30Z" class="relativetime-clean">Jul 27 '11 at 9:08</span></span>
                    <span class="edited-yes" title="this comment was edited 1 time"></span>
                                                                            </div>
                    </td>
    </tr>
    <tr id="comment-33003166" class="comment ">
        <td class="comment-actions">
            <table>
                <tbody>
                    <tr>
                        <td class=" comment-score">
                                <span title="number of 'useful comment' votes received" class="warm">6</span>
                        </td>
                        <td>
                                &nbsp;
                        </td>
                    </tr>
                </tbody>
            </table>
        </td>
        <td class="comment-text">
            <div style="display: block;" class="comment-body">
                <span class="comment-copy">I'm impressed, 70 votes for a
 wrong answer!!!, as CodesInChaos said for this type of encryption you 
need a Symmetric key, not an Assymetric.</span>
                –&nbsp;
                    <a href="http://stackoverflow.com/users/1210599/otto-kanellis" title="999 reputation" class="comment-user">Otto Kanellis</a>
                <span class="comment-date" dir="ltr"><span title="2014-02-16 08:46:23Z" class="relativetime-clean">Feb 16 '14 at 8:46</span></span>
                    <span class="edited-yes" title="this comment was edited 1 time"></span>
                                                                            </div>
                    </td>
    </tr>
                </tbody>
		    </table>
	    </div>

        <div id="comments-link-202075" data-rep="50" data-anon="true">

                <a class="js-add-link comments-link  dno" title="Use comments to ask for more information or suggest improvements. Avoid comments like “+1” or “thanks”."></a><span class="js-link-separator dno">&nbsp;|&nbsp;</span>
            <a class="js-show-link comments-link " title="expand to show all comments on this post" href="#" onclick="">show <b>1</b> more comment</a>
        </div>         
    </td>
</tr>    </tbody></table>
</div>

  
<a name="13511671"></a>
<div id="answer-13511671" class="answer" data-answerid="13511671" itemscope="" itemtype="http://schema.org/Answer">

    <table>
        <tbody><tr>
            <td class="votecell">
                

<div class="vote">
        <input name="_id_" value="13511671" type="hidden">
        <a class="vote-up-off" title="This answer is useful">up vote</a>
        <span itemprop="upvoteCount" class="vote-count-post ">28</span>
        <a class="vote-down-off" title="This answer is not useful">down vote</a>




</div>

            </td>
            


<td class="answercell">
    <div class="post-text" itemprop="text">
<p><a href="http://www.bouncycastle.org/">BouncyCastle</a> is a great Crypto library for .NET, it's available as a <a href="http://nuget.org/packages/BouncyCastle">Nuget</a>
 package for install into your projects.  I like it a lot more than 
what's currently available in the System.Security.Cryptography library. 
 It gives you a lot more options in terms of available algorithms, and 
provides more modes for those algorithms.</p>

<p>This is an example of an implementation of <a href="http://en.wikipedia.org/wiki/Twofish">TwoFish</a>, which was written by <a href="http://en.wikipedia.org/wiki/Bruce_Schneier">Bruce Schneier</a>
 (hero to all us paranoid people out there).   It's a symmetric 
algorithm like the Rijndael
(aka AES).  It was one of the three finalists for the AES standard and 
sibling to another famous algorithm written by Bruce Schneier called 
BlowFish.</p>

<p>First thing with bouncycastle is to create an encryptor class, this 
will make it easier to implement other block ciphers within the library.
  The following encryptor class takes in a generic argument T where T 
implements IBlockCipher and has a default constructor.</p>

<p><strong>UPDATE:</strong>  Due to popular demand I have decided to 
implement generating a random IV as well as include an HMAC into this 
class.  Although from a style perspective this goes against the SOLID 
principle of single responsibility, because of the nature of what this 
class does I reniged.  This class will now take two generic parameters, 
one for the cipher and one for the digest.  It automatically generates 
the IV using RNGCryptoServiceProvider to provide good RNG entropy, and 
allows you to use whatever digest algorithm you want from BouncyCastle 
to generate the MAC.</p>

<pre><code>using System;
using System.Security.Cryptography;
using System.Text;
using Org.BouncyCastle.Crypto;
using Org.BouncyCastle.Crypto.Macs;
using Org.BouncyCastle.Crypto.Modes;
using Org.BouncyCastle.Crypto.Paddings;
using Org.BouncyCastle.Crypto.Parameters;

public sealed class Encryptor&lt;TBlockCipher, TDigest&gt;
    where TBlockCipher : IBlockCipher, new()
    where TDigest : IDigest, new()
{
    private Encoding encoding;

    private IBlockCipher blockCipher;

    private BufferedBlockCipher cipher;

    private HMac mac;

    private byte[] key;

    public Encryptor(Encoding encoding, byte[] key, byte[] macKey)
    {
        this.encoding = encoding;
        this.key = key;
        this.Init(key, macKey, new Pkcs7Padding());
    }

    public Encryptor(Encoding encoding, byte[] key, byte[] macKey, IBlockCipherPadding padding)
    {
        this.encoding = encoding;
        this.key = key;
        this.Init(key, macKey, padding);
    }

    private void Init(byte[] key, byte[] macKey, IBlockCipherPadding padding)
    {
        this.blockCipher = new CbcBlockCipher(new TBlockCipher());
        this.cipher = new PaddedBufferedBlockCipher(this.blockCipher, padding);
        this.mac = new HMac(new TDigest());
        this.mac.Init(new KeyParameter(macKey));
    }

    public string Encrypt(string plain)
    {
        return Convert.ToBase64String(EncryptBytes(plain));
    }

    public byte[] EncryptBytes(string plain)
    {
        byte[] input = this.encoding.GetBytes(plain);

        var iv = this.GenerateIV();

        var cipher = this.BouncyCastleCrypto(true, input, new ParametersWithIV(new KeyParameter(key), iv));
        byte[] message = CombineArrays(iv, cipher);

        this.mac.Reset();
        this.mac.BlockUpdate(message, 0, message.Length);
        byte[] digest = new byte[this.mac.GetUnderlyingDigest().GetDigestSize()];
        this.mac.DoFinal(digest, 0);

        var result = CombineArrays(digest, message);
        return result;
    }

    public byte[] DecryptBytes(byte[] bytes)
    {
        // split the digest into component parts
        var digest = new byte[this.mac.GetUnderlyingDigest().GetDigestSize()];
        var message = new byte[bytes.Length - digest.Length];
        var iv = new byte[this.blockCipher.GetBlockSize()];
        var cipher = new byte[message.Length - iv.Length];

        Buffer.BlockCopy(bytes, 0, digest, 0, digest.Length);
        Buffer.BlockCopy(bytes, digest.Length, message, 0, message.Length);
        if (!IsValidHMac(digest, message))
        {
            throw new CryptoException();
        }

        Buffer.BlockCopy(message, 0, iv, 0, iv.Length);
        Buffer.BlockCopy(message, iv.Length, cipher, 0, cipher.Length);

        byte[] result = this.BouncyCastleCrypto(false, cipher, new ParametersWithIV(new KeyParameter(key), iv));
        return result;
    }

    public string Decrypt(byte[] bytes)
    {
        return this.encoding.GetString(DecryptBytes(bytes));
    }

    public string Decrypt(string cipher)
    {
        return this.Decrypt(Convert.FromBase64String(cipher));
    }

    private bool IsValidHMac(byte[] digest, byte[] message)
    {
        this.mac.Reset();
        this.mac.BlockUpdate(message, 0, message.Length);
        byte[] computed = new byte[this.mac.GetUnderlyingDigest().GetDigestSize()];
        this.mac.DoFinal(computed, 0);

        return AreEqual(digest,computed);
    }

    private static bool AreEqual(byte [] digest, byte[] computed)
    {
        if(digest.Length != computed.Length)
        {
            return false;
        }

        int result = 0;
        for (int i = 0; i &lt; digest.Length; i++)
        {
            result |= digest[i] ^ computed[i];
        }

        return result == 0;
    }

    private byte[] BouncyCastleCrypto(bool forEncrypt, byte[] input, ICipherParameters parameters)
    {
        try
        {
            cipher.Init(forEncrypt, parameters);

            return this.cipher.DoFinal(input);
        }
        catch (CryptoException)
        {
            throw;
        }
    }

    private byte[] GenerateIV()
    {
        using (var provider = new RNGCryptoServiceProvider())
        {
            // 1st block
            byte[] result = new byte[this.blockCipher.GetBlockSize()];
            provider.GetBytes(result);

            return result;
        }
    }

    private static byte[] CombineArrays(byte[] source1, byte[] source2)
    {
        byte[] result = new byte[source1.Length + source2.Length];
        Buffer.BlockCopy(source1, 0, result, 0, source1.Length);
        Buffer.BlockCopy(source2, 0, result, source1.Length, source2.Length);

        return result;
    }
}
</code></pre>

<p>Next just call the encrypt and decrypt methods on the new class, here's the example using twofish:</p>

<pre><code>var encrypt = new Encryptor&lt;TwofishEngine, Sha1Digest&gt;(Encoding.UTF8, key, hmacKey);

string cipher = encrypt.Encrypt("TEST");   
string plainText = encrypt.Decrypt(cipher);
</code></pre>

<p>It's just as easy to substitute another block cipher like TripleDES:</p>

<pre><code>var des = new Encryptor&lt;DesEdeEngine, Sha1Digest&gt;(Encoding.UTF8, key, hmacKey);

string cipher = des.Encrypt("TEST");
string plainText = des.Decrypt(cipher);
</code></pre>

<p>Finally if you want to use AES with SHA256 HMAC you can do the following:</p>

<pre><code>var aes = new Encryptor&lt;AesEngine, Sha256Digest&gt;(Encoding.UTF8, key, hmacKey);

cipher = aes.Encrypt("TEST");
plainText = aes.Decrypt(cipher);
</code></pre>

<p>The hardest part about encryption actually deals with the keys and 
not the algorithms.  You'll have to think about where you store your 
keys, and if you have to, how you exchange them.  These algorithms have 
all withstood the test of time, and are extremely hard to break. Someone
 who wants to steal information from you isn't going to spend eternity 
doing cryptanalysis on your messages, they're going to try to figure out
 what or where your key is.  So #1 choose your keys wisely, #2 store 
them in a safe place, if you use a web.config and IIS then you can <a href="http://msdn.microsoft.com/en-us/library/dtkwfdky%28v=vs.100%29.aspx">encrypt parts of the the web.config</a>, and finally if you have to exchange keys make sure that your protocol for exchanging the key is secure.</p>

<p><strong>Update 2</strong>
Changed compare method to mitigate against timing attacks.  See more info here <a href="http://codahale.com/a-lesson-in-timing-attacks/">http://codahale.com/a-lesson-in-timing-attacks/</a>
 .  Also updated to default to PKCS7 padding and added new constructor 
to allow end user the ability to choose which padding they would like to
 use.  Thanks @CodesInChaos for the suggestions.</p>
    </div>
    <table class="fw">
    <tbody><tr>
    <td class="vt">
<div class="post-menu"><a href="http://stackoverflow.com/a/13511671" title="short permalink to this answer" class="short-link" id="link-post-13511671">share</a><span class="lsep">|</span><a href="http://stackoverflow.com/posts/13511671/edit" class="suggest-edit-post" title="">improve this answer</a></div>                    </td>
    <td class="post-signature" align="right">
<div class="user-info ">
    <div class="user-action-time">
        <a href="http://stackoverflow.com/posts/13511671/revisions" title="show all edits to this post">edited <span title="2014-03-11 10:21:19Z" class="relativetime">Mar 11 '14 at 10:21</span></a>
    </div>
    <div class="user-gravatar32">
        
    </div>
    <div class="user-details">
        <br>
        
    </div>
</div>    </td>
            


    <td class="post-signature" align="right">   
       

    <div class="user-info user-hover">
    <div class="user-action-time">
        answered <span title="2012-11-22 11:22:32Z" class="relativetime">Nov 22 '12 at 11:22</span>
    </div>
    <div class="user-gravatar32">
        <a href="http://stackoverflow.com/users/1572267/nerdybeardo"><div class="gravatar-wrapper-32"><img src="c%23%20-%20Encrypt%20and%20decrypt%20a%20string%20-%20Stack%20Overflow_files/98bf55144f7e2f3ab18cf6a3e5fdb019.png" alt="" height="32" width="32"></div></a>
    </div>
    <div class="user-details">
        <a href="http://stackoverflow.com/users/1572267/nerdybeardo">nerdybeardo</a><br>
        <span class="reputation-score" title="reputation score " dir="ltr">3,025</span><span title="9 silver badges"><span class="badge2"></span><span class="badgecount">9</span></span><span title="19 bronze badges"><span class="badge3"></span><span class="badgecount">19</span></span>
    </div>
</div>
    </td>
    </tr>
    </tbody></table>
</td>
        </tr>
        
<tr>
    <td class="votecell"></td>
    <td>
	    <div id="comments-13511671" class="comments ">
		    <table>
                <tbody data-remaining-comments-count="1" data-canpost="false" data-cansee="true" data-comments-unavailable="false" data-addlink-disabled="true">



    <tr id="comment-26738694" class="comment ">
        <td class="comment-actions">
            <table>
                <tbody>
                    <tr>
                        <td class=" comment-score">
                                <span title="number of 'useful comment' votes received" class="cool">2</span>
                        </td>
                        <td>
                                &nbsp;
                        </td>
                    </tr>
                </tbody>
            </table>
        </td>
        <td class="comment-text">
            <div style="display: block;" class="comment-body">
                <span class="comment-copy">1) That class is pretty 
annoying to use since you put the burden of IV management on the user 
who will almost certainly get it wrong. 2) Lack of MAC makes this 
vulnerable to padding oracles.</span>
                –&nbsp;
                    <a href="http://stackoverflow.com/users/445517/codesinchaos" title="67601 reputation" class="comment-user">CodesInChaos</a>
                <span class="comment-date" dir="ltr"><span title="2013-08-14 16:47:07Z" class="relativetime-clean">Aug 14 '13 at 16:47</span></span>
                                                                            </div>
                    </td>
    </tr>
    <tr id="comment-33894052" class="comment ">
        <td class="comment-actions">
            <table>
                <tbody>
                    <tr>
                        <td class=" comment-score">
                                <span title="number of 'useful comment' votes received" class="cool">2</span>
                        </td>
                        <td>
                                &nbsp;
                        </td>
                    </tr>
                </tbody>
            </table>
        </td>
        <td class="comment-text">
            <div style="display: block;" class="comment-body">
                <span class="comment-copy">1) Your padding looks broken 
to me. You add a zero padding and don't remove it. Zero padding is a bad
 idea since it can't be removed reliably. Use PKCS#7 padding instead. 
I'd expect the bouncycastle encryption/decryption function to already 
support this. 2) You should use a constant time comparison to validate 
the MAC, not <code>SequenceEqual</code>. This avoids a timing side-channel that leaks how long a prefix of the presented MAC and the actual MAC match.</span>
                –&nbsp;
                    <a href="http://stackoverflow.com/users/445517/codesinchaos" title="67601 reputation" class="comment-user">CodesInChaos</a>
                <span class="comment-date" dir="ltr"><span title="2014-03-10 17:08:29Z" class="relativetime-clean">Mar 10 '14 at 17:08</span></span>
                                                                            </div>
                    </td>
    </tr>
    <tr id="comment-33921767" class="comment ">
        <td class="comment-actions">
            <table>
                <tbody>
                    <tr>
                        <td class=" comment-score">
                                <span title="number of 'useful comment' votes received" class="cool">1</span>
                        </td>
                        <td>
                                &nbsp;
                        </td>
                    </tr>
                </tbody>
            </table>
        </td>
        <td class="comment-text">
            <div style="display: block;" class="comment-body">
                <span class="comment-copy">@CodesInChaos I agree, thanks for checking this I've made an edit to resolve these couple issues. –  nerdybeardo</span>
                –&nbsp;
                    <a href="http://stackoverflow.com/users/1572267/nerdybeardo" title="3025 reputation" class="comment-user">nerdybeardo</a>
                <span class="comment-date" dir="ltr"><span title="2014-03-11 10:10:08Z" class="relativetime-clean">Mar 11 '14 at 10:10</span></span>
                                                                            </div>
                    </td>
    </tr>
    <tr id="comment-51178509" class="comment ">
        <td>
            <table>
                <tbody>
                    <tr>
                        <td class=" comment-score">
                                &nbsp;&nbsp;
                        </td>
                        <td>
                                &nbsp;
                        </td>
                    </tr>
                </tbody>
            </table>
        </td>
        <td class="comment-text">
            <div style="display: block;" class="comment-body">
                <span class="comment-copy">great answer, just one question....what would be the key and hmacKey, i'm new to crypto..thanks !</span>
                –&nbsp;
                    <a href="http://stackoverflow.com/users/3228150/terkhos" title="113 reputation" class="comment-user">Terkhos</a>
                <span class="comment-date" dir="ltr"><span title="2015-07-24 15:35:50Z" class="relativetime-clean">Jul 24 at 15:35</span></span>
                                                                            </div>
                    </td>
    </tr>
    <tr id="comment-51233790" class="comment ">
        <td class="comment-actions">
            <table>
                <tbody>
                    <tr>
                        <td class=" comment-score">
                                <span title="number of 'useful comment' votes received" class="cool">1</span>
                        </td>
                        <td>
                                &nbsp;
                        </td>
                    </tr>
                </tbody>
            </table>
        </td>
        <td class="comment-text">
            <div style="display: block;" class="comment-body">
                <span class="comment-copy">@Terkhos You should use a 
secure random number generator for generating keys like 
RNGCryptoServiceProvider, you should never use a passphrase or something
 predictable.  You should also use the maximum length that the algorithm
 will provide for example AES 256 uses a key size that's 256 bits in 
length so 32 random bytes would be best, HMAC key sizes are typically 
are based on the size of the algorithm for example SHA2 (256) a 256 bit 
key generated by a secure random number generator would suffice.  Change
 keys often! The more often the better!</span>
                –&nbsp;
                    <a href="http://stackoverflow.com/users/1572267/nerdybeardo" title="3025 reputation" class="comment-user">nerdybeardo</a>
                <span class="comment-date" dir="ltr"><span title="2015-07-27 01:07:44Z" class="relativetime-clean">Jul 27 at 1:07</span></span>
                                                                            </div>
                    </td>
    </tr>
                </tbody>
		    </table>
	    </div>

        <div id="comments-link-13511671" data-rep="50" data-anon="true">

                <a class="js-add-link comments-link  dno" title="Use comments to ask for more information or suggest improvements. Avoid comments like “+1” or “thanks”."></a><span class="js-link-separator dno">&nbsp;|&nbsp;</span>
            <a class="js-show-link comments-link " title="expand to show all comments on this post" href="#" onclick="">show <b>1</b> more comment</a>
        </div>         
    </td>
</tr>    </tbody></table>
</div>

  
<a name="15407665"></a>
<div id="answer-15407665" class="answer" data-answerid="15407665" itemscope="" itemtype="http://schema.org/Answer">

    <table>
        <tbody><tr>
            <td class="votecell">
                

<div class="vote">
        <input name="_id_" value="15407665" type="hidden">
        <a class="vote-up-off" title="This answer is useful">up vote</a>
        <span itemprop="upvoteCount" class="vote-count-post ">25</span>
        <a class="vote-down-off" title="This answer is not useful">down vote</a>




</div>

            </td>
            


<td class="answercell">
    <div class="post-text" itemprop="text">
<p>If you are using ASP.Net you can now use built in functionality in .Net 4.0 onwards.</p>

<p><a href="http://msdn.microsoft.com/en-us/library/system.web.security.machinekey.aspx">System.Web.Security.MachineKey</a></p>

<p>.Net 4.5 has <code>MachineKey.Protect()</code> and <code>MachineKey.Unprotect()</code>.</p>

<p>.Net 4.0 has <code>MachineKey.Encode()</code> and <code>MachineKey.Decode()</code>. You should just set the MachineKeyProtection to 'All'.</p>

<p>Outside of ASP.Net this class seems to generate a new key with every 
app restart so doesn't work. With a quick peek in ILSpy it looks to me 
like it generates its own defaults if the appropriate app.settings are 
missing. So you may actually be able to set it up outside ASP.Net.</p>

<p>I haven't been able to find a non-ASP.Net equivalent outside the System.Web namespace.</p>
    </div>
    <table class="fw">
    <tbody><tr>
    <td class="vt">
<div class="post-menu"><a href="http://stackoverflow.com/a/15407665" title="short permalink to this answer" class="short-link" id="link-post-15407665">share</a><span class="lsep">|</span><a href="http://stackoverflow.com/posts/15407665/edit" class="suggest-edit-post" title="">improve this answer</a></div>                    </td>
            


    <td class="post-signature" align="right">   
       

    <div class="user-info ">
    <div class="user-action-time">
        answered <span title="2013-03-14 11:14:24Z" class="relativetime">Mar 14 '13 at 11:14</span>
    </div>
    <div class="user-gravatar32">
        <a href="http://stackoverflow.com/users/62829/mattmanser"><div class="gravatar-wrapper-32"><img src="c%23%20-%20Encrypt%20and%20decrypt%20a%20string%20-%20Stack%20Overflow_files/f227d859cdf77e5c6553edcab7103148.png" alt="" height="32" width="32"></div></a>
    </div>
    <div class="user-details">
        <a href="http://stackoverflow.com/users/62829/mattmanser">mattmanser</a><br>
        <span class="reputation-score" title="reputation score " dir="ltr">3,574</span><span title="18 silver badges"><span class="badge2"></span><span class="badgecount">18</span></span><span title="37 bronze badges"><span class="badge3"></span><span class="badgecount">37</span></span>
    </div>
</div>
    </td>
    </tr>
    </tbody></table>
</td>
        </tr>
        
<tr>
    <td class="votecell"></td>
    <td>
	    <div id="comments-15407665" class="comments ">
		    <table>
                <tbody data-remaining-comments-count="0" data-canpost="false" data-cansee="true" data-comments-unavailable="false" data-addlink-disabled="true">



    <tr id="comment-34563300" class="comment ">
        <td>
            <table>
                <tbody>
                    <tr>
                        <td class=" comment-score">
                                &nbsp;&nbsp;
                        </td>
                        <td>
                                &nbsp;
                        </td>
                    </tr>
                </tbody>
            </table>
        </td>
        <td class="comment-text">
            <div style="display: block;" class="comment-body">
                <span class="comment-copy">hmm can anyone tell me why does this answer has so few votes? It looks like a very convenient way for ASP.NET applications</span>
                –&nbsp;
                    <a href="http://stackoverflow.com/users/647845/dirk-boer" title="1220 reputation" class="comment-user">Dirk Boer</a>
                <span class="comment-date" dir="ltr"><span title="2014-03-27 12:04:39Z" class="relativetime-clean">Mar 27 '14 at 12:04</span></span>
                                                                            </div>
                    </td>
    </tr>
    <tr id="comment-34564747" class="comment ">
        <td>
            <table>
                <tbody>
                    <tr>
                        <td class=" comment-score">
                                &nbsp;&nbsp;
                        </td>
                        <td>
                                &nbsp;
                        </td>
                    </tr>
                </tbody>
            </table>
        </td>
        <td class="comment-text">
            <div style="display: block;" class="comment-body">
                <span class="comment-copy">@DirkBoer The functionality 
was added a couple of years after the question was asked, I added my 
answer to this question to let people know there are easier ways today. 
This also only works with ASP.Net without some app.config-fu which is 
fairly dangerous if you don't know what you are doing.</span>
                –&nbsp;
                    <a href="http://stackoverflow.com/users/62829/mattmanser" title="3574 reputation" class="comment-user">mattmanser</a>
                <span class="comment-date" dir="ltr"><span title="2014-03-27 12:38:04Z" class="relativetime-clean">Mar 27 '14 at 12:38</span></span>
                    <span class="edited-yes" title="this comment was edited 3 times"></span>
                                                                            </div>
                    </td>
    </tr>
                </tbody>
		    </table>
	    </div>

        <div id="comments-link-15407665" data-rep="50" data-anon="true">

                <a class="js-add-link comments-link disabled-link " title="Use comments to ask for more information or suggest improvements. Avoid comments like “+1” or “thanks”.">add a comment</a><span class="js-link-separator dno">&nbsp;|&nbsp;</span>
            <a class="js-show-link comments-link dno" title="expand to show all comments on this post" href="#" onclick=""></a>
        </div>         
    </td>
</tr>    </tbody></table>
</div>

  
<a name="24401587"></a>
<div id="answer-24401587" class="answer" data-answerid="24401587" itemscope="" itemtype="http://schema.org/Answer">

    <table>
        <tbody><tr>
            <td class="votecell">
                

<div class="vote">
        <input name="_id_" value="24401587" type="hidden">
        <a class="vote-up-off" title="This answer is useful">up vote</a>
        <span itemprop="upvoteCount" class="vote-count-post ">3</span>
        <a class="vote-down-off" title="This answer is not useful">down vote</a>




</div>

            </td>
            


<td class="answercell">
    <div class="post-text" itemprop="text">
<p>Here is a simple example of encrypting strings in C# using AES CBC 
mode with random IV and HMAC and password-derived keys, to show the 
basic moving parts:</p>

<pre><code>private byte[] EncryptBytes(byte[] key, byte[] plaintext)
{
    using (var cipher = new RijndaelManaged { Key = key })
    {
        using (var encryptor = cipher.CreateEncryptor())
        {
            var ciphertext = encryptor.TransformFinalBlock(plaintext, 0, plaintext.Length);

            // IV is prepended to ciphertext
            return cipher.IV.Concat(ciphertext).ToArray();
        }
    }
}

private byte[] DecryptBytes(byte[] key, byte[] packed)
{
    using (var cipher = new RijndaelManaged { Key = key })
    {
        int ivSize = cipher.BlockSize / 8;

        cipher.IV = packed.Take(ivSize).ToArray();

        using (var encryptor = cipher.CreateDecryptor())
        {
            return encryptor.TransformFinalBlock(packed, ivSize, packed.Length - ivSize);
        }
    }
}

private byte[] AddMac(byte[] key, byte[] data)
{
    using (var hmac = new HMACSHA256(key))
    {
        var macBytes = hmac.ComputeHash(data);

        // HMAC is appended to data
        return data.Concat(macBytes).ToArray();
    }
}

private bool BadMac(byte[] found, byte[] computed)
{
    int mismatch = 0;

    // Aim for consistent timing regardless of inputs
    for (int i = 0; i &lt; found.Length; i++)
    {
        mismatch += found[i] == computed[i] ? 0 : 1;
    }

    return mismatch != 0;
}

private byte[] RemoveMac(byte[] key, byte[] data)
{
    using (var hmac = new HMACSHA256(key))
    {
        int macSize = hmac.HashSize / 8;

        var packed = data.Take(data.Length - macSize).ToArray();

        var foundMac = data.Skip(packed.Length).ToArray();

        var computedMac = hmac.ComputeHash(packed);

        if (this.BadMac(foundMac, computedMac))
        {
            throw new Exception("Bad MAC");
        }

        return packed;
    }            
}

private List&lt;byte[]&gt; DeriveTwoKeys(string password)
{
    var salt = new byte[] { 1, 2, 3, 4, 5, 6, 7, 8 };

    var kdf = new Rfc2898DeriveBytes(password, salt, 10000);

    var bytes = kdf.GetBytes(32); // Two keys 128 bits each

    return new List&lt;byte[]&gt; { bytes.Take(16).ToArray(), bytes.Skip(16).ToArray() };
}

public byte[] EncryptString(string password, String message)
{
    var keys = this.DeriveTwoKeys(password);

    var plaintext = Encoding.UTF8.GetBytes(message);

    var packed = this.EncryptBytes(keys[0], plaintext);

    return this.AddMac(keys[1], packed);
}

public String DecryptString(string password, byte[] secret)
{
    var keys = this.DeriveTwoKeys(password);

    var packed = this.RemoveMac(keys[1], secret);

    var plaintext = this.DecryptBytes(keys[0], packed);

    return Encoding.UTF8.GetString(plaintext);
}

public void Example()
{
    var password = "correcthorsebatterystaple";

    var secret = this.EncryptString(password, "Hello World");

    Console.WriteLine("secret: " + BitConverter.ToString(secret));

    var recovered = this.DecryptString(password, secret);

    Console.WriteLine(recovered);
}
</code></pre>
    </div>
    <table class="fw">
    <tbody><tr>
    <td class="vt">
<div class="post-menu"><a href="http://stackoverflow.com/a/24401587" title="short permalink to this answer" class="short-link" id="link-post-24401587">share</a><span class="lsep">|</span><a href="http://stackoverflow.com/posts/24401587/edit" class="suggest-edit-post" title="">improve this answer</a></div>                    </td>
            


    <td class="post-signature" align="right">   
       

    <div class="user-info ">
    <div class="user-action-time">
        answered <span title="2014-06-25 06:23:12Z" class="relativetime">Jun 25 '14 at 6:23</span>
    </div>
    <div class="user-gravatar32">
        <a href="http://stackoverflow.com/users/233596/jim-flood"><div class="gravatar-wrapper-32"><img src="c%23%20-%20Encrypt%20and%20decrypt%20a%20string%20-%20Stack%20Overflow_files/332a8d767894de9d22c69c774d0c890b.png" alt="" height="32" width="32"></div></a>
    </div>
    <div class="user-details">
        <a href="http://stackoverflow.com/users/233596/jim-flood">Jim Flood</a><br>
        <span class="reputation-score" title="reputation score " dir="ltr">3,066</span><span title="1 gold badge"><span class="badge1"></span><span class="badgecount">1</span></span><span title="13 silver badges"><span class="badge2"></span><span class="badgecount">13</span></span><span title="22 bronze badges"><span class="badge3"></span><span class="badgecount">22</span></span>
    </div>
</div>
    </td>
    </tr>
    </tbody></table>
</td>
        </tr>
        
<tr>
    <td class="votecell"></td>
    <td>
	    <div id="comments-24401587" class="comments ">
		    <table>
                <tbody data-remaining-comments-count="0" data-canpost="false" data-cansee="true" data-comments-unavailable="false" data-addlink-disabled="true">



    <tr id="comment-39322876" class="comment ">
        <td class="comment-actions">
            <table>
                <tbody>
                    <tr>
                        <td class=" comment-score">
                                <span title="number of 'useful comment' votes received" class="cool">1</span>
                        </td>
                        <td>
                                &nbsp;
                        </td>
                    </tr>
                </tbody>
            </table>
        </td>
        <td class="comment-text">
            <div style="display: block;" class="comment-body">
                <span class="comment-copy">A couple of issues: 1) You're
 not using a salt in the key derivation, enabling multi target attacks. 
2) Your MAC comparison function is potentially vulnerable to 
side-channel/timing attacks since you branch on secret data. Use 
something like <code>mismatch += found[i]^computed[i]</code> instead. 3)
 You're using more than 20 bytes of PBKDF2-HMAC-SHA-1 which slows your 
KDF down by a factor of 2 without slowing down an attacker</span>
                –&nbsp;
                    <a href="http://stackoverflow.com/users/445517/codesinchaos" title="67601 reputation" class="comment-user">CodesInChaos</a>
                <span class="comment-date" dir="ltr"><span title="2014-08-11 10:59:12Z" class="relativetime-clean">Aug 11 '14 at 10:59</span></span>
                                                                            </div>
                    </td>
    </tr>
    <tr id="comment-39343220" class="comment ">
        <td>
            <table>
                <tbody>
                    <tr>
                        <td class=" comment-score">
                                &nbsp;&nbsp;
                        </td>
                        <td>
                                &nbsp;
                        </td>
                    </tr>
                </tbody>
            </table>
        </td>
        <td class="comment-text">
            <div style="display: block;" class="comment-body">
                <span class="comment-copy">@CodesInChaos: 1) This was 
meant as a simple example to get people started -- I omit random salt 
only for clarity. But, good point. 2) Good, subtle point. 3) What do you
 suggest to derive two 16 byte keys in twenty bytes?</span>
                –&nbsp;
                    <a href="http://stackoverflow.com/users/233596/jim-flood" title="3066 reputation" class="comment-user">Jim Flood</a>
                <span class="comment-date" dir="ltr"><span title="2014-08-11 20:47:50Z" class="relativetime-clean">Aug 11 '14 at 20:47</span></span>
                                                                            </div>
                    </td>
    </tr>
    <tr id="comment-39355797" class="comment ">
        <td>
            <table>
                <tbody>
                    <tr>
                        <td class=" comment-score">
                                &nbsp;&nbsp;
                        </td>
                        <td>
                                &nbsp;
                        </td>
                    </tr>
                </tbody>
            </table>
        </td>
        <td class="comment-text">
            <div style="display: block;" class="comment-body">
                <span class="comment-copy">The simplest way is hashing 
the output of the slow hash with SHA-2. Fancier ways are HKDF or simply 
applying PBKDF2 again, but this time with iterations set to 1.</span>
                –&nbsp;
                    <a href="http://stackoverflow.com/users/445517/codesinchaos" title="67601 reputation" class="comment-user">CodesInChaos</a>
                <span class="comment-date" dir="ltr"><span title="2014-08-12 08:00:50Z" class="relativetime-clean">Aug 12 '14 at 8:00</span></span>
                                                                            </div>
                    </td>
    </tr>
    <tr id="comment-39455672" class="comment ">
        <td>
            <table>
                <tbody>
                    <tr>
                        <td class=" comment-score">
                                &nbsp;&nbsp;
                        </td>
                        <td>
                                &nbsp;
                        </td>
                    </tr>
                </tbody>
            </table>
        </td>
        <td class="comment-text">
            <div style="display: block;" class="comment-body">
                <span class="comment-copy">@CodesInChaos I would not use
 SHA-2. The job of a hash function is not the same as the job of a key 
derivation function. A hash only needs to be unpredictable, and to 
change when the input changes. A key needs to be indistinguishable from 
random. I would still draw 32 bytes from the KDF. In this case, you are 
optimizing too early and adding risk.</span>
                –&nbsp;
                    <a href="http://stackoverflow.com/users/233596/jim-flood" title="3066 reputation" class="comment-user">Jim Flood</a>
                <span class="comment-date" dir="ltr"><span title="2014-08-14 16:27:51Z" class="relativetime-clean">Aug 14 '14 at 16:27</span></span>
                                                                            </div>
                    </td>
    </tr>
                </tbody>
		    </table>
	    </div>

        <div id="comments-link-24401587" data-rep="50" data-anon="true">

                <a class="js-add-link comments-link disabled-link " title="Use comments to ask for more information or suggest improvements. Avoid comments like “+1” or “thanks”.">add a comment</a><span class="js-link-separator dno">&nbsp;|&nbsp;</span>
            <a class="js-show-link comments-link dno" title="expand to show all comments on this post" href="#" onclick=""></a>
        </div>         
    </td>
</tr>    </tbody></table>
</div>

  
<a name="26267039"></a>
<div id="answer-26267039" class="answer" data-answerid="26267039" itemscope="" itemtype="http://schema.org/Answer">

    <table>
        <tbody><tr>
            <td class="votecell">
                

<div class="vote">
        <input name="_id_" value="26267039" type="hidden">
        <a class="vote-up-off" title="This answer is useful">up vote</a>
        <span itemprop="upvoteCount" class="vote-count-post ">3</span>
        <a class="vote-down-off" title="This answer is not useful">down vote</a>




</div>

            </td>
            


<td class="answercell">
    <div class="post-text" itemprop="text">
<p>If you got here looking for PGP encryption, in the following comment 
on an example of how to use PGP encryption via BouncyCastle, the <code>PGPEncryptDecrypt</code> class seems to work basically out of the box:</p>

<p><a href="http://blogs.microsoft.co.il/kim/2009/01/23/pgp-zip-encrypted-files-with-c/#comment-611002" rel="nofollow">http://blogs.microsoft.co.il/kim/2009/01/23/pgp-zip-encrypted-files-with-c/#comment-611002</a></p>

<p>Too long to paste here, slightly modified:  <a href="https://gist.github.com/zaus/c0ea1fd8dad5d9590af1" rel="nofollow">https://gist.github.com/zaus/c0ea1fd8dad5d9590af1</a></p>
    </div>
    <table class="fw">
    <tbody><tr>
    <td class="vt">
<div class="post-menu"><a href="http://stackoverflow.com/a/26267039" title="short permalink to this answer" class="short-link" id="link-post-26267039">share</a><span class="lsep">|</span><a href="http://stackoverflow.com/posts/26267039/edit" class="suggest-edit-post" title="">improve this answer</a></div>                    </td>
            


    <td class="post-signature" align="right">   
       

    <div class="user-info ">
    <div class="user-action-time">
        answered <span title="2014-10-08 21:49:12Z" class="relativetime">Oct 8 '14 at 21:49</span>
    </div>
    <div class="user-gravatar32">
        <a href="http://stackoverflow.com/users/1037948/drzaus"><div class="gravatar-wrapper-32"><img src="c%23%20-%20Encrypt%20and%20decrypt%20a%20string%20-%20Stack%20Overflow_files/e9fdb26b1c2ef88470505cc4c7267244.png" alt="" height="32" width="32"></div></a>
    </div>
    <div class="user-details">
        <a href="http://stackoverflow.com/users/1037948/drzaus">drzaus</a><br>
        <span class="reputation-score" title="reputation score " dir="ltr">6,517</span><span title="3 gold badges"><span class="badge1"></span><span class="badgecount">3</span></span><span title="39 silver badges"><span class="badge2"></span><span class="badgecount">39</span></span><span title="60 bronze badges"><span class="badge3"></span><span class="badgecount">60</span></span>
    </div>
</div>
    </td>
    </tr>
    </tbody></table>
</td>
        </tr>
        
<tr>
    <td class="votecell"></td>
    <td>
	    <div id="comments-26267039" class="comments  dno">
		    <table>
                <tbody data-remaining-comments-count="0" data-canpost="false" data-cansee="true" data-comments-unavailable="false" data-addlink-disabled="true">

                        <tr><td></td><td></td></tr>
                </tbody>
		    </table>
	    </div>

        <div id="comments-link-26267039" data-rep="50" data-anon="true">

                <a class="js-add-link comments-link disabled-link " title="Use comments to ask for more information or suggest improvements. Avoid comments like “+1” or “thanks”.">add a comment</a><span class="js-link-separator dno">&nbsp;|&nbsp;</span>
            <a class="js-show-link comments-link dno" title="expand to show all comments on this post" href="#" onclick=""></a>
        </div>         
    </td>
</tr>    </tbody></table>
</div>

  
<a name="28605068"></a>
<div id="answer-28605068" class="answer" data-answerid="28605068" itemscope="" itemtype="http://schema.org/Answer">

    <table>
        <tbody><tr>
            <td class="votecell">
                

<div class="vote">
        <input name="_id_" value="28605068" type="hidden">
        <a class="vote-up-off" title="This answer is useful">up vote</a>
        <span itemprop="upvoteCount" class="vote-count-post ">2</span>
        <a class="vote-down-off" title="This answer is not useful">down vote</a>




</div>

            </td>
            


<td class="answercell">
    <div class="post-text" itemprop="text">
<p>//   Encryption</p>

<pre><code>public string EncryptString(string inputString)
{
MemoryStream memStream = null;
try
{
    byte[] key = { };
    byte[] IV = { 12, 21, 43, 17, 57, 35, 67, 27 };
    string encryptKey = "aXb2uy4z";
    key = Encoding.UTF8.GetBytes(encryptKey);
    byte[] byteInput = Encoding.UTF8.GetBytes(inputString);
    DESCryptoServiceProvider provider = new DESCryptoServiceProvider();
    memStream = new MemoryStream();
    ICryptoTransform transform = provider.CreateEncryptor(key, IV);
    CryptoStream cryptoStream = new CryptoStream(memStream, transform, CryptoStreamMode.Write);
    cryptoStream.Write(byteInput, 0, byteInput.Length);
    cryptoStream.FlushFinalBlock();

}
catch (Exception ex)
{
    Response.Write(ex.Message);
}
return Convert.ToBase64String(memStream.ToArray());
}
</code></pre>

<p><br></p>

<pre><code>public string DecryptString(string inputString)
{
MemoryStream memStream = null;
try
{
    byte[] key = { };
    byte[] IV = { 12, 21, 43, 17, 57, 35, 67, 27 };
    string encryptKey = "aXb2uy4z";
    key = Encoding.UTF8.GetBytes(encryptKey);
    byte[] byteInput = new byte[inputString.Length];
    byteInput = Convert.FromBase64String(inputString);
    DESCryptoServiceProvider provider = new DESCryptoServiceProvider();
    memStream = new MemoryStream();
    ICryptoTransform transform = provider.CreateDecryptor(key, IV);
    CryptoStream cryptoStream = new CryptoStream(memStream, transform, CryptoStreamMode.Write);
    cryptoStream.Write(byteInput, 0, byteInput.Length);
    cryptoStream.FlushFinalBlock();
}
catch (Exception ex)
{
    Response.Write(ex.Message);
}

Encoding encoding1 = Encoding.UTF8;
return encoding1.GetString(memStream.ToArray());
</code></pre>

<p>}</p>
    </div>
    <table class="fw">
    <tbody><tr>
    <td class="vt">
<div class="post-menu"><a href="http://stackoverflow.com/a/28605068" title="short permalink to this answer" class="short-link" id="link-post-28605068">share</a><span class="lsep">|</span><a href="http://stackoverflow.com/posts/28605068/edit" class="suggest-edit-post" title="">improve this answer</a></div>                    </td>
            


    <td class="post-signature" align="right">   
       

    <div class="user-info ">
    <div class="user-action-time">
        answered <span title="2015-02-19 11:22:03Z" class="relativetime">Feb 19 at 11:22</span>
    </div>
    <div class="user-gravatar32">
        <a href="http://stackoverflow.com/users/4540291/gopal-reddy-v"><div class="gravatar-wrapper-32"><img src="c%23%20-%20Encrypt%20and%20decrypt%20a%20string%20-%20Stack%20Overflow_files/72ee51a99ba76208b6f674a7c6a47dd7.png" alt="" height="32" width="32"></div></a>
    </div>
    <div class="user-details">
        <a href="http://stackoverflow.com/users/4540291/gopal-reddy-v">Gopal Reddy V</a><br>
        <span class="reputation-score" title="reputation score " dir="ltr">149</span><span title="7 bronze badges"><span class="badge3"></span><span class="badgecount">7</span></span>
    </div>
</div>
    </td>
    </tr>
    </tbody></table>
</td>
        </tr>
        
<tr>
    <td class="votecell"></td>
    <td>
	    <div id="comments-28605068" class="comments ">
		    <table>
                <tbody data-remaining-comments-count="0" data-canpost="false" data-cansee="true" data-comments-unavailable="false" data-addlink-disabled="true">



    <tr id="comment-45537587" class="comment ">
        <td class="comment-actions">
            <table>
                <tbody>
                    <tr>
                        <td class=" comment-score">
                                <span title="number of 'useful comment' votes received" class="cool">1</span>
                        </td>
                        <td>
                                &nbsp;
                        </td>
                    </tr>
                </tbody>
            </table>
        </td>
        <td class="comment-text">
            <div style="display: block;" class="comment-body">
                <span class="comment-copy">-1 This is very weak. 1) DES 
is easy to brute force having a 56 bit key. 2) A key is binary, not 
UTF8. If the key consists of ASCII characters (likely in practice), this
 reduces the effective key size to 48 bits. 3) An IV should be different
 for each message 4) Lack of MAC leaves you open to active attacks, 
including padding oracles.</span>
                –&nbsp;
                    <a href="http://stackoverflow.com/users/445517/codesinchaos" title="67601 reputation" class="comment-user">CodesInChaos</a>
                <span class="comment-date" dir="ltr"><span title="2015-02-19 21:29:42Z" class="relativetime-clean">Feb 19 at 21:29</span></span>
                                                                            </div>
                    </td>
    </tr>
                </tbody>
		    </table>
	    </div>

        <div id="comments-link-28605068" data-rep="50" data-anon="true">

                <a class="js-add-link comments-link disabled-link " title="Use comments to ask for more information or suggest improvements. Avoid comments like “+1” or “thanks”.">add a comment</a><span class="js-link-separator dno">&nbsp;|&nbsp;</span>
            <a class="js-show-link comments-link dno" title="expand to show all comments on this post" href="#" onclick=""></a>
        </div>         
    </td>
</tr>    </tbody></table>
</div>

  
<a name="19125021"></a>
<div id="answer-19125021" class="answer" data-answerid="19125021" itemscope="" itemtype="http://schema.org/Answer">

    <table>
        <tbody><tr>
            <td class="votecell">
                

<div class="vote">
        <input name="_id_" value="19125021" type="hidden">
        <a class="vote-up-off" title="This answer is useful">up vote</a>
        <span itemprop="upvoteCount" class="vote-count-post ">1</span>
        <a class="vote-down-off" title="This answer is not useful">down vote</a>




</div>

            </td>
            


<td class="answercell">
    <div class="post-text" itemprop="text">
<p>This is the class that was placed here by Brett. However I made a 
slight edit since I was receiving the error 'Invalid length for a 
Base-64 char array' when using it for URL strings to encrypt and 
decrypt.</p>

<pre><code>public class CryptoURL
{
    private static byte[] _salt = Encoding.ASCII.GetBytes("Catto_Salt_Enter_Any_Value99");

    /// &lt;summary&gt;
    /// Encrypt the given string using AES.  The string can be decrypted using 
    /// DecryptStringAES().  The sharedSecret parameters must match. 
    /// The SharedSecret for the Password Reset that is used is in the next line
    ///  string sharedSecret = "OneUpSharedSecret9";
    /// &lt;/summary&gt;
    /// &lt;param name="plainText"&gt;The text to encrypt.&lt;/param&gt;
    /// &lt;param name="sharedSecret"&gt;A password used to generate a key for encryption.&lt;/param&gt;
    public static string EncryptString(string plainText, string sharedSecret)
    {
        if (string.IsNullOrEmpty(plainText))
            throw new ArgumentNullException("plainText");
        if (string.IsNullOrEmpty(sharedSecret))
            throw new ArgumentNullException("sharedSecret");

        string outStr = null;                       // Encrypted string to return
        RijndaelManaged aesAlg = null;              // RijndaelManaged object used to encrypt the data.

        try
        {
            // generate the key from the shared secret and the salt
            Rfc2898DeriveBytes key = new Rfc2898DeriveBytes(sharedSecret, _salt);

            // Create a RijndaelManaged object
            aesAlg = new RijndaelManaged();
            aesAlg.Key = key.GetBytes(aesAlg.KeySize / 8);

            // Create a decryptor to perform the stream transform.
            ICryptoTransform encryptor = aesAlg.CreateEncryptor(aesAlg.Key, aesAlg.IV);

            // Create the streams used for encryption.
            using (MemoryStream msEncrypt = new MemoryStream())
            {
                // prepend the IV
                msEncrypt.Write(BitConverter.GetBytes(aesAlg.IV.Length), 0, sizeof(int));
                msEncrypt.Write(aesAlg.IV, 0, aesAlg.IV.Length);
                using (CryptoStream csEncrypt = new CryptoStream(msEncrypt, encryptor, CryptoStreamMode.Write))
                {
                    using (StreamWriter swEncrypt = new StreamWriter(csEncrypt))
                    {
                        //Write all data to the stream.
                        swEncrypt.Write(plainText);
                    }
                }

                outStr = HttpServerUtility.UrlTokenEncode(msEncrypt.ToArray());
                //outStr = Convert.ToBase64String(msEncrypt.ToArray());
                // you may need to add a reference. right click reference in solution explorer =&gt; "add Reference" =&gt; .NET tab =&gt; select "System.Web"
            }
        }
        finally
        {
            // Clear the RijndaelManaged object.
            if (aesAlg != null)
                aesAlg.Clear();
        }

        // Return the encrypted bytes from the memory stream.
        return outStr;
    }

    /// &lt;summary&gt;
    /// Decrypt the given string.  Assumes the string was encrypted using 
    /// EncryptStringAES(), using an identical sharedSecret.
    /// &lt;/summary&gt;
    /// &lt;param name="cipherText"&gt;The text to decrypt.&lt;/param&gt;
    /// &lt;param name="sharedSecret"&gt;A password used to generate a key for decryption.&lt;/param&gt;
    public static string DecryptString(string cipherText, string sharedSecret)
    {
        if (string.IsNullOrEmpty(cipherText))
            throw new ArgumentNullException("cipherText");
        if (string.IsNullOrEmpty(sharedSecret))
            throw new ArgumentNullException("sharedSecret");

        // Declare the RijndaelManaged object
        // used to decrypt the data.
        RijndaelManaged aesAlg = null;

        // Declare the string used to hold
        // the decrypted text.
        string plaintext = null;

        byte[] inputByteArray;

        try
        {
            // generate the key from the shared secret and the salt
            Rfc2898DeriveBytes key = new Rfc2898DeriveBytes(sharedSecret, _salt);

            // Create the streams used for decryption.                
            //byte[] bytes = Convert.FromBase64String(cipherText);
            inputByteArray = HttpServerUtility.UrlTokenDecode(cipherText);

            using (MemoryStream msDecrypt = new MemoryStream(inputByteArray))
            {
                // Create a RijndaelManaged object
                // with the specified key and IV.
                aesAlg = new RijndaelManaged();
                aesAlg.Key = key.GetBytes(aesAlg.KeySize / 8);
                // Get the initialization vector from the encrypted stream
                aesAlg.IV = ReadByteArray(msDecrypt);
                // Create a decrytor to perform the stream transform.
                ICryptoTransform decryptor = aesAlg.CreateDecryptor(aesAlg.Key, aesAlg.IV);
                using (CryptoStream csDecrypt = new CryptoStream(msDecrypt, decryptor, CryptoStreamMode.Read))
                {
                    using (StreamReader srDecrypt = new StreamReader(csDecrypt))

                        // Read the decrypted bytes from the decrypting stream
                        // and place them in a string.
                        plaintext = srDecrypt.ReadToEnd();
                }
            }
        }
        catch (System.Exception ex)
        {
            return "ERROR";
            //throw ex;

        }
        finally
        {
            // Clear the RijndaelManaged object.
            if (aesAlg != null)
                aesAlg.Clear();
        }

        return plaintext;
    }

    static string ConvertStringArrayToString(string[] array)
    {
        //
        // Concatenate all the elements into a StringBuilder.
        //
        StringBuilder builder = new StringBuilder();
        foreach (string value in array)
        {
            builder.Append(value);
            builder.Append('.');
        }
        return builder.ToString();
    }

    private static byte[] ReadByteArray(Stream s)
    {
        byte[] rawLength = new byte[sizeof(int)];
        if (s.Read(rawLength, 0, rawLength.Length) != rawLength.Length)
        {
            throw new SystemException("Stream did not contain properly formatted byte array");
        }

        byte[] buffer = new byte[BitConverter.ToInt32(rawLength, 0)];
        if (s.Read(buffer, 0, buffer.Length) != buffer.Length)
        {
            throw new SystemException("Did not read byte array properly");
        }

        return buffer;
    }

}
</code></pre>
    </div>
    <table class="fw">
    <tbody><tr>
    <td class="vt">
<div class="post-menu"><a href="http://stackoverflow.com/a/19125021" title="short permalink to this answer" class="short-link" id="link-post-19125021">share</a><span class="lsep">|</span><a href="http://stackoverflow.com/posts/19125021/edit" class="suggest-edit-post" title="">improve this answer</a></div>                    </td>
            


    <td class="post-signature" align="right">   
       

    <div class="user-info user-hover">
    <div class="user-action-time">
        answered <span title="2013-10-01 20:12:16Z" class="relativetime">Oct 1 '13 at 20:12</span>
    </div>
    <div class="user-gravatar32">
        <a href="http://stackoverflow.com/users/17877/catto"><div class="gravatar-wrapper-32"><img src="c%23%20-%20Encrypt%20and%20decrypt%20a%20string%20-%20Stack%20Overflow_files/193310666df6ac6d120136d5365deacf.png" alt="" height="32" width="32"></div></a>
    </div>
    <div class="user-details">
        <a href="http://stackoverflow.com/users/17877/catto">Catto</a><br>
        <span class="reputation-score" title="reputation score " dir="ltr">1,908</span><span title="1 gold badge"><span class="badge1"></span><span class="badgecount">1</span></span><span title="20 silver badges"><span class="badge2"></span><span class="badgecount">20</span></span><span title="28 bronze badges"><span class="badge3"></span><span class="badgecount">28</span></span>
    </div>
</div>
    </td>
    </tr>
    </tbody></table>
</td>
        </tr>
        
<tr>
    <td class="votecell"></td>
    <td>
	    <div id="comments-19125021" class="comments  dno">
		    <table>
                <tbody data-remaining-comments-count="0" data-canpost="false" data-cansee="true" data-comments-unavailable="false" data-addlink-disabled="true">

                        <tr><td></td><td></td></tr>
                </tbody>
		    </table>
	    </div>

        <div id="comments-link-19125021" data-rep="50" data-anon="true">

                <a class="js-add-link comments-link disabled-link " title="Use comments to ask for more information or suggest improvements. Avoid comments like “+1” or “thanks”.">add a comment</a><span class="js-link-separator dno">&nbsp;|&nbsp;</span>
            <a class="js-show-link comments-link dno" title="expand to show all comments on this post" href="#" onclick=""></a>
        </div>         
    </td>
</tr>    </tbody></table>
</div>

  
<a name="26518619"></a>
<div id="answer-26518619" class="answer" data-answerid="26518619" itemscope="" itemtype="http://schema.org/Answer">

    <table>
        <tbody><tr>
            <td class="votecell">
                

<div class="vote">
        <input name="_id_" value="26518619" type="hidden">
        <a class="vote-up-off" title="This answer is useful">up vote</a>
        <span itemprop="upvoteCount" class="vote-count-post ">1</span>
        <a class="vote-down-off" title="This answer is not useful">down vote</a>




</div>

            </td>
            


<td class="answercell">
    <div class="post-text" itemprop="text">
<p>Copied in my <a href="http://stackoverflow.com/a/26518496/134761">answer</a> here from a similar question: <a href="http://stackoverflow.com/q/165808/134761">Simple two-way encryption for C#</a>.</p>

<p>Based on multiple answers and comments.</p>

<ul>
<li>Random initialization vector prepended to crypto text (@jbtule)</li>
<li>Use TransformFinalBlock() instead of MemoryStream (@RenniePet)</li>
<li>No pre-filled keys to avoid anyone copy &amp; pasting a disaster</li>
<li>Proper dispose and using patterns</li>
</ul>

<p>Code:</p>

<pre><code>/// &lt;summary&gt;
/// Simple encryption/decryption using a random initialization vector
/// and prepending it to the crypto text.
/// &lt;/summary&gt;
/// &lt;remarks&gt;Based on multiple answers in http://stackoverflow.com/questions/165808/simple-two-way-encryption-for-c-sharp &lt;/remarks&gt;
public class SimpleAes : IDisposable
{
    /// &lt;summary&gt;
    ///     Initialization vector length in bytes.
    /// &lt;/summary&gt;
    private const int IvBytes = 16;

    /// &lt;summary&gt;
    ///     Must be exactly 16, 24 or 32 characters long.
    /// &lt;/summary&gt;
    private static readonly byte[] Key = Convert.FromBase64String("FILL ME WITH 16, 24 OR 32 CHARS");

    private readonly UTF8Encoding _encoder;
    private readonly ICryptoTransform _encryptor;
    private readonly RijndaelManaged _rijndael;

    public SimpleAes()
    {
        _rijndael = new RijndaelManaged {Key = Key};
        _rijndael.GenerateIV();
        _encryptor = _rijndael.CreateEncryptor();
        _encoder = new UTF8Encoding();
    }

    public string Decrypt(string encrypted)
    {
        return _encoder.GetString(Decrypt(Convert.FromBase64String(encrypted)));
    }

    public void Dispose()
    {
        _rijndael.Dispose();
        _encryptor.Dispose();
    }

    public string Encrypt(string unencrypted)
    {
        return Convert.ToBase64String(Encrypt(_encoder.GetBytes(unencrypted)));
    }

    private byte[] Decrypt(byte[] buffer)
    {
        // IV is prepended to cryptotext
        byte[] iv = buffer.Take(IvBytes).ToArray();
        using (ICryptoTransform decryptor = _rijndael.CreateDecryptor(_rijndael.Key, iv))
        {
            return decryptor.TransformFinalBlock(buffer, IvBytes, buffer.Length - IvBytes);
        }
    }

    private byte[] Encrypt(byte[] buffer)
    {
        // Prepend cryptotext with IV
        byte[] inputBuffer = _rijndael.IV.Concat(buffer).ToArray();
        return _encryptor.TransformFinalBlock(inputBuffer, IvBytes, buffer.Length);
    }
}
</code></pre>
    </div>
    <table class="fw">
    <tbody><tr>
    <td class="vt">
<div class="post-menu"><a href="http://stackoverflow.com/a/26518619" title="short permalink to this answer" class="short-link" id="link-post-26518619">share</a><span class="lsep">|</span><a href="http://stackoverflow.com/posts/26518619/edit" class="suggest-edit-post" title="">improve this answer</a></div>                    </td>
    <td class="post-signature" align="right">
<div class="user-info ">
    <div class="user-action-time">
        <a href="http://stackoverflow.com/posts/26518619/revisions" title="show all edits to this post">edited <span title="2014-10-23 00:47:07Z" class="relativetime">Oct 23 '14 at 0:47</span></a>
    </div>
    <div class="user-gravatar32">
        
    </div>
    <div class="user-details">
        <br>
        
    </div>
</div>    </td>
            


    <td class="post-signature" align="right">   
       

    <div class="user-info ">
    <div class="user-action-time">
        answered <span title="2014-10-22 23:03:36Z" class="relativetime">Oct 22 '14 at 23:03</span>
    </div>
    <div class="user-gravatar32">
        <a href="http://stackoverflow.com/users/134761/anjdreas"><div class="gravatar-wrapper-32"><img src="c%23%20-%20Encrypt%20and%20decrypt%20a%20string%20-%20Stack%20Overflow_files/4cb1c1f0648af4bd19161f579eb009e7.jpg" alt="" height="32" width="32"></div></a>
    </div>
    <div class="user-details">
        <a href="http://stackoverflow.com/users/134761/anjdreas">anjdreas</a><br>
        <span class="reputation-score" title="reputation score " dir="ltr">2,792</span><span title="1 gold badge"><span class="badge1"></span><span class="badgecount">1</span></span><span title="27 silver badges"><span class="badge2"></span><span class="badgecount">27</span></span><span title="36 bronze badges"><span class="badge3"></span><span class="badgecount">36</span></span>
    </div>
</div>
    </td>
    </tr>
    </tbody></table>
</td>
        </tr>
        
<tr>
    <td class="votecell"></td>
    <td>
	    <div id="comments-26518619" class="comments ">
		    <table>
                <tbody data-remaining-comments-count="0" data-canpost="false" data-cansee="true" data-comments-unavailable="false" data-addlink-disabled="true">



    <tr id="comment-45537674" class="comment ">
        <td>
            <table>
                <tbody>
                    <tr>
                        <td class=" comment-score">
                                &nbsp;&nbsp;
                        </td>
                        <td>
                                &nbsp;
                        </td>
                    </tr>
                </tbody>
            </table>
        </td>
        <td class="comment-text">
            <div style="display: block;" class="comment-body">
                <span class="comment-copy">You should add a MAC to prevent active attacks, such as padding oracles.</span>
                –&nbsp;
                    <a href="http://stackoverflow.com/users/445517/codesinchaos" title="67601 reputation" class="comment-user">CodesInChaos</a>
                <span class="comment-date" dir="ltr"><span title="2015-02-19 21:31:57Z" class="relativetime-clean">Feb 19 at 21:31</span></span>
                                                                            </div>
                    </td>
    </tr>
    <tr id="comment-45548877" class="comment ">
        <td>
            <table>
                <tbody>
                    <tr>
                        <td class=" comment-score">
                                &nbsp;&nbsp;
                        </td>
                        <td>
                                &nbsp;
                        </td>
                    </tr>
                </tbody>
            </table>
        </td>
        <td class="comment-text">
            <div style="display: block;" class="comment-body">
                <span class="comment-copy">You are probably right, I'm 
in no way proficient on this area. When I originally visited this topic I
 just wanted something simple that works and fairly secure. I'd 
definitely use a tried and true library for very sensitive data.</span>
                –&nbsp;
                    <a href="http://stackoverflow.com/users/134761/anjdreas" title="2792 reputation" class="comment-user">anjdreas</a>
                <span class="comment-date" dir="ltr"><span title="2015-02-20 07:36:44Z" class="relativetime-clean">Feb 20 at 7:36</span></span>
                                                                            </div>
                    </td>
    </tr>
                </tbody>
		    </table>
	    </div>

        <div id="comments-link-26518619" data-rep="50" data-anon="true">

                <a class="js-add-link comments-link disabled-link " title="Use comments to ask for more information or suggest improvements. Avoid comments like “+1” or “thanks”.">add a comment</a><span class="js-link-separator dno">&nbsp;|&nbsp;</span>
            <a class="js-show-link comments-link dno" title="expand to show all comments on this post" href="#" onclick=""></a>
        </div>         
    </td>
</tr>    </tbody></table>
</div>

  
<a name="27519762"></a>
<div id="answer-27519762" class="answer" data-answerid="27519762" itemscope="" itemtype="http://schema.org/Answer">

    <table>
        <tbody><tr>
            <td class="votecell">
                

<div class="vote">
        <input name="_id_" value="27519762" type="hidden">
        <a class="vote-up-off" title="This answer is useful">up vote</a>
        <span itemprop="upvoteCount" class="vote-count-post ">1</span>
        <a class="vote-down-off" title="This answer is not useful">down vote</a>




</div>

            </td>
            


<td class="answercell">
    <div class="post-text" itemprop="text">
<p>Here is simple Snippet originally by ASP Snippets   </p>

<pre><code>using System.Text;
using System.Security.Cryptography;
using System.IO;


 private string Encrypt(string clearText)
    {
        string EncryptionKey = "yourkey";
        byte[] clearBytes = Encoding.Unicode.GetBytes(clearText);
        using (Aes encryptor = Aes.Create())
        {
            Rfc2898DeriveBytes pdb = new Rfc2898DeriveBytes(EncryptionKey, new byte[] { 0x49, 0x76, 0x61, 0x6e, 0x20, 0x4d, 0x65, 0x64, 0x76, 0x65, 0x64, 0x65, 0x76 });
            encryptor.Key = pdb.GetBytes(32);
            encryptor.IV = pdb.GetBytes(16);
            using (MemoryStream ms = new MemoryStream())
            {
                using (CryptoStream cs = new CryptoStream(ms, encryptor.CreateEncryptor(), CryptoStreamMode.Write))
                {
                    cs.Write(clearBytes, 0, clearBytes.Length);
                    cs.Close();
                }
                clearText = Convert.ToBase64String(ms.ToArray());
            }
        }
        return clearText;
    }

 private string Decrypt(string cipherText)
    {
        string EncryptionKey = "yourkey";
        cipherText = cipherText.Replace(" ", "+");
        byte[] cipherBytes = Convert.FromBase64String(cipherText);
        using (Aes encryptor = Aes.Create())
        {
            Rfc2898DeriveBytes pdb = new Rfc2898DeriveBytes(EncryptionKey, new byte[] { 0x49, 0x76, 0x61, 0x6e, 0x20, 0x4d, 0x65, 0x64, 0x76, 0x65, 0x64, 0x65, 0x76 });
            encryptor.Key = pdb.GetBytes(32);
            encryptor.IV = pdb.GetBytes(16);
            using (MemoryStream ms = new MemoryStream())
            {
                using (CryptoStream cs = new CryptoStream(ms, encryptor.CreateDecryptor(), CryptoStreamMode.Write))
                {
                    cs.Write(cipherBytes, 0, cipherBytes.Length);
                    cs.Close();
                }
                cipherText = Encoding.Unicode.GetString(ms.ToArray());
            }
        }
        return cipherText;
    }
</code></pre>
    </div>
    <table class="fw">
    <tbody><tr>
    <td class="vt">
<div class="post-menu"><a href="http://stackoverflow.com/a/27519762" title="short permalink to this answer" class="short-link" id="link-post-27519762">share</a><span class="lsep">|</span><a href="http://stackoverflow.com/posts/27519762/edit" class="suggest-edit-post" title="">improve this answer</a></div>                    </td>
            


    <td class="post-signature" align="right">   
       

    <div class="user-info ">
    <div class="user-action-time">
        answered <span title="2014-12-17 06:46:17Z" class="relativetime">Dec 17 '14 at 6:46</span>
    </div>
    <div class="user-gravatar32">
        <a href="http://stackoverflow.com/users/3583859/vijay-kumbhoje"><div class="gravatar-wrapper-32"><img src="c%23%20-%20Encrypt%20and%20decrypt%20a%20string%20-%20Stack%20Overflow_files/SGRPS.gif" alt="" height="32" width="32"></div></a>
    </div>
    <div class="user-details">
        <a href="http://stackoverflow.com/users/3583859/vijay-kumbhoje">Vijay Kumbhoje</a><br>
        <span class="reputation-score" title="reputation score " dir="ltr">89</span><span title="11 bronze badges"><span class="badge3"></span><span class="badgecount">11</span></span>
    </div>
</div>
    </td>
    </tr>
    </tbody></table>
</td>
        </tr>
        
<tr>
    <td class="votecell"></td>
    <td>
	    <div id="comments-27519762" class="comments ">
		    <table>
                <tbody data-remaining-comments-count="0" data-canpost="false" data-cansee="true" data-comments-unavailable="false" data-addlink-disabled="true">



    <tr id="comment-43473079" class="comment ">
        <td class="comment-actions">
            <table>
                <tbody>
                    <tr>
                        <td class=" comment-score">
                                <span title="number of 'useful comment' votes received" class="cool">1</span>
                        </td>
                        <td>
                                &nbsp;
                        </td>
                    </tr>
                </tbody>
            </table>
        </td>
        <td class="comment-text">
            <div style="display: block;" class="comment-body">
                <span class="comment-copy">You don't check integrity/authentication. You should add a MAC.</span>
                –&nbsp;
                    <a href="http://stackoverflow.com/users/1816580/artjom-b" title="23612 reputation" class="comment-user">Artjom B.</a>
                <span class="comment-date" dir="ltr"><span title="2014-12-17 09:18:00Z" class="relativetime-clean">Dec 17 '14 at 9:18</span></span>
                                                                            </div>
                    </td>
    </tr>
    <tr id="comment-43994268" class="comment ">
        <td>
            <table>
                <tbody>
                    <tr>
                        <td class=" comment-score">
                                &nbsp;&nbsp;
                        </td>
                        <td>
                                &nbsp;
                        </td>
                    </tr>
                </tbody>
            </table>
        </td>
        <td class="comment-text">
            <div style="display: block;" class="comment-body">
                <span class="comment-copy">What you exactly mean actually the above example is to Encrypt/Decrypt the string variable.</span>
                –&nbsp;
                    <a href="http://stackoverflow.com/users/3583859/vijay-kumbhoje" title="89 reputation" class="comment-user">Vijay Kumbhoje</a>
                <span class="comment-date" dir="ltr"><span title="2015-01-06 05:01:18Z" class="relativetime-clean">Jan 6 at 5:01</span></span>
                                                                            </div>
                    </td>
    </tr>
    <tr id="comment-44000215" class="comment ">
        <td class="comment-actions">
            <table>
                <tbody>
                    <tr>
                        <td class=" comment-score">
                                <span title="number of 'useful comment' votes received" class="cool">1</span>
                        </td>
                        <td>
                                &nbsp;
                        </td>
                    </tr>
                </tbody>
            </table>
        </td>
        <td class="comment-text">
            <div style="display: block;" class="comment-body">
                <span class="comment-copy">The ciphertext should be 
authenticated (e.g. with HMAC) to protect against padding oracle 
attacks. When I look through this code again, it seems that you're using
 ECB mode which should never be used because it is not semantically 
secure. Also, when you derive the key and IV from a master key and salt,
 the salt is static. This leads to a static IV which breaks the whole 
concept of the IV and makes your scheme semantically insecure again.</span>
                –&nbsp;
                    <a href="http://stackoverflow.com/users/1816580/artjom-b" title="23612 reputation" class="comment-user">Artjom B.</a>
                <span class="comment-date" dir="ltr"><span title="2015-01-06 09:33:10Z" class="relativetime-clean">Jan 6 at 9:33</span></span>
                    <span class="edited-yes" title="this comment was edited 1 time"></span>
                                                                            </div>
                    </td>
    </tr>
    <tr id="comment-44109958" class="comment ">
        <td>
            <table>
                <tbody>
                    <tr>
                        <td class=" comment-score">
                                &nbsp;&nbsp;
                        </td>
                        <td>
                                &nbsp;
                        </td>
                    </tr>
                </tbody>
            </table>
        </td>
        <td class="comment-text">
            <div style="display: block;" class="comment-body">
                <span class="comment-copy">Thanks Brother, it would be great help if you can pass the corrected code here.</span>
                –&nbsp;
                    <a href="http://stackoverflow.com/users/3583859/vijay-kumbhoje" title="89 reputation" class="comment-user">Vijay Kumbhoje</a>
                <span class="comment-date" dir="ltr"><span title="2015-01-09 02:35:11Z" class="relativetime-clean">Jan 9 at 2:35</span></span>
                                                                            </div>
                    </td>
    </tr>
                </tbody>
		    </table>
	    </div>

        <div id="comments-link-27519762" data-rep="50" data-anon="true">

                <a class="js-add-link comments-link disabled-link " title="Use comments to ask for more information or suggest improvements. Avoid comments like “+1” or “thanks”.">add a comment</a><span class="js-link-separator dno">&nbsp;|&nbsp;</span>
            <a class="js-show-link comments-link dno" title="expand to show all comments on this post" href="#" onclick=""></a>
        </div>         
    </td>
</tr>    </tbody></table>
</div>

  
<a name="30094557"></a>
<div id="answer-30094557" class="answer" data-answerid="30094557" itemscope="" itemtype="http://schema.org/Answer">

    <table>
        <tbody><tr>
            <td class="votecell">
                

<div class="vote">
        <input name="_id_" value="30094557" type="hidden">
        <a class="vote-up-off" title="This answer is useful">up vote</a>
        <span itemprop="upvoteCount" class="vote-count-post ">0</span>
        <a class="vote-down-off" title="This answer is not useful">down vote</a>




</div>

            </td>
            


<td class="answercell">
    <div class="post-text" itemprop="text">
<p>A good algorithm to securely encrypt data is <a href="http://en.wikipedia.org/wiki/Bcrypt" rel="nofollow">BCrypt</a>:</p>

<blockquote>
  <p>Besides incorporating a salt to protect against rainbow table attacks,
  bcrypt is an adaptive function: over time, the iteration count can be
  increased to make it slower, so it remains resistant to brute-force
  search attacks even with increasing computation power.</p>
</blockquote>

<p>There's a nice <a href="https://bcrypt.codeplex.com/" rel="nofollow">.NET implementation of BCrypt</a> that is available also <a href="https://www.nuget.org/packages/BCrypt-Official" rel="nofollow">as a NuGet package</a>.</p>
    </div>
    <table class="fw">
    <tbody><tr>
    <td class="vt">
<div class="post-menu"><a href="http://stackoverflow.com/a/30094557" title="short permalink to this answer" class="short-link" id="link-post-30094557">share</a><span class="lsep">|</span><a href="http://stackoverflow.com/posts/30094557/edit" class="suggest-edit-post" title="">improve this answer</a></div>                    </td>
            


    <td class="post-signature" align="right">   
       

    <div class="user-info user-hover">
    <div class="user-action-time">
        answered <span title="2015-05-07 07:30:09Z" class="relativetime">May 7 at 7:30</span>
    </div>
    <div class="user-gravatar32">
        <a href="http://stackoverflow.com/users/4574/konamiman"><div class="gravatar-wrapper-32"><img src="c%23%20-%20Encrypt%20and%20decrypt%20a%20string%20-%20Stack%20Overflow_files/iqUR6.jpg" alt="" height="32" width="32"></div></a>
    </div>
    <div class="user-details">
        <a href="http://stackoverflow.com/users/4574/konamiman">Konamiman</a><br>
        <span class="reputation-score" title="reputation score 24543" dir="ltr">24.5k</span><span title="10 gold badges"><span class="badge1"></span><span class="badgecount">10</span></span><span title="63 silver badges"><span class="badge2"></span><span class="badgecount">63</span></span><span title="86 bronze badges"><span class="badge3"></span><span class="badgecount">86</span></span>
    </div>
</div>
    </td>
    </tr>
    </tbody></table>
</td>
        </tr>
        
<tr>
    <td class="votecell"></td>
    <td>
	    <div id="comments-30094557" class="comments  dno">
		    <table>
                <tbody data-remaining-comments-count="0" data-canpost="false" data-cansee="true" data-comments-unavailable="false" data-addlink-disabled="true">

                        <tr><td></td><td></td></tr>
                </tbody>
		    </table>
	    </div>

        <div id="comments-link-30094557" data-rep="50" data-anon="true">

                <a class="js-add-link comments-link disabled-link " title="Use comments to ask for more information or suggest improvements. Avoid comments like “+1” or “thanks”.">add a comment</a><span class="js-link-separator dno">&nbsp;|&nbsp;</span>
            <a class="js-show-link comments-link dno" title="expand to show all comments on this post" href="#" onclick=""></a>
        </div>         
    </td>
</tr>    </tbody></table>
</div>

  
<a name="30438370"></a>
<div id="answer-30438370" class="answer" data-answerid="30438370" itemscope="" itemtype="http://schema.org/Answer">

    <table>
        <tbody><tr>
            <td class="votecell">
                

<div class="vote">
        <input name="_id_" value="30438370" type="hidden">
        <a class="vote-up-off" title="This answer is useful">up vote</a>
        <span itemprop="upvoteCount" class="vote-count-post ">0</span>
        <a class="vote-down-off" title="This answer is not useful">down vote</a>




</div>

            </td>
            


<td class="answercell">
    <div class="post-text" itemprop="text">
<p>I found <a href="http://stackoverflow.com/a/10366194/188474">jbtule</a>'s answer a bit complicated for a quick and dirty secured AES string encryption and <a href="http://stackoverflow.com/a/2791259">Brett</a>'s
 answer had a bug with the Initialization Vector being a fixed value 
making it vulnerable to padding attacks, so I fixed Brett's code and 
added a random IV that is added to the chipered string, creating a 
different encrypted value each and every encryption of the same value:</p>

<p>Encryption:</p>

<pre><code>public static string Encrypt(string clearText)
    {            
        byte[] clearBytes = Encoding.Unicode.GetBytes(clearText);
        using (Aes encryptor = Aes.Create())
        {
            byte[] IV = new byte[15];
            rand.NextBytes(IV);
            Rfc2898DeriveBytes pdb = new Rfc2898DeriveBytes(EncryptionKey, IV);
            encryptor.Key = pdb.GetBytes(32);
            encryptor.IV = pdb.GetBytes(16);
            using (MemoryStream ms = new MemoryStream())
            {
                using (CryptoStream cs = new CryptoStream(ms, encryptor.CreateEncryptor(), CryptoStreamMode.Write))
                {
                    cs.Write(clearBytes, 0, clearBytes.Length);
                    cs.Close();
                }
                clearText = Convert.ToBase64String(IV) + Convert.ToBase64String(ms.ToArray());
            }
        }
        return clearText;
    }
</code></pre>

<p>Decryption:</p>

<pre><code>public static string Decrypt(string cipherText)
    {
        byte[] IV = Convert.FromBase64String(cipherText.Substring(0, 20));
        cipherText = cipherText.Substring(20).Replace(" ", "+");
        byte[] cipherBytes = Convert.FromBase64String(cipherText);
        using (Aes encryptor = Aes.Create())
        {
            Rfc2898DeriveBytes pdb = new Rfc2898DeriveBytes(EncryptionKey, IV);
            encryptor.Key = pdb.GetBytes(32);
            encryptor.IV = pdb.GetBytes(16);
            using (MemoryStream ms = new MemoryStream())
            {
                using (CryptoStream cs = new CryptoStream(ms, encryptor.CreateDecryptor(), CryptoStreamMode.Write))
                {
                    cs.Write(cipherBytes, 0, cipherBytes.Length);
                    cs.Close();
                }
                cipherText = Encoding.Unicode.GetString(ms.ToArray());
            }
        }
        return cipherText;
    }
</code></pre>

<p>Replace EncryptionKey with your key.
In my implementation, the key is being saved in the configuration file 
(web.config\app.config) as you shouldn't save it hard coded. The 
configuration file should be <a href="https://msdn.microsoft.com/en-us/library/zhhddkxy.aspx" rel="nofollow">also encrypted</a> so the key won't be saved as clear text in it.</p>

<pre><code>protected static string _Key = "";
    protected static string EncryptionKey
    {
        get
        {
            if (String.IsNullOrEmpty(_Key))
            {
                _Key = ConfigurationManager.AppSettings["AESKey"].ToString();
            }

            return _Key;
        }
    }
</code></pre>
    </div>
    <table class="fw">
    <tbody><tr>
    <td class="vt">
<div class="post-menu"><a href="http://stackoverflow.com/a/30438370" title="short permalink to this answer" class="short-link" id="link-post-30438370">share</a><span class="lsep">|</span><a href="http://stackoverflow.com/posts/30438370/edit" class="suggest-edit-post" title="">improve this answer</a></div>                    </td>
            


    <td class="post-signature" align="right">   
       

    <div class="user-info ">
    <div class="user-action-time">
        answered <span title="2015-05-25 12:26:02Z" class="relativetime">May 25 at 12:26</span>
    </div>
    <div class="user-gravatar32">
        <a href="http://stackoverflow.com/users/2464918/gil-cohen"><div class="gravatar-wrapper-32"><img src="c%23%20-%20Encrypt%20and%20decrypt%20a%20string%20-%20Stack%20Overflow_files/8761db37d71e1fddff61af66152de799.png" alt="" height="32" width="32"></div></a>
    </div>
    <div class="user-details">
        <a href="http://stackoverflow.com/users/2464918/gil-cohen">Gil Cohen</a><br>
        <span class="reputation-score" title="reputation score " dir="ltr">245</span><span title="1 silver badge"><span class="badge2"></span><span class="badgecount">1</span></span><span title="6 bronze badges"><span class="badge3"></span><span class="badgecount">6</span></span>
    </div>
</div>
    </td>
    </tr>
    </tbody></table>
</td>
        </tr>
        
<tr>
    <td class="votecell"></td>
    <td>
	    <div id="comments-30438370" class="comments  dno">
		    <table>
                <tbody data-remaining-comments-count="0" data-canpost="false" data-cansee="true" data-comments-unavailable="false" data-addlink-disabled="true">

                        <tr><td></td><td></td></tr>
                </tbody>
		    </table>
	    </div>

        <div id="comments-link-30438370" data-rep="50" data-anon="true">

                <a class="js-add-link comments-link disabled-link " title="Use comments to ask for more information or suggest improvements. Avoid comments like “+1” or “thanks”.">add a comment</a><span class="js-link-separator dno">&nbsp;|&nbsp;</span>
            <a class="js-show-link comments-link dno" title="expand to show all comments on this post" href="#" onclick=""></a>
        </div>         
    </td>
</tr>    </tbody></table>
</div>

  
<a name="22934397"></a>
<div id="answer-22934397" class="answer" data-answerid="22934397" itemscope="" itemtype="http://schema.org/Answer">

    <table>
        <tbody><tr>
            <td class="votecell">
                

<div class="vote">
        <input name="_id_" value="22934397" type="hidden">
        <a class="vote-up-off" title="This answer is useful">up vote</a>
        <span itemprop="upvoteCount" class="vote-count-post ">-1</span>
        <a class="vote-down-off" title="This answer is not useful">down vote</a>




</div>

            </td>
            


<td class="answercell">
    <div class="post-text" itemprop="text">
<pre><code>            using System;
            using System.Collections.Generic;
            using System.Text;
            using System.Text.RegularExpressions;  // This is for password validation
            using System.Security.Cryptography;
            using System.Configuration;  // This is where the hash functions reside

            namespace BullyTracker.Common
            {
                public class HashEncryption
                {
                    //public string GenerateHashvalue(string thisPassword)
                    //{
                    //    MD5CryptoServiceProvider md5 = new MD5CryptoServiceProvider();
                    //    byte[] tmpSource;
                    //    byte[] tmpHash;

                    //    tmpSource = ASCIIEncoding.ASCII.GetBytes(thisPassword); // Turn password into byte array
                    //    tmpHash = md5.ComputeHash(tmpSource);

                    //    StringBuilder sOutput = new StringBuilder(tmpHash.Length);
                    //    for (int i = 0; i &lt; tmpHash.Length; i++)
                    //    {
                    //        sOutput.Append(tmpHash[i].ToString("X2"));  // X2 formats to hexadecimal
                    //    }
                    //    return sOutput.ToString();
                    //}
                    //public Boolean VerifyHashPassword(string thisPassword, string thisHash)
                    //{
                    //    Boolean IsValid = false;
                    //    string tmpHash = GenerateHashvalue(thisPassword); // Call the routine on user input
                    //    if (tmpHash == thisHash) IsValid = true;  // Compare to previously generated hash
                    //    return IsValid;
                    //}
                    public string GenerateHashvalue(string toEncrypt, bool useHashing)
                    {
                        byte[] keyArray;
                        byte[] toEncryptArray = UTF8Encoding.UTF8.GetBytes(toEncrypt);

                        System.Configuration.AppSettingsReader settingsReader = new AppSettingsReader();
                        // Get the key from config file
                        string key = (string)settingsReader.GetValue("SecurityKey", typeof(String));
                        //System.Windows.Forms.MessageBox.Show(key);
                        if (useHashing)
                        {
                            MD5CryptoServiceProvider hashmd5 = new MD5CryptoServiceProvider();
                            keyArray = hashmd5.ComputeHash(UTF8Encoding.UTF8.GetBytes(key));
                            hashmd5.Clear();
                        }
                        else
                            keyArray = UTF8Encoding.UTF8.GetBytes(key);

                        TripleDESCryptoServiceProvider tdes = new TripleDESCryptoServiceProvider();
                        tdes.Key = keyArray;
                        tdes.Mode = CipherMode.ECB;
                        tdes.Padding = PaddingMode.PKCS7;

                        ICryptoTransform cTransform = tdes.CreateEncryptor();
                        byte[] resultArray = cTransform.TransformFinalBlock(toEncryptArray, 0, toEncryptArray.Length);
                        tdes.Clear();
                        return Convert.ToBase64String(resultArray, 0, resultArray.Length);
                    }
                    /// &lt;summary&gt;
                    /// DeCrypt a string using dual encryption method. Return a DeCrypted clear string
                    /// &lt;/summary&gt;
                    /// &lt;param name="cipherString"&gt;encrypted string&lt;/param&gt;
                    /// &lt;param name="useHashing"&gt;Did you use hashing to encrypt this data? pass true is yes&lt;/param&gt;
                    /// &lt;returns&gt;&lt;/returns&gt;
                    public string Decrypt(string cipherString, bool useHashing)
                    {
                        byte[] keyArray;
                        byte[] toEncryptArray = Convert.FromBase64String(cipherString);

                        System.Configuration.AppSettingsReader settingsReader = new AppSettingsReader();
                        //Get your key from config file to open the lock!
                        string key = (string)settingsReader.GetValue("SecurityKey", typeof(String));

                        if (useHashing)
                        {
                            MD5CryptoServiceProvider hashmd5 = new MD5CryptoServiceProvider();
                            keyArray = hashmd5.ComputeHash(UTF8Encoding.UTF8.GetBytes(key));
                            hashmd5.Clear();
                        }
                        else
                            keyArray = UTF8Encoding.UTF8.GetBytes(key);

                        TripleDESCryptoServiceProvider tdes = new TripleDESCryptoServiceProvider();
                        tdes.Key = keyArray;
                        tdes.Mode = CipherMode.ECB;
                        tdes.Padding = PaddingMode.PKCS7;

                        ICryptoTransform cTransform = tdes.CreateDecryptor();
                        byte[] resultArray = cTransform.TransformFinalBlock(toEncryptArray, 0, toEncryptArray.Length);

                        tdes.Clear();
                        return UTF8Encoding.UTF8.GetString(resultArray);
                    }


                }

            }
</code></pre>
    </div>
    <table class="fw">
    <tbody><tr>
    <td class="vt">
<div class="post-menu"><a href="http://stackoverflow.com/a/22934397" title="short permalink to this answer" class="short-link" id="link-post-22934397">share</a><span class="lsep">|</span><a href="http://stackoverflow.com/posts/22934397/edit" class="suggest-edit-post" title="">improve this answer</a></div>                    </td>
            


    <td class="post-signature" align="right">   
       

    <div class="user-info ">
    <div class="user-action-time">
        answered <span title="2014-04-08 10:33:50Z" class="relativetime">Apr 8 '14 at 10:33</span>
    </div>
    <div class="user-gravatar32">
        <a href="http://stackoverflow.com/users/1463105/karthikmanoharan"><div class="gravatar-wrapper-32"><img src="c%23%20-%20Encrypt%20and%20decrypt%20a%20string%20-%20Stack%20Overflow_files/5da2e5da1eb334ad7f3bf96d67f76139.png" alt="" height="32" width="32"></div></a>
    </div>
    <div class="user-details">
        <a href="http://stackoverflow.com/users/1463105/karthikmanoharan">KarthikManoharan</a><br>
        <span class="reputation-score" title="reputation score " dir="ltr">562</span><span title="2 silver badges"><span class="badge2"></span><span class="badgecount">2</span></span><span title="11 bronze badges"><span class="badge3"></span><span class="badgecount">11</span></span>
    </div>
</div>
    </td>
    </tr>
    </tbody></table>
</td>
        </tr>
        
<tr>
    <td class="votecell"></td>
    <td>
	    <div id="comments-22934397" class="comments ">
		    <table>
                <tbody data-remaining-comments-count="0" data-canpost="false" data-cansee="true" data-comments-unavailable="false" data-addlink-disabled="true">



    <tr id="comment-35101156" class="comment ">
        <td class="comment-actions">
            <table>
                <tbody>
                    <tr>
                        <td class=" comment-score">
                                <span title="number of 'useful comment' votes received" class="cool">2</span>
                        </td>
                        <td>
                                &nbsp;
                        </td>
                    </tr>
                </tbody>
            </table>
        </td>
        <td class="comment-text">
            <div style="display: block;" class="comment-body">
                <span class="comment-copy">Really low quality. 1) ECB mode (which also implies no IV) 2) 3DES 3) Confuses keys and passwords. 4) Bad naming 5) No MAC</span>
                –&nbsp;
                    <a href="http://stackoverflow.com/users/445517/codesinchaos" title="67601 reputation" class="comment-user">CodesInChaos</a>
                <span class="comment-date" dir="ltr"><span title="2014-04-10 10:28:55Z" class="relativetime-clean">Apr 10 '14 at 10:28</span></span>
                                                                            </div>
                    </td>
    </tr>
                </tbody>
		    </table>
	    </div>

        <div id="comments-link-22934397" data-rep="50" data-anon="true">

                <a class="js-add-link comments-link disabled-link " title="Use comments to ask for more information or suggest improvements. Avoid comments like “+1” or “thanks”.">add a comment</a><span class="js-link-separator dno">&nbsp;|&nbsp;</span>
            <a class="js-show-link comments-link dno" title="expand to show all comments on this post" href="#" onclick=""></a>
        </div>         
    </td>
</tr>    </tbody></table>
</div>

  
<a name="23245293"></a>
<div id="answer-23245293" class="answer" data-answerid="23245293" itemscope="" itemtype="http://schema.org/Answer">

    <table>
        <tbody><tr>
            <td class="votecell">
                

<div class="vote">
        <input name="_id_" value="23245293" type="hidden">
        <a class="vote-up-off" title="This answer is useful">up vote</a>
        <span itemprop="upvoteCount" class="vote-count-post ">-1</span>
        <a class="vote-down-off" title="This answer is not useful">down vote</a>




</div>

            </td>
            


<td class="answercell">
    <div class="post-text" itemprop="text">
<p>for simplicity i made for myself this function that i use for non 
crypto purposes : replace "yourpassphrase" with your password ...</p>

<pre><code>using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Security.Cryptography;
using System.IO;

 namespace My
{
    public class strCrypto
    {
        // This constant string is used as a "salt" value for the PasswordDeriveBytes function calls.
    // This size of the IV (in bytes) must = (keysize / 8).  Default keysize is 256, so the IV must be
    // 32 bytes long.  Using a 16 character string here gives us 32 bytes when converted to a byte array.
    private const string initVector = "r5dm5fgm24mfhfku";
    private const string passPhrase = "yourpassphrase"; // email password encryption password

    // This constant is used to determine the keysize of the encryption algorithm.
    private const int keysize = 256;

    public static string encryptString(string plainText)
    {
        //if the plaintext  is empty or null string just return an empty string
        if (plainText == "" || plainText == null )
        {
            return "";
        }

        byte[] initVectorBytes = Encoding.UTF8.GetBytes(initVector);
        byte[] plainTextBytes = Encoding.UTF8.GetBytes(plainText);
        PasswordDeriveBytes password = new PasswordDeriveBytes(passPhrase, null);
        byte[] keyBytes = password.GetBytes(keysize / 8);
        RijndaelManaged symmetricKey = new RijndaelManaged();
        symmetricKey.Mode = CipherMode.CBC;
        ICryptoTransform encryptor = symmetricKey.CreateEncryptor(keyBytes, initVectorBytes);
        MemoryStream memoryStream = new MemoryStream();
        CryptoStream cryptoStream = new CryptoStream(memoryStream, encryptor, CryptoStreamMode.Write);
        cryptoStream.Write(plainTextBytes, 0, plainTextBytes.Length);
        cryptoStream.FlushFinalBlock();
        byte[] cipherTextBytes = memoryStream.ToArray();
        memoryStream.Close();
        cryptoStream.Close();
        return Convert.ToBase64String(cipherTextBytes);
    }

    public static string decryptString(string cipherText)
    {
        //if the ciphertext is empty or null string just return an empty string
        if (cipherText == "" || cipherText == null )
        {
            return "";
        }

        byte[] initVectorBytes = Encoding.ASCII.GetBytes(initVector);
        byte[] cipherTextBytes = Convert.FromBase64String(cipherText);
        PasswordDeriveBytes password = new PasswordDeriveBytes(passPhrase, null);
        byte[] keyBytes = password.GetBytes(keysize / 8);
        RijndaelManaged symmetricKey = new RijndaelManaged();
        symmetricKey.Mode = CipherMode.CBC;
        ICryptoTransform decryptor = symmetricKey.CreateDecryptor(keyBytes, initVectorBytes);
        MemoryStream memoryStream = new MemoryStream(cipherTextBytes);
        CryptoStream cryptoStream = new CryptoStream(memoryStream, decryptor, CryptoStreamMode.Read);
        byte[] plainTextBytes = new byte[cipherTextBytes.Length];
        int decryptedByteCount = cryptoStream.Read(plainTextBytes, 0, plainTextBytes.Length);
        memoryStream.Close();
        cryptoStream.Close();
        return Encoding.UTF8.GetString(plainTextBytes, 0, decryptedByteCount);
    }


}
</code></pre>

<p>}</p>
    </div>
    <table class="fw">
    <tbody><tr>
    <td class="vt">
<div class="post-menu"><a href="http://stackoverflow.com/a/23245293" title="short permalink to this answer" class="short-link" id="link-post-23245293">share</a><span class="lsep">|</span><a href="http://stackoverflow.com/posts/23245293/edit" class="suggest-edit-post" title="">improve this answer</a></div>                    </td>
            


    <td class="post-signature" align="right">   
       

    <div class="user-info ">
    <div class="user-action-time">
        answered <span title="2014-04-23 13:08:10Z" class="relativetime">Apr 23 '14 at 13:08</span>
    </div>
    <div class="user-gravatar32">
        <a href="http://stackoverflow.com/users/3556387/user3556387"><div class="gravatar-wrapper-32"><img src="c%23%20-%20Encrypt%20and%20decrypt%20a%20string%20-%20Stack%20Overflow_files/d5f9aacb1c607ed376275eb3127b0fc0.png" alt="" height="32" width="32"></div></a>
    </div>
    <div class="user-details">
        <a href="http://stackoverflow.com/users/3556387/user3556387">user3556387</a><br>
        <span class="reputation-score" title="reputation score " dir="ltr">45</span><span title="6 bronze badges"><span class="badge3"></span><span class="badgecount">6</span></span>
    </div>
</div>
    </td>
    </tr>
    </tbody></table>
</td>
        </tr>
        
<tr>
    <td class="votecell"></td>
    <td>
	    <div id="comments-23245293" class="comments ">
		    <table>
                <tbody data-remaining-comments-count="0" data-canpost="false" data-cansee="true" data-comments-unavailable="false" data-addlink-disabled="true">



    <tr id="comment-35575525" class="comment ">
        <td class="comment-actions">
            <table>
                <tbody>
                    <tr>
                        <td class=" comment-score">
                                <span title="number of 'useful comment' votes received" class="cool">3</span>
                        </td>
                        <td>
                                &nbsp;
                        </td>
                    </tr>
                </tbody>
            </table>
        </td>
        <td class="comment-text">
            <div style="display: block;" class="comment-body">
                <span class="comment-copy">1) No salt in key derivation 
2) Constant IV, which misses the whole point of an IV. It should be 
different for each encryption. 3) No authentication =&gt; padding 
oracles are a threat 4) <code>encryptor.TransformFinalBlock</code> is simpler than using those memory and crypto streams.</span>
                –&nbsp;
                    <a href="http://stackoverflow.com/users/445517/codesinchaos" title="67601 reputation" class="comment-user">CodesInChaos</a>
                <span class="comment-date" dir="ltr"><span title="2014-04-23 16:09:27Z" class="relativetime-clean">Apr 23 '14 at 16:09</span></span>
                                                                            </div>
                    </td>
    </tr>
                </tbody>
		    </table>
	    </div>

        <div id="comments-link-23245293" data-rep="50" data-anon="true">

                <a class="js-add-link comments-link disabled-link " title="Use comments to ask for more information or suggest improvements. Avoid comments like “+1” or “thanks”.">add a comment</a><span class="js-link-separator dno">&nbsp;|&nbsp;</span>
            <a class="js-show-link comments-link dno" title="expand to show all comments on this post" href="#" onclick=""></a>
        </div>         
    </td>
</tr>    </tbody></table>
</div>

  
<a name="5509947"></a>
<div id="answer-5509947" class="answer" data-answerid="5509947" itemscope="" itemtype="http://schema.org/Answer">

    <table>
        <tbody><tr>
            <td class="votecell">
                

<div class="vote">
        <input name="_id_" value="5509947" type="hidden">
        <a class="vote-up-off" title="This answer is useful">up vote</a>
        <span itemprop="upvoteCount" class="vote-count-post ">-2</span>
        <a class="vote-down-off" title="This answer is not useful">down vote</a>




</div>

            </td>
            


<td class="answercell">
    <div class="post-text" itemprop="text">
<pre><code>using System;
using System.Data;
using System.Configuration;
using System.Text;
using System.Security.Cryptography;

namespace Encription
{
    class CryptorEngine
    {
        public static string Encrypt(string ToEncrypt, bool useHasing)
        {
            byte[] keyArray;
            byte[] toEncryptArray = UTF8Encoding.UTF8.GetBytes(ToEncrypt);
            //System.Configuration.AppSettingsReader settingsReader = new     AppSettingsReader();
           string Key = "Bhagwati";
            if (useHasing)
            {
                MD5CryptoServiceProvider hashmd5 = new MD5CryptoServiceProvider();
                keyArray = hashmd5.ComputeHash(UTF8Encoding.UTF8.GetBytes(Key));
                hashmd5.Clear();  
            }
            else
            {
                keyArray = UTF8Encoding.UTF8.GetBytes(Key);
            }
            TripleDESCryptoServiceProvider tDes = new TripleDESCryptoServiceProvider();
            tDes.Key = keyArray;
            tDes.Mode = CipherMode.ECB;
            tDes.Padding = PaddingMode.PKCS7;
            ICryptoTransform cTransform = tDes.CreateEncryptor();
            byte[] resultArray = cTransform.TransformFinalBlock(toEncryptArray, 0,     toEncryptArray.Length);
            tDes.Clear();
            return Convert.ToBase64String(resultArray, 0, resultArray.Length);
        }
        public static string Decrypt(string cypherString, bool useHasing)
        {
            byte[] keyArray;
            byte[] toDecryptArray = Convert.FromBase64String(cypherString);
            //byte[] toEncryptArray = Convert.FromBase64String(cypherString);
            //System.Configuration.AppSettingsReader settingReader = new     AppSettingsReader();
            string key = "Bhagwati";
            if (useHasing)
            {
                MD5CryptoServiceProvider hashmd = new MD5CryptoServiceProvider();
                keyArray = hashmd.ComputeHash(UTF8Encoding.UTF8.GetBytes(key));
                hashmd.Clear();
            }
            else
            {
                keyArray = UTF8Encoding.UTF8.GetBytes(key);
            }
            TripleDESCryptoServiceProvider tDes = new TripleDESCryptoServiceProvider();
            tDes.Key = keyArray;
            tDes.Mode = CipherMode.ECB;
            tDes.Padding = PaddingMode.PKCS7;
            ICryptoTransform cTransform = tDes.CreateDecryptor();
            try
            {
                byte[] resultArray = cTransform.TransformFinalBlock(toDecryptArray, 0,         toDecryptArray.Length);

                tDes.Clear();
                return UTF8Encoding.UTF8.GetString(resultArray,0,resultArray.Length);
            }
            catch (Exception ex)
            {
                throw ex;
             }
        }
    }
}
</code></pre>
    </div>
    <table class="fw">
    <tbody><tr>
    <td class="vt">
<div class="post-menu"><a href="http://stackoverflow.com/a/5509947" title="short permalink to this answer" class="short-link" id="link-post-5509947">share</a><span class="lsep">|</span><a href="http://stackoverflow.com/posts/5509947/edit" class="suggest-edit-post" title="">improve this answer</a></div>                    </td>
    <td class="post-signature" align="right">
<div class="user-info user-hover">
    <div class="user-action-time">
        <a href="http://stackoverflow.com/posts/5509947/revisions" title="show all edits to this post">edited <span title="2011-04-01 07:01:52Z" class="relativetime">Apr 1 '11 at 7:01</span></a>
    </div>
    <div class="user-gravatar32">
        <a href="http://stackoverflow.com/users/193852/andrea-spadaccini"><div class="gravatar-wrapper-32"><img src="c%23%20-%20Encrypt%20and%20decrypt%20a%20string%20-%20Stack%20Overflow_files/297a5be5689710657f902068c51debdc.png" alt="" height="32" width="32"></div></a>
    </div>
    <div class="user-details">
        <a href="http://stackoverflow.com/users/193852/andrea-spadaccini">Andrea Spadaccini</a><br>
        <span class="reputation-score" title="reputation score " dir="ltr">5,542</span><span title="18 silver badges"><span class="badge2"></span><span class="badgecount">18</span></span><span title="41 bronze badges"><span class="badge3"></span><span class="badgecount">41</span></span>
    </div>
</div>    </td>
            


    <td class="post-signature" align="right">   
       

    <div class="user-info ">
    <div class="user-action-time">
        answered <span title="2011-04-01 06:37:58Z" class="relativetime">Apr 1 '11 at 6:37</span>
    </div>
    <div class="user-gravatar32">
        <a href="http://stackoverflow.com/users/666157/bpl"><div class="gravatar-wrapper-32"><img src="c%23%20-%20Encrypt%20and%20decrypt%20a%20string%20-%20Stack%20Overflow_files/e96793654bb593ef342c8bdf4cfe6f02.png" alt="" height="32" width="32"></div></a>
    </div>
    <div class="user-details">
        <a href="http://stackoverflow.com/users/666157/bpl">BPL</a><br>
        <span class="reputation-score" title="reputation score " dir="ltr">53</span><span title="1 bronze badge"><span class="badge3"></span><span class="badgecount">1</span></span>
    </div>
</div>
    </td>
    </tr>
    </tbody></table>
</td>
        </tr>
        
<tr>
    <td class="votecell"></td>
    <td>
	    <div id="comments-5509947" class="comments ">
		    <table>
                <tbody data-remaining-comments-count="0" data-canpost="false" data-cansee="true" data-comments-unavailable="false" data-addlink-disabled="true">



    <tr id="comment-11339231" class="comment ">
        <td class="comment-actions">
            <table>
                <tbody>
                    <tr>
                        <td class=" comment-score">
                                <span title="number of 'useful comment' votes received" class="warm">12</span>
                        </td>
                        <td>
                                &nbsp;
                        </td>
                    </tr>
                </tbody>
            </table>
        </td>
        <td class="comment-text">
            <div style="display: block;" class="comment-body">
                <span class="comment-copy">Isn't the ECB cipher mode a big no-no?</span>
                –&nbsp;
                    <a href="http://stackoverflow.com/users/57698/john-bubriski" title="6879 reputation" class="comment-user">John Bubriski</a>
                <span class="comment-date" dir="ltr"><span title="2012-01-27 20:14:23Z" class="relativetime-clean">Jan 27 '12 at 20:14</span></span>
                                                                            </div>
                    </td>
    </tr>
    <tr id="comment-18847847" class="comment ">
        <td class="comment-actions">
            <table>
                <tbody>
                    <tr>
                        <td class=" comment-score">
                                <span title="number of 'useful comment' votes received" class="cool">2</span>
                        </td>
                        <td>
                                &nbsp;
                        </td>
                    </tr>
                </tbody>
            </table>
        </td>
        <td class="comment-text">
            <div style="display: block;" class="comment-body">
                <span class="comment-copy">Yes, ECB is the least secure 
option. See MS's comments: "Important:  This mode is not recommended 
because it opens the door for multiple security exploits." <a href="http://msdn.microsoft.com/en-us/library/system.security.cryptography.ciphermode.aspx" rel="nofollow">msdn.microsoft.com/en-us/library/…</a></span>
                –&nbsp;
                    <a href="http://stackoverflow.com/users/8261/rich" title="3048 reputation" class="comment-user">Rich</a>
                <span class="comment-date" dir="ltr"><span title="2012-12-05 10:34:02Z" class="relativetime-clean">Dec 5 '12 at 10:34</span></span>
                                                                            </div>
                    </td>
    </tr>
                </tbody>
		    </table>
	    </div>

        <div id="comments-link-5509947" data-rep="50" data-anon="true">

                <a class="js-add-link comments-link disabled-link " title="Use comments to ask for more information or suggest improvements. Avoid comments like “+1” or “thanks”.">add a comment</a><span class="js-link-separator dno">&nbsp;|&nbsp;</span>
            <a class="js-show-link comments-link dno" title="expand to show all comments on this post" href="#" onclick=""></a>
        </div>         
    </td>
</tr>    </tbody></table>
</div>

  
<a name="12122345"></a>
<div id="answer-12122345" class="answer" data-answerid="12122345" itemscope="" itemtype="http://schema.org/Answer">

    <table>
        <tbody><tr>
            <td class="votecell">
                

<div class="vote">
        <input name="_id_" value="12122345" type="hidden">
        <a class="vote-up-off" title="This answer is useful">up vote</a>
        <span itemprop="upvoteCount" class="vote-count-post ">-2</span>
        <a class="vote-down-off" title="This answer is not useful">down vote</a>




</div>

            </td>
            


<td class="answercell">
    <div class="post-text" itemprop="text">
<p>I want to give you my contribute, with my code for AES <code>Rfc2898DeriveBytes</code> (<a href="http://msdn.microsoft.com/en-us/library/system.security.cryptography.rfc2898derivebytes.aspx" rel="nofollow">here</a>
 the documentation) algorhytm, written in C# (.NET framework 4) and 
fully working also for limited platforms, as .NET Compact Framework for 
Windows Phone 7.0+ (not all platforms support every criptographic method
 of the .NET framework!).</p>

<p>I hope this can help anyone!</p>

<pre><code>using System;
using System.IO;
using System.Security.Cryptography;
using System.Text;

public static class Crypto
{
    private static readonly byte[] IVa = new byte[] { 0x0b, 0x0c, 0x0d, 0x0e, 0x0f, 0x11, 0x11, 0x12, 0x13, 0x14, 0x0e, 0x16, 0x17 };


    public static string Encrypt(this string text, string salt)
    {
        try
        {
            using (Aes aes = new AesManaged())
            {
                Rfc2898DeriveBytes deriveBytes = new Rfc2898DeriveBytes(Encoding.UTF8.GetString(IVa, 0, IVa.Length), Encoding.UTF8.GetBytes(salt));
                aes.Key = deriveBytes.GetBytes(128 / 8);
                aes.IV = aes.Key;
                using (MemoryStream encryptionStream = new MemoryStream())
                {
                    using (CryptoStream encrypt = new CryptoStream(encryptionStream, aes.CreateEncryptor(), CryptoStreamMode.Write))
                    {
                        byte[] cleanText = Encoding.UTF8.GetBytes(text);
                        encrypt.Write(cleanText, 0, cleanText.Length);
                        encrypt.FlushFinalBlock();
                    }

                    byte[] encryptedData = encryptionStream.ToArray();
                    string encryptedText = Convert.ToBase64String(encryptedData);


                    return encryptedText;
                }
            }
        }
        catch
        {
            return String.Empty;
        }
    }

    public static string Decrypt(this string text, string salt)
    {
        try
        {
            using (Aes aes = new AesManaged())
            {
                Rfc2898DeriveBytes deriveBytes = new Rfc2898DeriveBytes(Encoding.UTF8.GetString(IVa, 0, IVa.Length), Encoding.UTF8.GetBytes(salt));
                aes.Key = deriveBytes.GetBytes(128 / 8);
                aes.IV = aes.Key;

                using (MemoryStream decryptionStream = new MemoryStream())
                {
                    using (CryptoStream decrypt = new CryptoStream(decryptionStream, aes.CreateDecryptor(), CryptoStreamMode.Write))
                    {
                        byte[] encryptedData = Convert.FromBase64String(text);


                        decrypt.Write(encryptedData, 0, encryptedData.Length);
                        decrypt.Flush();
                    }

                    byte[] decryptedData = decryptionStream.ToArray();
                    string decryptedText = Encoding.UTF8.GetString(decryptedData, 0, decryptedData.Length);


                    return decryptedText;
                }
            }
        }
        catch
        {
            return String.Empty;
        }
        }
    }
}
</code></pre>
    </div>
    <table class="fw">
    <tbody><tr>
    <td class="vt">
<div class="post-menu"><a href="http://stackoverflow.com/a/12122345" title="short permalink to this answer" class="short-link" id="link-post-12122345">share</a><span class="lsep">|</span><a href="http://stackoverflow.com/posts/12122345/edit" class="suggest-edit-post" title="">improve this answer</a></div>                    </td>
            


    <td class="post-signature" align="right">   
       

    <div class="user-info user-hover">
    <div class="user-action-time">
        answered <span title="2012-08-25 13:22:43Z" class="relativetime">Aug 25 '12 at 13:22</span>
    </div>
    <div class="user-gravatar32">
        <a href="http://stackoverflow.com/users/833644/maxe"><div class="gravatar-wrapper-32"><img src="c%23%20-%20Encrypt%20and%20decrypt%20a%20string%20-%20Stack%20Overflow_files/vTBN8.jpg" alt="" height="32" width="32"></div></a>
    </div>
    <div class="user-details">
        <a href="http://stackoverflow.com/users/833644/maxe">MAXE</a><br>
        <span class="reputation-score" title="reputation score " dir="ltr">2,463</span><span title="1 gold badge"><span class="badge1"></span><span class="badgecount">1</span></span><span title="19 silver badges"><span class="badge2"></span><span class="badgecount">19</span></span><span title="43 bronze badges"><span class="badge3"></span><span class="badgecount">43</span></span>
    </div>
</div>
    </td>
    </tr>
    </tbody></table>
</td>
        </tr>
        
<tr>
    <td class="votecell"></td>
    <td>
	    <div id="comments-12122345" class="comments ">
		    <table>
                <tbody data-remaining-comments-count="0" data-canpost="false" data-cansee="true" data-comments-unavailable="false" data-addlink-disabled="true">



    <tr id="comment-26738585" class="comment ">
        <td class="comment-actions">
            <table>
                <tbody>
                    <tr>
                        <td class=" comment-score">
                                <span title="number of 'useful comment' votes received" class="warm">7</span>
                        </td>
                        <td>
                                &nbsp;
                        </td>
                    </tr>
                </tbody>
            </table>
        </td>
        <td class="comment-text">
            <div style="display: block;" class="comment-body">
                <span class="comment-copy">1) Why are you using a variable called <code>IVa</code>
 which is no IV, but a password? 2) Why are you setting IV=Key? You need
 a new random IV for each encryption. 3) Lack of MAC enables padding 
oracle attacks</span>
                –&nbsp;
                    <a href="http://stackoverflow.com/users/445517/codesinchaos" title="67601 reputation" class="comment-user">CodesInChaos</a>
                <span class="comment-date" dir="ltr"><span title="2013-08-14 16:44:08Z" class="relativetime-clean">Aug 14 '13 at 16:44</span></span>
                                                                            </div>
                    </td>
    </tr>
                </tbody>
		    </table>
	    </div>

        <div id="comments-link-12122345" data-rep="50" data-anon="true">

                <a class="js-add-link comments-link disabled-link " title="Use comments to ask for more information or suggest improvements. Avoid comments like “+1” or “thanks”.">add a comment</a><span class="js-link-separator dno">&nbsp;|&nbsp;</span>
            <a class="js-show-link comments-link dno" title="expand to show all comments on this post" href="#" onclick=""></a>
        </div>         
    </td>
</tr>    </tbody></table>
</div>

  
<a name="27223411"></a>
<div id="answer-27223411" class="answer" data-answerid="27223411" itemscope="" itemtype="http://schema.org/Answer">

    <table>
        <tbody><tr>
            <td class="votecell">
                

<div class="vote">
        <input name="_id_" value="27223411" type="hidden">
        <a class="vote-up-off" title="This answer is useful">up vote</a>
        <span itemprop="upvoteCount" class="vote-count-post ">-2</span>
        <a class="vote-down-off" title="This answer is not useful">down vote</a>




</div>

            </td>
            


<td class="answercell">
    <div class="post-text" itemprop="text">
<p>You have to use the namespace using System.Security.Cryptography; and
 useHashing is a bool type either true or false. String variable "key" 
should be same for Encryption and for Decryption</p>

<pre><code>//Encryption
public string EncryptText(string toEncrypt, bool useHashing)
    {
        try
        {
            byte[] keyArray;
            byte[] toEncryptArray = UTF8Encoding.UTF8.GetBytes(toEncrypt);

            string key = "String Key Value"; //Based on this key stirng is encrypting
            //System.Windows.Forms.MessageBox.Show(key);
            //If hashing use get hashcode regards to your key
            if (useHashing)
            {
                MD5CryptoServiceProvider hashmd5 = new MD5CryptoServiceProvider();
                keyArray = hashmd5.ComputeHash(UTF8Encoding.UTF8.GetBytes(key));
                //Always release the resources and flush data
                //of the Cryptographic service provide. Best Practice

                hashmd5.Clear();
            }
            else
                keyArray = UTF8Encoding.UTF8.GetBytes(key);

            TripleDESCryptoServiceProvider tdes = new TripleDESCryptoServiceProvider();
            //set the secret key for the tripleDES algorithm
            tdes.Key = keyArray;
            //mode of operation. there are other 4 modes. We choose ECB(Electronic code Book)
            tdes.Mode = CipherMode.ECB;
            //padding mode(if any extra byte added)
            tdes.Padding = PaddingMode.PKCS7;

            ICryptoTransform cTransform = tdes.CreateEncryptor();
            //transform the specified region of bytes array to resultArray
            byte[] resultArray = cTransform.TransformFinalBlock(toEncryptArray, 0,          toEncryptArray.Length);
            //Release resources held by TripleDes Encryptor
            tdes.Clear();
            //Return the encrypted data into unreadable string format
            return Convert.ToBase64String(resultArray, 0, resultArray.Length);
        }
        catch (Exception e)
        {
            throw e;
        }
    }

    //Decryption
    public string DecryptText(string cipherString, bool useHashing)
    {

        try
        {
            byte[] keyArray;
            //get the byte code of the string

            byte[] toEncryptArray = Convert.FromBase64String(cipherString);

            string key = "String Key Value"; //Based on this key string is decrypted

            if (useHashing)
            {
                //if hashing was used get the hash code with regards to your key
                MD5CryptoServiceProvider hashmd5 = new MD5CryptoServiceProvider();
                keyArray = hashmd5.ComputeHash(UTF8Encoding.UTF8.GetBytes(key));
                //release any resource held by the MD5CryptoServiceProvider

                hashmd5.Clear();
            }
            else
            {
                //if hashing was not implemented get the byte code of the key
                keyArray = UTF8Encoding.UTF8.GetBytes(key);
            }

            TripleDESCryptoServiceProvider tdes = new TripleDESCryptoServiceProvider();
            //set the secret key for the tripleDES algorithm
            tdes.Key = keyArray;
            //mode of operation. there are other 4 modes.
            //We choose ECB(Electronic code Book)

            tdes.Mode = CipherMode.ECB;
            //padding mode(if any extra byte added)
            tdes.Padding = PaddingMode.PKCS7;

            ICryptoTransform cTransform = tdes.CreateDecryptor();
            byte[] resultArray = cTransform.TransformFinalBlock
                    (toEncryptArray, 0, toEncryptArray.Length);
            //Release resources held by TripleDes Encryptor
            tdes.Clear();
            //return the Clear decrypted TEXT
            return UTF8Encoding.UTF8.GetString(resultArray);
        }
        catch (Exception ex)
        {
            throw ex;
        }
    }
</code></pre>
    </div>
    <table class="fw">
    <tbody><tr>
    <td class="vt">
<div class="post-menu"><a href="http://stackoverflow.com/a/27223411" title="short permalink to this answer" class="short-link" id="link-post-27223411">share</a><span class="lsep">|</span><a href="http://stackoverflow.com/posts/27223411/edit" class="suggest-edit-post" title="">improve this answer</a></div>                    </td>
            


    <td class="post-signature" align="right">   
       

    <div class="user-info ">
    <div class="user-action-time">
        answered <span title="2014-12-01 07:16:25Z" class="relativetime">Dec 1 '14 at 7:16</span>
    </div>
    <div class="user-gravatar32">
        <a href="http://stackoverflow.com/users/4310461/manu-nair"><div class="gravatar-wrapper-32"><img src="c%23%20-%20Encrypt%20and%20decrypt%20a%20string%20-%20Stack%20Overflow_files/10f6c3902a38e229d141c2d99398c052.png" alt="" height="32" width="32"></div></a>
    </div>
    <div class="user-details">
        <a href="http://stackoverflow.com/users/4310461/manu-nair">Manu Nair</a><br>
        <span class="reputation-score" title="reputation score " dir="ltr">170</span><span title="6 bronze badges"><span class="badge3"></span><span class="badgecount">6</span></span>
    </div>
</div>
    </td>
    </tr>
    </tbody></table>
</td>
        </tr>
        
<tr>
    <td class="votecell"></td>
    <td>
	    <div id="comments-27223411" class="comments ">
		    <table>
                <tbody data-remaining-comments-count="0" data-canpost="false" data-cansee="true" data-comments-unavailable="false" data-addlink-disabled="true">



    <tr id="comment-45537754" class="comment ">
        <td>
            <table>
                <tbody>
                    <tr>
                        <td class=" comment-score">
                                &nbsp;&nbsp;
                        </td>
                        <td>
                                &nbsp;
                        </td>
                    </tr>
                </tbody>
            </table>
        </td>
        <td class="comment-text">
            <div style="display: block;" class="comment-body">
                <span class="comment-copy">-1 1) ECB mode is very weak 
2) Lack of MAC leaves you open to active attacks, such as padding 
oracles. 3) Why would you still use 3DES nowadays? It's not broken, but 
AES is clearly a better choice.</span>
                –&nbsp;
                    <a href="http://stackoverflow.com/users/445517/codesinchaos" title="67601 reputation" class="comment-user">CodesInChaos</a>
                <span class="comment-date" dir="ltr"><span title="2015-02-19 21:34:05Z" class="relativetime-clean">Feb 19 at 21:34</span></span>
                                                                            </div>
                    </td>
    </tr>
                </tbody>
		    </table>
	    </div>

        <div id="comments-link-27223411" data-rep="50" data-anon="true">

                <a class="js-add-link comments-link disabled-link " title="Use comments to ask for more information or suggest improvements. Avoid comments like “+1” or “thanks”.">add a comment</a><span class="js-link-separator dno">&nbsp;|&nbsp;</span>
            <a class="js-show-link comments-link dno" title="expand to show all comments on this post" href="#" onclick=""></a>
        </div>         
    </td>
</tr>    </tbody></table>
</div>
				        <div class="question-status">
        <h2>                    <b>protected</b> by <a href="http://stackoverflow.com/users/597607/bo-persson">Bo Persson</a> <span dir="ltr"><span title="2012-07-12 09:29:48Z" class="relativetime">Jul 12 '12 at 9:29</span></span>
</h2>
        <p>
Thank you for your interest in this question. 
Because it has attracted low-quality answers, posting an answer now requires 10 <a href="http://stackoverflow.com/help/whats-reputation">reputation</a> on this site.
<br><br>
Would you like to answer one of these <a href="http://stackoverflow.com/unanswered?fromProtectedNotice=true">unanswered questions</a> instead?
</p>
    </div>




						<h2 class="bottom-notice" data-loc="1">
Not the answer you're looking for?							Browse other questions tagged <a href="http://stackoverflow.com/questions/tagged/c%23" class="post-tag" title="show questions tagged 'c#'" rel="tag">c#</a> <a href="http://stackoverflow.com/questions/tagged/.net" class="post-tag" title="show questions tagged '.net'" rel="tag">.net</a> <a href="http://stackoverflow.com/questions/tagged/encryption" class="post-tag" title="show questions tagged 'encryption'" rel="tag">encryption</a> <a href="http://stackoverflow.com/questions/tagged/mono" class="post-tag" title="show questions tagged 'mono'" rel="tag">mono</a> <a href="http://stackoverflow.com/questions/tagged/cryptography" class="post-tag" title="show questions tagged 'cryptography'" rel="tag">cryptography</a>  or <a href="http://stackoverflow.com/questions/ask">ask your own question</a>.						</h2>
			</div>
		</div>
				<div id="sidebar" class="show-votes">
						    <div class="module question-stats">
			        <table id="qinfo">
			            <tbody><tr>
			                <td>
			                    <p class="label-key">asked</p>
			                </td>
			                <td style="padding-left: 10px">
			                    <p class="label-key" title="2008-10-14 17:07:32Z"><b>6 years ago</b></p>
			                </td>
			            </tr>
			            <tr>
			                <td>
			                    <p class="label-key">viewed</p>
			                </td>

			                <td style="padding-left: 10px">
			                    <p class="label-key">
			                        <b>359928 times</b>
			                    </p>
			                </td>
			            </tr>
			                <tr>
			                    <td>
			                        <p class="label-key">active</p>
			                    </td>
			                    <td style="padding-left: 10px">
			                        <p class="label-key"><b><a href="http://stackoverflow.com/questions/202011/encrypt-and-decrypt-a-string?lastactivity" class="lastactivity-link" title="2015-08-12 13:56:48Z">1 month ago</a></b></p>
			                    </td>
			                </tr>
			        </tbody></table>
			    </div>
			<div class="module community-bulletin" data-tracker="cb=1">
    <div class="related">
                <div class="bulletin-title">
                    Blog
                </div>
                <hr>
    <div class="spacer">
        <div class="bulletin-item-type">
                <a href="http://blog.stackexchange.com/2015/09/stack-exchange-podcast-68-a-badger-a-horse-and-a-dik-dik-the-documentation-episode/" class="question-hyperlink">
<div class="favicon favicon-stackexchangemeta" title="Meta Stack Exchange"></div>                </a>
            </div>
                <div class="bulletin-item-content">
                    <a href="http://blog.stackexchange.com/2015/09/stack-exchange-podcast-68-a-badger-a-horse-and-a-dik-dik-the-documentation-episode/" class="question-hyperlink">Podcast #68 - A Badger, A Horse, and a Dik-dik (The Documentation Episode)</a>
                </div>
                <br class="cbt">
            </div>
    </div>
</div>			
			<script>
                var ados = ados || {}; ados.run = ados.run || [];
                ados.run.push(function () { ados_add_placement(22,8277,"adzerk1111688886",[17,2221]).setZone(45); });
            </script>
            
        <div id="hireme">
            <script>
(function(){function f(n){var t=i.createElement("link");t.type="text/css";t.rel="stylesheet";t.href=n;r.appendChild(t)}function e(t,r,f,e){var s=(r.cl||[]).join(" "),o=i.getElementById(t);o&&(s&&(o.className+=" "+s),o.innerHTML=r.cn.replace("&pt=0","&pt="+(e||"0")),o.onmousedown=function(t){for(var i=t.target,e,s,h,c,l;i.tagName!=="A"&&i!==o;)i=i.parentNode;if(i!=o){for(e=n.enc,s=f,h=0;h<i.attributes.length;++h)c=i.attributes[h],l=c.name.match(/^data-(.*)$/),l&&(s+="&"+e(l[1])+"="+e(c.value));s+="&utm="+e(u+r.utm);i.href=s}})}function o(){return[].map.call(n.qsa(".post-taglist .post-tag"),function(n){return n.innerText}).join(";")||null}var t=window,i=document,r=i.getElementsByTagName("head")[0],u="&utm_source="+location.hostname+"&utm_medium=ad&utm_campaign=",n={doc:i,head:r,enc:encodeURIComponent,dec:decodeURIComponent,se:t.StackExchange,ts:function(){return(new Date).getTime()},st:setTimeout,ct:clearTimeout,qsa:function(n){return document.querySelectorAll(n)}};n.ls=function(n,t,u){var f=i.createElement("script"),e=!1;f.async=!0;f.src=n;t&&(f.onload=f.onreadystatechange=function(){e||this.readyState&&this.readyState!=="loaded"&&this.readyState!=="complete"||(e=!0,t(f),f.onload=f.onreadystatechange=null,u&&f.parentNode.removeChild(f))});r.appendChild(f)};n.init=function(i){function s(){i.st.forEach(f);r.forEach(function(n){e(n,i.cr[n],u,o)});typeof t.clc_after_init=="function"&&t.clc_after_init()}var r=Object.keys(i.cr),u="//"+i.h+i.ct+"?an="+i.an,o=n.cps?n.ts()-n.cps:0;s()};n.lo=function(i){var u,f=t.location.hash,s=n.dec,r=n.se,e;i=i||{};switch(f){case"#large":opts.l=1;break;case"#abort":opts.abort=1;break;default:f.length>0&&f.substr(1).split("&").forEach(function(n){var t=n.split("=",2);this[s(t[0])]=s(t[1])},i)}return e=i.ac||i.accountid||r&&r.options&&r.options.user&&r.options.user.accountId,e&&(i.ac=e),i.tags||(u=o(),u&&(i.tags=u)),i};n.o2q=function(t,i){var r=n.enc;return Object.keys(t).filter(function(n){return i.indexOf(n)!==-1}).map(function(n){return r(n)+"="+r(t[n])}).join("&")};n.load=function(i,r,u){n.ls(i+"?"+n.o2q(r,u),function(){typeof t.clc_loaded=="function"&&t.clc_loaded()});n.cps=n.ts()};n.el=function(t){var i=n.qsa(t);return i.length>0?i[0]:null};n.hc=function(n){return n&&n.innerHTML&&n.innerHTML.replace(/\s+/g,"").length>0};n.wfc=function(t,i,r,u){function c(){n.hc(s)?(f(o),f(e),u(!0)):e=h(c,i)}function l(){f(e);u(!1)}var s=n.el(t),h=n.st,f=n.ct,o,e;if(s!==null)return c(),r&&(o=h(l,r)),function(){e&&f(e);o&&f(o)}};t.clc=n})();;(function(n){function c(){var n=t.el(u);t.hc(n)||(n.parentNode.removeChild(n),typeof r=="function"&&r())}function l(r){if(!f){f=!0;var u=t.qsa("#"+i.d);u.length!==0&&(r||(i.azt=!0),i.lw=t.ts()-s,i.l||document.getElementById("careersadsdoublehigh")===null||(i.l=1),t.load(n.adurl,i,["d","l","ip","ac","eng","prov","tags","theme","remote","seed","lw","azt","sysadmin"]))}}var o=window,t=o.clc,s=t.ts(),h=t.st,v=t.ct,u="#sidebar [id^='adzerk'].everyonelovesstackoverflow",i=t.lo({d:"hireme"}),f,r,e,a;i.abort||(e=null,r=t.wfc(u,20,e,l),a=h(c,2e3))}).call(null, {"adurl":"//clc.stackoverflow.com/j/p.js"});            </script>
        </div>
			<div class="module" id="chat-feature">
    

    
<h4><a href="http://chat.stackoverflow.com/" id="h-chat-link">Visit Chat</a></h4>

<div class="related" id="ad502-rooms"></div>
<script>
// <!--
    StackExchange.ready(
    function () {
        var options = {
            chatUrl: 'http://chat.stackoverflow.com',
            reloadUrl: '/api/recent-chat',
            preloadData: {"activeUsers":109,"activeRooms":55,"rooms":[{"name":"JavaScript","id":17,"lastPost":1442303780,"posts":2867235,"users":[{"name":"Cauterite","id":1288130,"emailhash":"df74c734257373f3725b527d3815d727","lastPost":1442303780},{"name":"Roel van Uden","id":472015,"emailhash":"dd31c566b8e5e541810b1cfcdce25170","lastPost":1442303671},{"name":"Sheepy","id":893578,"emailhash":"!https://i.stack.imgur.com/RdhGt.jpg?s=128\u0026g=1","lastPost":1442302338},{"name":"argentum47","id":1503615,"emailhash":"!https://i.stack.imgur.com/KHpln.jpg?s=128\u0026g=1","lastPost":1442302201},{"name":"Neil","id":467968,"emailhash":"42e81a0b12d4c3f0f3f93099e181660f","lastPost":1442301431},{"name":"Jan Dvorak","id":499214,"emailhash":"!https://i.stack.imgur.com/PObJM.png?s=128\u0026g=1","lastPost":1442301208},{"name":"towc","id":3161092,"emailhash":"!https://graph.facebook.com/100004773454417/picture?type=large","lastPost":1442300852}],"messages":[{"date":1442303780,"user":"Cauterite","userid":1288130}],"singleImage":false,"tags":["ecmascript","es6","iojs","jabbascript","javascript","nodejs","promises"]},{"name":"PHP","id":11,"lastPost":1442303988,"posts":2070489,"users":[{"name":"PeeHaa","id":508666,"emailhash":"!https://i.stack.imgur.com/0dpOE.png?s=128\u0026g=1","lastPost":1442303988},{"name":"Marcel Burkhard","id":982075,"emailhash":"dc2dbc76812fb39833902e30a6900bad","lastPost":1442303452},{"name":"Abe","id":4251625,"emailhash":"!https://i.stack.imgur.com/XUshi.jpg?s=128\u0026g=1","lastPost":1442303405},{"name":"Rafee","id":630316,"emailhash":"9cbc1f54b7316c8c9018651f772ad564","lastPost":1442303363},{"name":"user1257255","id":1257255,"emailhash":"57a11eebdbcceac08834841559efaf33","lastPost":1442302758},{"name":"kelunik","id":2373138,"emailhash":"4e6b4a3f09d0d8c0fb07cbe755f8a230","lastPost":1442301649},{"name":"Sjon","id":3749523,"emailhash":"4a0bfc9027da0504f91736fa45f29b89","lastPost":1442301451}],"messages":[{"date":1442303988,"user":"PeeHaa","userid":508666}],"singleImage":false,"tags":["php"]}]} 
        };

        StackExchange.chatAd.init(options);
    });
// -->
</script>

</div>  
    
            <div class="module sidebar-linked">
	<h4 id="h-linked">Linked</h4>
	<div class="linked" data-tracker="lq=1">
<div class="spacer">
	<a href="http://stackoverflow.com/q/17213851" title="Vote score (upvotes - downvotes)">
		<div class="answer-votes answered-accepted default">3</div>
	</a>
	<a href="http://stackoverflow.com/questions/17213851/an-easy-way-to-encrypt-and-decrypt-with-a-key" class="question-hyperlink">An easy way to encrypt and decrypt with a key</a>
</div><div class="spacer">
	<a href="http://stackoverflow.com/q/3579561" title="Vote score (upvotes - downvotes)">
		<div class="answer-votes  default">0</div>
	</a>
	<a href="http://stackoverflow.com/questions/3579561/encrypting-and-decrypting-strings-in-c-sharp" class="question-hyperlink">Encrypting and Decrypting Strings in C#</a>
</div><div class="spacer">
	<a href="http://stackoverflow.com/q/17308313" title="Vote score (upvotes - downvotes)">
		<div class="answer-votes  default">0</div>
	</a>
	<a href="http://stackoverflow.com/questions/17308313/decrypting-and-encrypting-xml-files" class="question-hyperlink">decrypting and encrypting XML files</a>
</div><div class="spacer">
	<a href="http://stackoverflow.com/q/165808" title="Vote score (upvotes - downvotes)">
		<div class="answer-votes answered-accepted large">305</div>
	</a>
	<a href="http://stackoverflow.com/questions/165808/simple-two-way-encryption-for-c-sharp" class="question-hyperlink">Simple two-way encryption for C#</a>
</div><div class="spacer">
	<a href="http://stackoverflow.com/q/10168240" title="Vote score (upvotes - downvotes)">
		<div class="answer-votes answered-accepted default">84</div>
	</a>
	<a href="http://stackoverflow.com/questions/10168240/encrypting-decrypting-a-string-in-c-sharp" class="question-hyperlink">Encrypting &amp; Decrypting a String in C#</a>
</div><div class="spacer">
	<a href="http://stackoverflow.com/q/11762" title="Vote score (upvotes - downvotes)">
		<div class="answer-votes answered-accepted default">28</div>
	</a>
	<a href="http://stackoverflow.com/questions/11762/cryptographicexception-padding-is-invalid-and-cannot-be-removed" class="question-hyperlink">CryptographicException: Padding is invalid and cannot be removed</a>
</div><div class="spacer">
	<a href="http://stackoverflow.com/q/1678555" title="Vote score (upvotes - downvotes)">
		<div class="answer-votes answered-accepted default">15</div>
	</a>
	<a href="http://stackoverflow.com/questions/1678555/password-encryption-decryption-code-in-net" class="question-hyperlink">Password encryption/ decryption code in .NET</a>
</div><div class="spacer">
	<a href="http://stackoverflow.com/q/4021893" title="Vote score (upvotes - downvotes)">
		<div class="answer-votes answered-accepted default">13</div>
	</a>
	<a href="http://stackoverflow.com/questions/4021893/saving-a-dictionarystring-int32-in-c-sharp-serialization" class="question-hyperlink">Saving a Dictionary&lt;String, Int32&gt; in C# - Serialization?</a>
</div><div class="spacer">
	<a href="http://stackoverflow.com/q/5522879" title="Vote score (upvotes - downvotes)">
		<div class="answer-votes answered-accepted default">8</div>
	</a>
	<a href="http://stackoverflow.com/questions/5522879/encrypt-password-in-app-config" class="question-hyperlink">Encrypt password in App.config</a>
</div><div class="spacer">
	<a href="http://stackoverflow.com/q/12143986" title="Vote score (upvotes - downvotes)">
		<div class="answer-votes answered-accepted default">3</div>
	</a>
	<a href="http://stackoverflow.com/questions/12143986/sha512-hash-to-string-in-c-sharp" class="question-hyperlink">SHA512 hash to string in C#</a>
</div>					<div class="spacer more">
				<a href="http://stackoverflow.com/questions/linked/202011">see more linked questions…</a>
			</div>
	</div>
</div>

				<div class="module sidebar-related">
					<h4 id="h-related">Related</h4>
                    <div class="related js-gps-related-questions" data-tracker="rq=1">
                        <div class="spacer">
<a href="http://stackoverflow.com/q/1678555" title="Vote score (upvotes - downvotes)">
    <div class="answer-votes answered-accepted default">15
    </div>
</a><a href="http://stackoverflow.com/questions/1678555/password-encryption-decryption-code-in-net" class="question-hyperlink">Password encryption/ decryption code in .NET</a>
</div>
<div class="spacer">
<a href="http://stackoverflow.com/q/3579561" title="Vote score (upvotes - downvotes)">
    <div class="answer-votes default">0
    </div>
</a><a href="http://stackoverflow.com/questions/3579561/encrypting-and-decrypting-strings-in-c-sharp" class="question-hyperlink">Encrypting and Decrypting Strings in C#</a>
</div>
<div class="spacer">
<a href="http://stackoverflow.com/q/4745061" title="Vote score (upvotes - downvotes)">
    <div class="answer-votes default">3
    </div>
</a><a href="http://stackoverflow.com/questions/4745061/how-to-encrypt-and-decrypt-string-in-c-sharp" class="question-hyperlink">How to encrypt and decrypt string in C#</a>
</div>
<div class="spacer">
<a href="http://stackoverflow.com/q/10168240" title="Vote score (upvotes - downvotes)">
    <div class="answer-votes answered-accepted default">84
    </div>
</a><a href="http://stackoverflow.com/questions/10168240/encrypting-decrypting-a-string-in-c-sharp" class="question-hyperlink">Encrypting &amp; Decrypting a String in C#</a>
</div>
<div class="spacer">
<a href="http://stackoverflow.com/q/10797671" title="Vote score (upvotes - downvotes)">
    <div class="answer-votes default">0
    </div>
</a><a href="http://stackoverflow.com/questions/10797671/how-to-decrypt-an-encrypted-data-in-c-sharp-by-using-rsacryptoserviceprovider" class="question-hyperlink">How to decrypt an encrypted data in c# by using RSACryptoServiceProvider() in ubuntu?</a>
</div>
<div class="spacer">
<a href="http://stackoverflow.com/q/13307273" title="Vote score (upvotes - downvotes)">
    <div class="answer-votes answered-accepted default">0
    </div>
</a><a href="http://stackoverflow.com/questions/13307273/encrypting-iv-with-string-and-decrypting-it" class="question-hyperlink">Encrypting IV with string and decrypting it?</a>
</div>
<div class="spacer">
<a href="http://stackoverflow.com/q/26335587" title="Vote score (upvotes - downvotes)">
    <div class="answer-votes answered-accepted default">-2
    </div>
</a><a href="http://stackoverflow.com/questions/26335587/encrypt-and-decrypt-a-unicode-string" class="question-hyperlink">Encrypt and decrypt a Unicode string</a>
</div>
<div class="spacer">
<a href="http://stackoverflow.com/q/26412089" title="Vote score (upvotes - downvotes)">
    <div class="answer-votes default">0
    </div>
</a><a href="http://stackoverflow.com/questions/26412089/encrypting-and-decrypting-a-string" class="question-hyperlink">Encrypting and decrypting a string</a>
</div>
<div class="spacer">
<a href="http://stackoverflow.com/q/28001080" title="Vote score (upvotes - downvotes)">
    <div class="answer-votes default">0
    </div>
</a><a href="http://stackoverflow.com/questions/28001080/encryption-and-decryption-with-custom-string-key" class="question-hyperlink">Encryption and decryption with custom string key</a>
</div>
<div class="spacer">
<a href="http://stackoverflow.com/q/31067324" title="Vote score (upvotes - downvotes)">
    <div class="answer-votes answered-accepted default">2
    </div>
</a><a href="http://stackoverflow.com/questions/31067324/how-decrypt-string-in-c-sharp-was-encrypted-in-ios-using-rijndael" class="question-hyperlink">How decrypt string in c# was encrypted in iOS using Rijndael</a>
</div>

                    </div>
				</div>
            
<div id="hot-network-questions" class="module">
    <h4>
        <a href="http://stackexchange.com/questions?tab=hot" class="js-gps-track" data-gps-track="posts_hot_network.click({ item_type:1, location:11 })">
            Hot Network Questions
        </a>
    </h4>
    <ul>
            <li>
                <div class="favicon favicon-serverfault" title="Server Fault"></div><a href="http://serverfault.com/questions/722324/creating-a-symlink-with-ansible-and-a-list-of-variables" class="js-gps-track" data-gps-track="site.switch({ item_type:11, target_site:2 }); posts_hot_network.click({ item_type:2, location:11 })">
                    Creating a symlink with ansible and a list of variables
                </a>

            </li>
            <li>
                <div class="favicon favicon-superuser" title="Super User"></div><a href="http://superuser.com/questions/972936/how-to-determine-windows-architecture-version-on-disconnected-volume" class="js-gps-track" data-gps-track="site.switch({ item_type:11, target_site:3 }); posts_hot_network.click({ item_type:2, location:11 })">
                    How to determine Windows architecture version on disconnected volume?
                </a>

            </li>
            <li>
                <div class="favicon favicon-dba" title="Database Administrators Stack Exchange"></div><a href="http://dba.stackexchange.com/questions/115047/multiple-view-query-optimisation" class="js-gps-track" data-gps-track="site.switch({ item_type:11, target_site:182 }); posts_hot_network.click({ item_type:2, location:11 })">
                    Multiple-View Query Optimisation
                </a>

            </li>
            <li>
                <div class="favicon favicon-physics" title="Physics Stack Exchange"></div><a href="http://physics.stackexchange.com/questions/206822/how-can-fast-moving-particles-gain-energy-from-slow-moving-ones" class="js-gps-track" data-gps-track="site.switch({ item_type:11, target_site:151 }); posts_hot_network.click({ item_type:2, location:11 })">
                    How can fast moving particles gain energy from slow moving ones?
                </a>

            </li>
            <li>
                <div class="favicon favicon-photo" title="Photography Stack Exchange"></div><a href="http://photo.stackexchange.com/questions/69241/how-could-i-have-counteracted-purple-lighting" class="js-gps-track" data-gps-track="site.switch({ item_type:11, target_site:61 }); posts_hot_network.click({ item_type:2, location:11 })">
                    How could I have counteracted purple lighting?
                </a>

            </li>
            <li class="dno js-hidden">
                <div class="favicon favicon-codereview" title="Code Review Stack Exchange"></div><a href="http://codereview.stackexchange.com/questions/104702/class-to-verify-if-a-rectification-is-upgradable" class="js-gps-track" data-gps-track="site.switch({ item_type:11, target_site:196 }); posts_hot_network.click({ item_type:2, location:11 })">
                    Class to verify if a rectification is upgradable
                </a>

            </li>
            <li class="dno js-hidden">
                <div class="favicon favicon-scifi" title="Science Fiction &amp; Fantasy Stack Exchange"></div><a href="http://scifi.stackexchange.com/questions/102804/why-did-sirius-have-such-a-large-motorbike" class="js-gps-track" data-gps-track="site.switch({ item_type:11, target_site:186 }); posts_hot_network.click({ item_type:2, location:11 })">
                    Why did Sirius have such a large Motorbike?
                </a>

            </li>
            <li class="dno js-hidden">
                <div class="favicon favicon-stats" title="Cross Validated"></div><a href="http://stats.stackexchange.com/questions/172458/what-does-irregularly-spaced-spatial-data-mean" class="js-gps-track" data-gps-track="site.switch({ item_type:11, target_site:65 }); posts_hot_network.click({ item_type:2, location:11 })">
                    What does "irregularly spaced spatial data" mean?
                </a>

            </li>
            <li class="dno js-hidden">
                <div class="favicon favicon-rpg" title="Role-playing Games Stack Exchange"></div><a href="http://rpg.stackexchange.com/questions/68527/how-to-handle-a-boring-campaign-as-a-player" class="js-gps-track" data-gps-track="site.switch({ item_type:11, target_site:122 }); posts_hot_network.click({ item_type:2, location:11 })">
                    How to handle a boring campaign (as a player)
                </a>

            </li>
            <li class="dno js-hidden">
                <div class="favicon favicon-mathoverflow" title="MathOverflow"></div><a href="http://mathoverflow.net/questions/217854/special-rational-numbers-that-appear-as-answers-to-natural-questions" class="js-gps-track" data-gps-track="site.switch({ item_type:11, target_site:504 }); posts_hot_network.click({ item_type:2, location:11 })">
                    Special rational numbers that appear as answers to natural questions
                </a>

            </li>
            <li class="dno js-hidden">
                <div class="favicon favicon-chemistry" title="Chemistry Stack Exchange"></div><a href="http://chemistry.stackexchange.com/questions/37345/what-does-the-s-mean-in-s-cis-and-s-trans-conformations" class="js-gps-track" data-gps-track="site.switch({ item_type:11, target_site:431 }); posts_hot_network.click({ item_type:2, location:11 })">
                    What does the "s" mean in s-cis and s-trans conformations
                </a>

            </li>
            <li class="dno js-hidden">
                <div class="favicon favicon-electronics" title="Electrical Engineering Stack Exchange"></div><a href="http://electronics.stackexchange.com/questions/190300/why-arent-fpgas-ubiquitous" class="js-gps-track" data-gps-track="site.switch({ item_type:11, target_site:135 }); posts_hot_network.click({ item_type:2, location:11 })">
                    Why aren't FPGA's ubiquitous?
                </a>

            </li>
            <li class="dno js-hidden">
                <div class="favicon favicon-mathoverflow" title="MathOverflow"></div><a href="http://mathoverflow.net/questions/218262/advice-for-phd-supervisors" class="js-gps-track" data-gps-track="site.switch({ item_type:11, target_site:504 }); posts_hot_network.click({ item_type:2, location:11 })">
                    Advice for PhD Supervisors
                </a>

            </li>
            <li class="dno js-hidden">
                <div class="favicon favicon-gis" title="Geographic Information Systems Stack Exchange"></div><a href="http://gis.stackexchange.com/questions/162978/maximizing-the-use-of-cpu" class="js-gps-track" data-gps-track="site.switch({ item_type:11, target_site:79 }); posts_hot_network.click({ item_type:2, location:11 })">
                    Maximizing the use of CPU
                </a>

            </li>
            <li class="dno js-hidden">
                <div class="favicon favicon-movies" title="Movies &amp; TV Stack Exchange"></div><a href="http://movies.stackexchange.com/questions/41119/what-does-a-view-to-a-kill-mean" class="js-gps-track" data-gps-track="site.switch({ item_type:11, target_site:367 }); posts_hot_network.click({ item_type:2, location:11 })">
                    What does "A View to a Kill" mean?
                </a>

            </li>
            <li class="dno js-hidden">
                <div class="favicon favicon-scifi" title="Science Fiction &amp; Fantasy Stack Exchange"></div><a href="http://scifi.stackexchange.com/questions/102847/has-any-star-trek-alien-ever-commented-on-humans-plain-features" class="js-gps-track" data-gps-track="site.switch({ item_type:11, target_site:186 }); posts_hot_network.click({ item_type:2, location:11 })">
                    Has any Star Trek alien ever commented on humans' plain features?
                </a>

            </li>
            <li class="dno js-hidden">
                <div class="favicon favicon-woodworking" title="Woodworking Stack Exchange"></div><a href="http://woodworking.stackexchange.com/questions/2398/how-does-one-aggressively-sharpen-chisels-and-plane-irons-when-damaged" class="js-gps-track" data-gps-track="site.switch({ item_type:11, target_site:603 }); posts_hot_network.click({ item_type:2, location:11 })">
                    How does one aggressively sharpen chisels and plane irons when damaged?
                </a>

            </li>
            <li class="dno js-hidden">
                <div class="favicon favicon-movies" title="Movies &amp; TV Stack Exchange"></div><a href="http://movies.stackexchange.com/questions/41121/why-did-tony-stark-design-the-hulkbuster-armor" class="js-gps-track" data-gps-track="site.switch({ item_type:11, target_site:367 }); posts_hot_network.click({ item_type:2, location:11 })">
                    Why did Tony Stark design the Hulkbuster armor?
                </a>

            </li>
            <li class="dno js-hidden">
                <div class="favicon favicon-stackoverflow" title="Stack Overflow"></div><a href="http://stackoverflow.com/questions/32584490/css-min-width-and-max-width-issue" class="js-gps-track" data-gps-track="site.switch({ item_type:11, target_site:1 }); posts_hot_network.click({ item_type:2, location:11 })">
                    css min-width and max-width issue
                </a>

            </li>
            <li class="dno js-hidden">
                <div class="favicon favicon-workplace" title="The Workplace Stack Exchange"></div><a href="http://workplace.stackexchange.com/questions/54430/is-it-ok-to-take-notes-to-an-interview" class="js-gps-track" data-gps-track="site.switch({ item_type:11, target_site:423 }); posts_hot_network.click({ item_type:2, location:11 })">
                    Is it ok to take notes to an interview
                </a>

            </li>
            <li class="dno js-hidden">
                <div class="favicon favicon-academia" title="Academia Stack Exchange"></div><a href="http://academia.stackexchange.com/questions/54300/how-to-politely-reject-a-request-for-a-letter-of-recommendation-for-a-professor" class="js-gps-track" data-gps-track="site.switch({ item_type:11, target_site:415 }); posts_hot_network.click({ item_type:2, location:11 })">
                    How to politely reject a request for a letter of recommendation for a professor
                </a>

            </li>
            <li class="dno js-hidden">
                <div class="favicon favicon-drupal" title="Drupal Answers"></div><a href="http://drupal.stackexchange.com/questions/174389/how-to-get-list-of-installed-enabled-modules-ready-for-repopulating-new-site-wit" class="js-gps-track" data-gps-track="site.switch({ item_type:11, target_site:220 }); posts_hot_network.click({ item_type:2, location:11 })">
                    How to get list of installed/enabled modules ready for repopulating new site with drush module installation
                </a>

            </li>
            <li class="dno js-hidden">
                <div class="favicon favicon-math" title="Mathematics Stack Exchange"></div><a href="http://math.stackexchange.com/questions/1433899/why-is-lebesgue-so-often-spelled-lebesque" class="js-gps-track" data-gps-track="site.switch({ item_type:11, target_site:69 }); posts_hot_network.click({ item_type:2, location:11 })">
                    Why is Lebesgue so often spelled "Lebesque"?
                </a>

            </li>
            <li class="dno js-hidden">
                <div class="favicon favicon-math" title="Mathematics Stack Exchange"></div><a href="http://math.stackexchange.com/questions/1436254/recommended-books-for-post-degree-casual-reading" class="js-gps-track" data-gps-track="site.switch({ item_type:11, target_site:69 }); posts_hot_network.click({ item_type:2, location:11 })">
                    Recommended books for post degree casual reading
                </a>

            </li>
    </ul>

        <a href="#" class="show-more js-show-more js-gps-track" data-gps-track="posts_hot_network.click({ item_type:3, location:11 })">
            more hot questions
        </a>
</div>
		</div>
	
<div id="feed-link">
    <div id="feed-link-text">
        <a href="http://stackoverflow.com/feeds/question/202011" title="feed of this question and its answers">
            <span class="feed-icon"></span>question feed
        </a>
    </div>
</div>	<script>
StackExchange.ready(function(){$.get('/posts/202011/ivc/6ef3');});
</script>
<noscript>
    <div><img src="/posts/202011/ivc/6ef3" class="dno" alt="" width="0" height="0"></div>
</noscript><div style="display:none" id="prettify-lang">lang-cs</div></div>


        </div>
    </div>
    <div id="footer" class="categories">
        <div class="footerwrap">
            <div id="footer-menu">
                <div class="top-footer-links">
                        <a href="http://stackoverflow.com/tour">tour</a>
                    <a href="http://stackoverflow.com/help">help</a>
                    <a href="http://blog.stackoverflow.com/?blb=1">blog</a>
                        <a href="http://chat.stackoverflow.com/">chat</a>
                    <a href="http://data.stackexchange.com/">data</a>
                    <a href="http://stackexchange.com/legal">legal</a>
                    <a href="http://stackexchange.com/legal/privacy-policy">privacy policy</a>
                    <a href="http://stackexchange.com/work-here">work here</a>
                    <a href="http://stackexchange.com/mediakit">advertising info</a>

                    <a onclick='StackExchange.switchMobile("on")'>mobile</a>
                    <b><a href="http://stackoverflow.com/contact">contact us</a></b>
                        <b><a href="http://meta.stackoverflow.com/">feedback</a></b>
                    
                </div>
                <div id="footer-sites">
                    <table>
    <tbody><tr>
            <th colspan="3">
                Technology
            </th>
            <th>
                Life / Arts
            </th>
            <th>
                Culture / Recreation
            </th>
            <th>
                Science
            </th>
            <th>
                Other
            </th>
    </tr>
    <tr>
            <td>
                <ol>
                        <li><a href="http://stackoverflow.com/" title="professional and enthusiast programmers">Stack Overflow</a></li>
                        <li><a href="http://serverfault.com/" title="system and network administrators">Server Fault</a></li>
                        <li><a href="http://superuser.com/" title="computer enthusiasts and power users">Super User</a></li>
                        <li><a href="http://webapps.stackexchange.com/" title="power users of web applications">Web Applications</a></li>
                        <li><a href="http://askubuntu.com/" title="Ubuntu users and developers">Ask Ubuntu</a></li>
                        <li><a href="http://webmasters.stackexchange.com/" title="pro webmasters">Webmasters</a></li>
                        <li><a href="http://gamedev.stackexchange.com/" title="professional and independent game developers">Game Development</a></li>
                        <li><a href="http://tex.stackexchange.com/" title="users of TeX, LaTeX, ConTeXt, and related typesetting systems">TeX - LaTeX</a></li>
                            </ol></td><td><ol>
                        <li><a href="http://programmers.stackexchange.com/" title="professional programmers interested in conceptual questions about software development">Programmers</a></li>
                        <li><a href="http://unix.stackexchange.com/" title="users of Linux, FreeBSD and other Un*x-like operating systems">Unix &amp; Linux</a></li>
                        <li><a href="http://apple.stackexchange.com/" title="power users of Apple hardware and software">Ask Different (Apple)</a></li>
                        <li><a href="http://wordpress.stackexchange.com/" title="WordPress developers and administrators">WordPress Development</a></li>
                        <li><a href="http://gis.stackexchange.com/" title="cartographers, geographers and GIS professionals">Geographic Information Systems</a></li>
                        <li><a href="http://electronics.stackexchange.com/" title="electronics and electrical engineering professionals, students, and enthusiasts">Electrical Engineering</a></li>
                        <li><a href="http://android.stackexchange.com/" title="enthusiasts and power users of the Android operating system">Android Enthusiasts</a></li>
                        <li><a href="http://security.stackexchange.com/" title="information security professionals">Information Security</a></li>
                            </ol></td><td><ol>
                        <li><a href="http://dba.stackexchange.com/" title="database professionals who wish to improve their database skills and learn from others in the community">Database Administrators</a></li>
                        <li><a href="http://drupal.stackexchange.com/" title="Drupal developers and administrators">Drupal Answers</a></li>
                        <li><a href="http://sharepoint.stackexchange.com/" title="SharePoint enthusiasts">SharePoint</a></li>
                        <li><a href="http://ux.stackexchange.com/" title="user experience researchers and experts">User Experience</a></li>
                        <li><a href="http://mathematica.stackexchange.com/" title="users of Mathematica">Mathematica</a></li>
                        <li><a href="http://salesforce.stackexchange.com/" title="Salesforce administrators, implementation experts, developers and anybody in-between">Salesforce</a></li>
                        <li><a href="http://expressionengine.stackexchange.com/" title="administrators, end users, developers and designers for ExpressionEngine® CMS">ExpressionEngine® Answers</a></li>
                    
                        <li>
                            <a href="http://stackexchange.com/sites#technology" class="more">
                                more (13)
                            </a>
                        </li>
                </ol>
            </td>
            <td>
                <ol>
                        <li><a href="http://photo.stackexchange.com/" title="professional, enthusiast and amateur photographers">Photography</a></li>
                        <li><a href="http://scifi.stackexchange.com/" title="science fiction and fantasy enthusiasts">Science Fiction &amp; Fantasy</a></li>
                        <li><a href="http://graphicdesign.stackexchange.com/" title="Graphic Design professionals, students, and enthusiasts">Graphic Design</a></li>
                        <li><a href="http://movies.stackexchange.com/" title="movie and tv enthusiasts">Movies &amp; TV</a></li>
                        <li><a href="http://cooking.stackexchange.com/" title="professional and amateur chefs">Seasoned Advice (cooking)</a></li>
                        <li><a href="http://diy.stackexchange.com/" title="contractors and serious DIYers">Home Improvement</a></li>
                        <li><a href="http://money.stackexchange.com/" title="people who want to be financially literate">Personal Finance &amp; Money</a></li>
                        <li><a href="http://academia.stackexchange.com/" title="academics and those enrolled in higher education">Academia</a></li>
                    
                        <li>
                            <a href="http://stackexchange.com/sites#lifearts" class="more">
                                more (9)
                            </a>
                        </li>
                </ol>
            </td>
            <td>
                <ol>
                        <li><a href="http://english.stackexchange.com/" title="linguists, etymologists, and serious English language enthusiasts">English Language &amp; Usage</a></li>
                        <li><a href="http://skeptics.stackexchange.com/" title="scientific skepticism">Skeptics</a></li>
                        <li><a href="http://judaism.stackexchange.com/" title="those who base their lives on Jewish law and tradition and anyone interested in learning more">Mi Yodeya (Judaism)</a></li>
                        <li><a href="http://travel.stackexchange.com/" title="road warriors and seasoned travelers">Travel</a></li>
                        <li><a href="http://christianity.stackexchange.com/" title="committed Christians, experts in Christianity and those interested in learning more">Christianity</a></li>
                        <li><a href="http://gaming.stackexchange.com/" title="passionate videogamers on all platforms">Arqade (gaming)</a></li>
                        <li><a href="http://bicycles.stackexchange.com/" title="people who build and repair bicycles, people who train cycling, or commute on bicycles">Bicycles</a></li>
                        <li><a href="http://rpg.stackexchange.com/" title="gamemasters and players of tabletop, paper-and-pencil role-playing games">Role-playing Games</a></li>
                    
                        <li>
                            <a href="http://stackexchange.com/sites#culturerecreation" class="more">
                                more (21)
                            </a>
                        </li>
                </ol>
            </td>
            <td>
                <ol>
                        <li><a href="http://math.stackexchange.com/" title="people studying math at any level and professionals in related fields">Mathematics</a></li>
                        <li><a href="http://stats.stackexchange.com/" title="people interested in statistics, machine learning, data analysis, data mining, and data visualization">Cross Validated (stats)</a></li>
                        <li><a href="http://cstheory.stackexchange.com/" title="theoretical computer scientists and researchers in related fields">Theoretical Computer Science</a></li>
                        <li><a href="http://physics.stackexchange.com/" title="active researchers, academics and students of physics">Physics</a></li>
                        <li><a href="http://mathoverflow.net/" title="professional mathematicians">MathOverflow</a></li>
                        <li><a href="http://chemistry.stackexchange.com/" title="scientists, academics, teachers and students">Chemistry</a></li>
                        <li><a href="http://biology.stackexchange.com/" title="biology researchers, academics, and students">Biology</a></li>
                    
                        <li>
                            <a href="http://stackexchange.com/sites#science" class="more">
                                more (5)
                            </a>
                        </li>
                </ol>
            </td>
            <td>
                <ol>
                        <li><a href="http://stackapps.com/" title="apps, scripts, and development with the Stack Exchange API">Stack Apps</a></li>
                        <li><a href="http://meta.stackexchange.com/" title="meta-discussion of the Stack Exchange family of Q&amp;A websites">Meta Stack Exchange</a></li>
                        <li><a href="http://area51.stackexchange.com/" title="proposing new sites in the Stack Exchange network">Area 51</a></li>
                        <li><a href="http://careers.stackoverflow.com/">Stack Overflow Careers</a></li>
                    
                </ol>
            </td>
    </tr>
</tbody></table>
                </div>
            </div>

            <div id="copyright">
                site design / logo © 2015 Stack Exchange Inc; user contributions licensed under <a href="http://creativecommons.org/licenses/by-sa/3.0/" rel="license">cc by-sa 3.0</a> 
                with <a href="http://blog.stackoverflow.com/2009/06/attribution-required/" rel="license">attribution required</a>
            </div>
            <div id="svnrev">
                rev 2015.9.15.2820
            </div>
            
        </div>
    </div>
    <noscript>
        <div id="noscript-warning">Stack Overflow works best with JavaScript enabled<img src="http://pixel.quantserve.com/pixel/p-c1rF4kxgLUzNc.gif" alt="" class="dno"></div>
    </noscript>
<script>var p = "http", d = "static"; if (document.location.protocol == "https:") { p += "s"; d = "engine"; } var z = document.createElement("script"); z.type = "text/javascript"; z.async = true; z.src = p + "://" + d + ".adzerk.net/ados.js"; var s = document.getElementsByTagName("script")[0]; s.parentNode.insertBefore(z, s);</script>
<script>
    var ados = ados || {};
    ados.run = ados.run || [];
    ados.run.push(function () { ados_setKeywords('c%23,.net,encryption,mono,cryptography');; ados_load(); });         
</script>

    <script>
        (function (i, s, o, g, r, a, m) {
            i['GoogleAnalyticsObject'] = r; i[r] = i[r] || function () { (i[r].q = i[r].q || []).push(arguments) }, i[r].l = 1 * new Date(); a = s.createElement(o),
            m = s.getElementsByTagName(o)[0]; a.async = 1; a.src = g; m.parentNode.insertBefore(a, m);
        })(window, document, 'script', '//www.google-analytics.com/analytics.js', 'ga');
        ga('create', 'UA-5620270-1');
                        ga('set', 'dimension2', '|c#|.net|encryption|mono|cryptography|');         ga('send', 'pageview');
        var _qevents = _qevents || [],
            _comscore = _comscore || [];
        (function () {
            var ssl='https:'==document.location.protocol,
                s=document.getElementsByTagName('script')[0],
                qc=document.createElement('script');
            qc.async=true;
            qc.src=(ssl?'https://secure':'http://edge')+'.quantserve.com/quant.js';
            s.parentNode.insertBefore(qc, s);
            var sc=document.createElement('script');
            sc.async=true;
            sc.src=(ssl?'https://sb':'http://b') + '.scorecardresearch.com/beacon.js';
            s.parentNode.insertBefore(sc, s);
        })();
        _comscore.push({ c1: "2", c2: "17440561" });
        _qevents.push({ qacct: "p-c1rF4kxgLUzNc" });
    </script>
            
    
</body></html>